{"version":3,"sources":["../../../src/stress/device/bind_group_allocation.spec.ts"],"names":["description","makeTestGroup","GPUTest","g","test","desc","fn","t","kNumGroups","buffer","device","createBuffer","size","usage","GPUBufferUsage","STORAGE","layout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","type","bindGroups","i","push","createBindGroup","resource"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,sCAA9B;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,OAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,YAAP;AACGC,IADH,CACS,2DADT;AAEGC,EAFH,CAEMC,CAAC,IAAI;AACP,QAAMC,UAAU,GAAG,SAAnB;AACA,QAAMC,MAAM,GAAGF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB;AACnCC,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAEC,cAAc,CAACC,OAFa,EAAtB,CAAf;;AAIA,QAAMC,MAAM,GAAGT,CAAC,CAACG,MAAF,CAASO,qBAAT,CAA+B;AAC5CC,IAAAA,OAAO,EAAE;AACP;AACEC,MAAAA,OAAO,EAAE,CADX;AAEEC,MAAAA,UAAU,EAAEC,cAAc,CAACC,OAF7B;AAGEb,MAAAA,MAAM,EAAE,EAAEc,IAAI,EAAE,SAAR,EAHV,EADO,CADmC,EAA/B,CAAf;;;;AASA,QAAMC,UAAU,GAAG,EAAnB;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,UAApB,EAAgC,EAAEiB,CAAlC,EAAqC;AACnCD,IAAAA,UAAU,CAACE,IAAX;AACEnB,IAAAA,CAAC,CAACG,MAAF,CAASiB,eAAT,CAAyB;AACvBX,MAAAA,MADuB;AAEvBE,MAAAA,OAAO,EAAE,CAAC,EAAEC,OAAO,EAAE,CAAX,EAAcS,QAAQ,EAAE,EAAEnB,MAAF,EAAxB,EAAD,CAFc,EAAzB,CADF;;;AAMD;AACF,CA1BH;;AA4BAN,CAAC,CAACC,IAAF,CAAO,YAAP;AACGC,IADH;AAEK;AACL;AACA,YAJA;;AAMGC,EANH,CAMMC,CAAC,IAAI;AACP,QAAMC,UAAU,GAAG,SAAnB;AACA,QAAMC,MAAM,GAAGF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB;AACnCC,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAEC,cAAc,CAACC,OAFa,EAAtB,CAAf;;AAIA,QAAMC,MAAM,GAAGT,CAAC,CAACG,MAAF,CAASO,qBAAT,CAA+B;AAC5CC,IAAAA,OAAO,EAAE;AACP;AACEC,MAAAA,OAAO,EAAE,CADX;AAEEC,MAAAA,UAAU,EAAEC,cAAc,CAACC,OAF7B;AAGEb,MAAAA,MAAM,EAAE,EAAEc,IAAI,EAAE,SAAR,EAHV,EADO,CADmC,EAA/B,CAAf;;;;AASA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,UAApB,EAAgC,EAAEiB,CAAlC,EAAqC;AACnClB,IAAAA,CAAC,CAACG,MAAF,CAASiB,eAAT,CAAyB;AACvBX,MAAAA,MADuB;AAEvBE,MAAAA,OAAO,EAAE,CAAC,EAAEC,OAAO,EAAE,CAAX,EAAcS,QAAQ,EAAE,EAAEnB,MAAF,EAAxB,EAAD,CAFc,EAAzB;;AAID;AACF,CA3BH","sourcesContent":["export const description = `\nStress tests for allocation of GPUBindGroup objects through GPUDevice.\n`;\n\nimport { makeTestGroup } from '../../common/framework/test_group.js';\nimport { GPUTest } from '../../webgpu/gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('coexisting')\n  .desc(`Tests allocation of many coexisting GPUBindGroup objects.`)\n  .fn(t => {\n    const kNumGroups = 1_000_000;\n    const buffer = t.device.createBuffer({\n      size: 64,\n      usage: GPUBufferUsage.STORAGE,\n    });\n    const layout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          buffer: { type: 'storage' },\n        },\n      ],\n    });\n    const bindGroups = [];\n    for (let i = 0; i < kNumGroups; ++i) {\n      bindGroups.push(\n        t.device.createBindGroup({\n          layout,\n          entries: [{ binding: 0, resource: { buffer } }],\n        })\n      );\n    }\n  });\n\ng.test('continuous')\n  .desc(\n    `Tests allocation and implicit GC of many GPUBindGroup objects over time.\nObjects are sequentially created and dropped for GC over a very large number of\niterations.`\n  )\n  .fn(t => {\n    const kNumGroups = 5_000_000;\n    const buffer = t.device.createBuffer({\n      size: 64,\n      usage: GPUBufferUsage.STORAGE,\n    });\n    const layout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE,\n          buffer: { type: 'storage' },\n        },\n      ],\n    });\n    for (let i = 0; i < kNumGroups; ++i) {\n      t.device.createBindGroup({\n        layout,\n        entries: [{ binding: 0, resource: { buffer } }],\n      });\n    }\n  });\n"],"file":"bind_group_allocation.spec.js"}