{"version":3,"sources":["../../../src/stress/memory/oom.spec.ts"],"names":["description","makeTestGroup","GPUTest","exhaustVramUntilUnder64MB","g","test","desc","fn","t","device","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,sCAA9B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,yBAAT,QAA0C,6BAA1C;;AAEA,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACC,OAAD,CAAvB;;AAEPE,CAAC,CAACC,IAAF,CAAO,UAAP;AACGC,IADH,CACS,8DADT;AAEGC,EAFH,CAEM,MAAMC,CAAN,IAAW;AACb,QAAML,yBAAyB,CAACK,CAAC,CAACC,MAAH,CAA/B;AACD,CAJH;;AAMAL,CAAC,CAACC,IAAF,CAAO,kBAAP;AACGC,IADH;AAEK;AACL;AACA,gBAJA;;AAMGI,aANH;;AAQAN,CAAC,CAACC,IAAF,CAAO,oBAAP;AACGC,IADH;AAEK;AACL;AACA,sCAJA;;AAMGI,aANH;;AAQAN,CAAC,CAACC,IAAF,CAAO,mBAAP;AACGC,IADH;AAEK;AACL,kCAHA;;AAKGI,aALH;;AAOAN,CAAC,CAACC,IAAF,CAAO,UAAP;AACGC,IADH;AAEK;AACL,sCAHA;;AAKGI,aALH","sourcesContent":["export const description = `\nStress tests covering robustness when available VRAM is exhausted.\n`;\n\nimport { makeTestGroup } from '../../common/framework/test_group.js';\nimport { GPUTest } from '../../webgpu/gpu_test.js';\nimport { exhaustVramUntilUnder64MB } from '../../webgpu/util/memory.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('vram_oom')\n  .desc(`Tests that we can allocate buffers until we run out of VRAM.`)\n  .fn(async t => {\n    await exhaustVramUntilUnder64MB(t.device);\n  });\n\ng.test('get_mapped_range')\n  .desc(\n    `Tests getMappedRange on a mappedAtCreation GPUBuffer that failed allocation due\nto OOM. This should throw a RangeError, but below a certain threshold may just\ncrash the page.`\n  )\n  .unimplemented();\n\ng.test('map_after_vram_oom')\n  .desc(\n    `Allocates tons of buffers and textures with varying mapping states (unmappable,\nmappable, mapAtCreation, mapAtCreation-then-unmapped) until OOM; then attempts\nto mapAsync all the mappable objects.`\n  )\n  .unimplemented();\n\ng.test('validation_vs_oom')\n  .desc(\n    `Tests that calls affected by both OOM and validation errors expose the\nvalidation error with precedence.`\n  )\n  .unimplemented();\n\ng.test('recovery')\n  .desc(\n    `Tests that after going VRAM-OOM, destroying allocated resources eventually\nallows new resources to be allocated.`\n  )\n  .unimplemented();\n"],"file":"oom.spec.js"}