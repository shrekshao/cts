{"version":3,"sources":["../../../src/common/util/colors.ts"],"names":["Colors","require","passthrough","s","enabled","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","grey","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright"],"mappings":"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","sourcesContent":["/**\n * The interface used for formatting strings to contain color metadata.\n *\n * Use the interface properties to construct a style, then use the\n * `(s: string): string` function to format the provided string with the given\n * style.\n */\nexport interface Colors {\n  // Are colors enabled?\n  enabled: boolean;\n\n  // Returns the string formatted to contain the specified color or style.\n  (s: string): string;\n\n  // modifiers\n  reset: Colors;\n  bold: Colors;\n  dim: Colors;\n  italic: Colors;\n  underline: Colors;\n  inverse: Colors;\n  hidden: Colors;\n  strikethrough: Colors;\n\n  // colors\n  black: Colors;\n  red: Colors;\n  green: Colors;\n  yellow: Colors;\n  blue: Colors;\n  magenta: Colors;\n  cyan: Colors;\n  white: Colors;\n  gray: Colors;\n  grey: Colors;\n\n  // bright colors\n  blackBright: Colors;\n  redBright: Colors;\n  greenBright: Colors;\n  yellowBright: Colors;\n  blueBright: Colors;\n  magentaBright: Colors;\n  cyanBright: Colors;\n  whiteBright: Colors;\n\n  // background colors\n  bgBlack: Colors;\n  bgRed: Colors;\n  bgGreen: Colors;\n  bgYellow: Colors;\n  bgBlue: Colors;\n  bgMagenta: Colors;\n  bgCyan: Colors;\n  bgWhite: Colors;\n\n  // bright background colors\n  bgBlackBright: Colors;\n  bgRedBright: Colors;\n  bgGreenBright: Colors;\n  bgYellowBright: Colors;\n  bgBlueBright: Colors;\n  bgMagentaBright: Colors;\n  bgCyanBright: Colors;\n  bgWhiteBright: Colors;\n}\n\n/**\n * The interface used for formatting strings with color metadata.\n *\n * Currently Colors will use the 'ansi-colors' module if it can be loaded.\n * If it cannot be loaded, then the Colors implementation is a straight pass-through.\n *\n * Colors may also be a no-op if the current environment does not support colors.\n */\nexport let Colors: Colors;\n\ntry {\n  /* eslint-disable-next-line node/no-unpublished-require */\n  Colors = require('ansi-colors') as Colors;\n} catch {\n  const passthrough = ((s: string) => s) as Colors;\n  passthrough.enabled = false;\n  passthrough.reset = passthrough;\n  passthrough.bold = passthrough;\n  passthrough.dim = passthrough;\n  passthrough.italic = passthrough;\n  passthrough.underline = passthrough;\n  passthrough.inverse = passthrough;\n  passthrough.hidden = passthrough;\n  passthrough.strikethrough = passthrough;\n  passthrough.black = passthrough;\n  passthrough.red = passthrough;\n  passthrough.green = passthrough;\n  passthrough.yellow = passthrough;\n  passthrough.blue = passthrough;\n  passthrough.magenta = passthrough;\n  passthrough.cyan = passthrough;\n  passthrough.white = passthrough;\n  passthrough.gray = passthrough;\n  passthrough.grey = passthrough;\n  passthrough.blackBright = passthrough;\n  passthrough.redBright = passthrough;\n  passthrough.greenBright = passthrough;\n  passthrough.yellowBright = passthrough;\n  passthrough.blueBright = passthrough;\n  passthrough.magentaBright = passthrough;\n  passthrough.cyanBright = passthrough;\n  passthrough.whiteBright = passthrough;\n  passthrough.bgBlack = passthrough;\n  passthrough.bgRed = passthrough;\n  passthrough.bgGreen = passthrough;\n  passthrough.bgYellow = passthrough;\n  passthrough.bgBlue = passthrough;\n  passthrough.bgMagenta = passthrough;\n  passthrough.bgCyan = passthrough;\n  passthrough.bgWhite = passthrough;\n  passthrough.bgBlackBright = passthrough;\n  passthrough.bgRedBright = passthrough;\n  passthrough.bgGreenBright = passthrough;\n  passthrough.bgYellowBright = passthrough;\n  passthrough.bgBlueBright = passthrough;\n  passthrough.bgMagentaBright = passthrough;\n  passthrough.bgCyanBright = passthrough;\n  passthrough.bgWhiteBright = passthrough;\n  Colors = passthrough;\n}\n"],"file":"colors.js"}