{"version":3,"sources":["../../../src/common/tools/dev_server.ts"],"names":["os","path","babel","chokidar","express","morgan","portfinder","makeListing","process","env","STANDALONE_DEV_SERVER","srcDir","resolve","__dirname","babelConfig","require","cache","sourceMaps","listingCache","Map","compileCache","console","log","watcher","watch","persistent","dirtyCompileCache","absPath","stats","relPath","relative","undefined","isFile","endsWith","tsUrl","has","debug","delete","dirtyListingAndCompileCache","segments","split","sep","listingChange","extname","basename","length","suite","on","app","use","static","get","req","res","next","params","setHeader","send","listing","result","JSON","stringify","set","err","url","replace","join","transformFileAsync","code","Error","host","port","getPort","listen","iface","Object","values","networkInterfaces","details","family","address"],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\nimport * as babel from '@babel/core';\nimport * as chokidar from 'chokidar';\nimport * as express from 'express';\nimport * as morgan from 'morgan';\nimport * as portfinder from 'portfinder';\n\nimport { makeListing } from './crawl.js';\n\n// Make sure that makeListing doesn't cache imported spec files. See crawl().\nprocess.env.STANDALONE_DEV_SERVER = '1';\n\nconst srcDir = path.resolve(__dirname, '../../');\n\n// Import the project's babel.config.js. We'll use the same config for the runtime compiler.\nconst babelConfig = {\n  ...require(path.resolve(srcDir, '../babel.config.js'))({\n    cache: () => {\n      /* not used */\n    },\n  }),\n  sourceMaps: 'inline',\n};\n\n// Caches for the generated listing file and compiled TS sources to speed up reloads.\n// Keyed by suite name\nconst listingCache = new Map<string, string>();\n// Keyed by the path to the .ts file, without src/\nconst compileCache = new Map<string, string>();\n\nconsole.log('Watching changes in', srcDir);\nconst watcher = chokidar.watch(srcDir, {\n  persistent: true,\n});\n\n/**\n * Handler to dirty the compile cache for changed .ts files.\n */\nfunction dirtyCompileCache(absPath: string, stats?: fs.Stats) {\n  const relPath = path.relative(srcDir, absPath);\n  if ((stats === undefined || stats.isFile()) && relPath.endsWith('.ts')) {\n    const tsUrl = relPath;\n    if (compileCache.has(tsUrl)) {\n      console.debug('Dirtying compile cache', tsUrl);\n    }\n    compileCache.delete(tsUrl);\n  }\n}\n\n/**\n * Handler to dirty the listing cache for:\n *  - Directory changes\n *  - .spec.ts changes\n *  - README.txt changes\n * Also dirties the compile cache for changed files.\n */\nfunction dirtyListingAndCompileCache(absPath: string, stats?: fs.Stats) {\n  const relPath = path.relative(srcDir, absPath);\n\n  const segments = relPath.split(path.sep);\n  // The listing changes if the directories change, or if a .spec.ts file is added/removed.\n  const listingChange =\n    // A directory or a file with no extension that we can't stat.\n    // (stat doesn't work for deletions)\n    ((path.extname(relPath) === '' && (stats === undefined || !stats.isFile())) ||\n      // A spec file\n      relPath.endsWith('.spec.ts') ||\n      // A README.txt\n      path.basename(relPath, 'txt') === 'README') &&\n    segments.length > 0;\n  if (listingChange) {\n    const suite = segments[0];\n    if (listingCache.has(suite)) {\n      console.debug('Dirtying listing cache', suite);\n    }\n    listingCache.delete(suite);\n  }\n\n  dirtyCompileCache(absPath, stats);\n}\n\nwatcher.on('add', dirtyListingAndCompileCache);\nwatcher.on('unlink', dirtyListingAndCompileCache);\nwatcher.on('addDir', dirtyListingAndCompileCache);\nwatcher.on('unlinkDir', dirtyListingAndCompileCache);\nwatcher.on('change', dirtyCompileCache);\n\nconst app = express();\n\n// Set up logging\napp.use(morgan('dev'));\n\n// Serve the standalone runner directory\napp.use('/standalone', express.static(path.resolve(srcDir, '../standalone')));\n// Add out-wpt/ build dir for convenience\napp.use('/out-wpt', express.static(path.resolve(srcDir, '../out-wpt')));\napp.use('/docs/tsdoc', express.static(path.resolve(srcDir, '../docs/tsdoc')));\n\n// Serve a suite's listing.js file by crawling the filesystem for all tests.\napp.get('/out/:suite/listing.js', async (req, res, next) => {\n  const suite = req.params['suite'];\n\n  if (listingCache.has(suite)) {\n    res.setHeader('Content-Type', 'application/javascript');\n    res.send(listingCache.get(suite));\n    return;\n  }\n\n  try {\n    const listing = await makeListing(path.resolve(srcDir, suite, 'listing.ts'));\n    const result = `export const listing = ${JSON.stringify(listing, undefined, 2)}`;\n\n    listingCache.set(suite, result);\n    res.setHeader('Content-Type', 'application/javascript');\n    res.send(result);\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Serve all other .js files by fetching the source .ts file and compiling it.\napp.get('/out/**/*.js', async (req, res, next) => {\n  const tsUrl = path.relative('/out', req.url).replace(/\\.js$/, '.ts');\n  if (compileCache.has(tsUrl)) {\n    res.setHeader('Content-Type', 'application/javascript');\n    res.send(compileCache.get(tsUrl));\n    return;\n  }\n\n  const absPath = path.join(srcDir, tsUrl);\n\n  try {\n    const result = await babel.transformFileAsync(absPath, babelConfig);\n    if (result && result.code) {\n      compileCache.set(tsUrl, result.code);\n\n      res.setHeader('Content-Type', 'application/javascript');\n      res.send(result.code);\n    } else {\n      throw new Error(`Failed compile ${tsUrl}.`);\n    }\n  } catch (err) {\n    next(err);\n  }\n});\n\nconst host = '0.0.0.0';\nconst port = 8080;\n// Find an available port, starting at 8080.\nportfinder.getPort({ host, port }, (err, port) => {\n  if (err) {\n    throw err;\n  }\n  watcher.on('ready', () => {\n    // Listen on the available port.\n    app.listen(port, host, () => {\n      console.log('Standalone test runner running at:');\n      for (const iface of Object.values(os.networkInterfaces())) {\n        for (const details of iface || []) {\n          if (details.family === 'IPv4') {\n            console.log(`  http://${details.address}:${port}/standalone/`);\n          }\n        }\n      }\n    });\n  });\n});\n\n// Serve everything else (not .js) as static, and directories as directory listings.\napp.use('/out', express.static(path.resolve(srcDir, '../src')));\n"],"file":"dev_server.js"}