{"version":3,"sources":["../../../src/common/runtime/cmdline.ts"],"names":["DefaultTestFileLoader","prettyPrintLog","Logger","parseQuery","parseExpectationsForTestQuery","Colors","setGPUProvider","assert","unreachable","sys","usage","rc","console","log","type","exit","enabled","verbose","listMode","debug","printJSON","quiet","loadWebGPUExpectations","undefined","gpuProviderModule","queries","gpuProviderFlags","i","args","length","a","startsWith","expectationsFile","URL","cwd","pathname","then","m","expectations","modulePath","require","push","create","loader","filterQuery","testcases","loadCases","globalDebugMode","failed","warned","skipped","total","testcase","name","query","toString","isUnimplemented","rec","res","record","run","printResults","status","asJSON","passed","pct","x","toFixed","rpt","xs","padStart","Math","log10","catch","ex","stack","results","r","timems","logs","l"],"mappings":"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","sourcesContent":["/* eslint no-console: \"off\" */\n\nimport { DefaultTestFileLoader } from '../internal/file_loader.js';\nimport { prettyPrintLog } from '../internal/logging/log_message.js';\nimport { Logger } from '../internal/logging/logger.js';\nimport { LiveTestCaseResult } from '../internal/logging/result.js';\nimport { parseQuery } from '../internal/query/parseQuery.js';\nimport { parseExpectationsForTestQuery } from '../internal/query/query.js';\nimport { Colors } from '../util/colors.js';\nimport { setGPUProvider } from '../util/navigator_gpu.js';\nimport { assert, unreachable } from '../util/util.js';\n\nimport sys from './helper/sys.js';\n\nfunction usage(rc: number): never {\n  console.log('Usage:');\n  console.log(`  tools/run_${sys.type} [OPTIONS...] QUERIES...`);\n  console.log(`  tools/run_${sys.type} 'unittests:*' 'webgpu:buffers,*'`);\n  console.log('Options:');\n  console.log('  --colors             Enable ANSI colors in output.');\n  console.log('  --verbose            Print result/log of every test as it runs.');\n  console.log(\n    '  --list               Print all testcase names that match the given query and exit.'\n  );\n  console.log('  --debug              Include debug messages in logging.');\n  console.log('  --print-json         Print the complete result JSON in the output.');\n  console.log('  --expectations       Path to expectations file.');\n  console.log('  --gpu-provider       Path to node module that provides the GPU implementation.');\n  console.log('  --gpu-provider-flag  Flag to set on the gpu-provider as <flag>=<value>');\n  console.log('  --quiet              Suppress summary information in output');\n  return sys.exit(rc);\n}\n\ninterface GPUProviderModule {\n  create(flags: string[]): GPU;\n}\n\ntype listModes = 'none' | 'cases' | 'unimplemented';\n\nColors.enabled = false;\n\nlet verbose = false;\nlet listMode: listModes = 'none';\nlet debug = false;\nlet printJSON = false;\nlet quiet = false;\nlet loadWebGPUExpectations: Promise<unknown> | undefined = undefined;\nlet gpuProviderModule: GPUProviderModule | undefined = undefined;\n\nconst queries: string[] = [];\nconst gpuProviderFlags: string[] = [];\nfor (let i = 0; i < sys.args.length; ++i) {\n  const a = sys.args[i];\n  if (a.startsWith('-')) {\n    if (a === '--colors') {\n      Colors.enabled = true;\n    } else if (a === '--verbose') {\n      verbose = true;\n    } else if (a === '--list') {\n      listMode = 'cases';\n    } else if (a === '--list-unimplemented') {\n      listMode = 'unimplemented';\n    } else if (a === '--debug') {\n      debug = true;\n    } else if (a === '--print-json') {\n      printJSON = true;\n    } else if (a === '--expectations') {\n      const expectationsFile = new URL(sys.args[++i], `file://${sys.cwd()}`).pathname;\n      loadWebGPUExpectations = import(expectationsFile).then(m => m.expectations);\n    } else if (a === '--gpu-provider') {\n      const modulePath = sys.args[++i];\n      gpuProviderModule = require(modulePath);\n    } else if (a === '--gpu-provider-flag') {\n      gpuProviderFlags.push(sys.args[++i]);\n    } else if (a === '--quiet') {\n      quiet = true;\n    } else {\n      console.log('unrecognized flag: ', a);\n      usage(1);\n    }\n  } else {\n    queries.push(a);\n  }\n}\n\nif (gpuProviderModule) {\n  setGPUProvider(() => gpuProviderModule!.create(gpuProviderFlags));\n}\n\nif (queries.length === 0) {\n  console.log('no queries specified');\n  usage(0);\n}\n\n(async () => {\n  const loader = new DefaultTestFileLoader();\n  assert(queries.length === 1, 'currently, there must be exactly one query on the cmd line');\n  const filterQuery = parseQuery(queries[0]);\n  const testcases = await loader.loadCases(filterQuery);\n  const expectations = parseExpectationsForTestQuery(\n    await (loadWebGPUExpectations ?? []),\n    filterQuery\n  );\n\n  Logger.globalDebugMode = debug;\n  const log = new Logger();\n\n  const failed: Array<[string, LiveTestCaseResult]> = [];\n  const warned: Array<[string, LiveTestCaseResult]> = [];\n  const skipped: Array<[string, LiveTestCaseResult]> = [];\n\n  let total = 0;\n\n  for (const testcase of testcases) {\n    const name = testcase.query.toString();\n    switch (listMode) {\n      case 'cases':\n        console.log(name);\n        continue;\n      case 'unimplemented':\n        if (testcase.isUnimplemented) {\n          console.log(name);\n        }\n        continue;\n      default:\n        break;\n    }\n\n    const [rec, res] = log.record(name);\n    await testcase.run(rec, expectations);\n\n    if (verbose) {\n      printResults([[name, res]]);\n    }\n\n    total++;\n    switch (res.status) {\n      case 'pass':\n        break;\n      case 'fail':\n        failed.push([name, res]);\n        break;\n      case 'warn':\n        warned.push([name, res]);\n        break;\n      case 'skip':\n        skipped.push([name, res]);\n        break;\n      default:\n        unreachable('unrecognized status');\n    }\n  }\n\n  if (listMode !== 'none') {\n    return;\n  }\n\n  assert(total > 0, 'found no tests!');\n\n  // MAINTENANCE_TODO: write results out somewhere (a file?)\n  if (printJSON) {\n    console.log(log.asJSON(2));\n  }\n\n  if (!quiet) {\n    if (skipped.length) {\n      console.log('');\n      console.log('** Skipped **');\n      printResults(skipped);\n    }\n    if (warned.length) {\n      console.log('');\n      console.log('** Warnings **');\n      printResults(warned);\n    }\n    if (failed.length) {\n      console.log('');\n      console.log('** Failures **');\n      printResults(failed);\n    }\n\n    const passed = total - warned.length - failed.length - skipped.length;\n    const pct = (x: number) => ((100 * x) / total).toFixed(2);\n    const rpt = (x: number) => {\n      const xs = x.toString().padStart(1 + Math.log10(total), ' ');\n      return `${xs} / ${total} = ${pct(x).padStart(6, ' ')}%`;\n    };\n    console.log('');\n    console.log(`** Summary **\nPassed  w/o warnings = ${rpt(passed)}\nPassed with warnings = ${rpt(warned.length)}\nSkipped              = ${rpt(skipped.length)}\nFailed               = ${rpt(failed.length)}`);\n  }\n\n  if (failed.length || warned.length) {\n    sys.exit(1);\n  }\n})().catch(ex => {\n  console.log(ex.stack ?? ex.toString());\n  sys.exit(1);\n});\n\nfunction printResults(results: Array<[string, LiveTestCaseResult]>): void {\n  for (const [name, r] of results) {\n    console.log(`[${r.status}] ${name} (${r.timems}ms). Log:`);\n    if (r.logs) {\n      for (const l of r.logs) {\n        console.log(prettyPrintLog(l));\n      }\n    }\n  }\n}\n"],"file":"cmdline.js"}