{"version":3,"file":"cmdline.js","names":["fs","dataCache","DefaultTestFileLoader","prettyPrintLog","Logger","parseQuery","parseExpectationsForTestQuery","Colors","setGPUProvider","assert","unreachable","sys","usage","rc","console","log","type","exit","enabled","verbose","listMode","debug","printJSON","quiet","loadWebGPUExpectations","undefined","gpuProviderModule","dataPath","queries","gpuProviderFlags","i","args","length","a","startsWith","expectationsFile","URL","cwd","pathname","then","m","expectations","modulePath","require","push","create","setStore","load","path","Promise","resolve","reject","readFile","err","data","message","setDebugLogger","loader","filterQuery","testcases","loadCases","globalDebugMode","failed","warned","skipped","total","testcase","name","query","toString","isUnimplemented","rec","res","record","run","printResults","status","asJSON","passed","pct","x","toFixed","rpt","xs","padStart","Math","log10","catch","ex","stack","results","r","timems","logs","l"],"sources":["../../../src/common/runtime/cmdline.ts"],"sourcesContent":["/* eslint no-console: \"off\" */\n\nimport * as fs from 'fs';\n\nimport { dataCache } from '../framework/data_cache.js';\nimport { DefaultTestFileLoader } from '../internal/file_loader.js';\nimport { prettyPrintLog } from '../internal/logging/log_message.js';\nimport { Logger } from '../internal/logging/logger.js';\nimport { LiveTestCaseResult } from '../internal/logging/result.js';\nimport { parseQuery } from '../internal/query/parseQuery.js';\nimport { parseExpectationsForTestQuery } from '../internal/query/query.js';\nimport { Colors } from '../util/colors.js';\nimport { setGPUProvider } from '../util/navigator_gpu.js';\nimport { assert, unreachable } from '../util/util.js';\n\nimport sys from './helper/sys.js';\n\nfunction usage(rc: number): never {\n  console.log('Usage:');\n  console.log(`  tools/run_${sys.type} [OPTIONS...] QUERIES...`);\n  console.log(`  tools/run_${sys.type} 'unittests:*' 'webgpu:buffers,*'`);\n  console.log('Options:');\n  console.log('  --colors             Enable ANSI colors in output.');\n  console.log('  --verbose            Print result/log of every test as it runs.');\n  console.log(\n    '  --list               Print all testcase names that match the given query and exit.'\n  );\n  console.log('  --debug              Include debug messages in logging.');\n  console.log('  --print-json         Print the complete result JSON in the output.');\n  console.log('  --expectations       Path to expectations file.');\n  console.log('  --gpu-provider       Path to node module that provides the GPU implementation.');\n  console.log('  --gpu-provider-flag  Flag to set on the gpu-provider as <flag>=<value>');\n  console.log('  --quiet              Suppress summary information in output');\n  return sys.exit(rc);\n}\n\ninterface GPUProviderModule {\n  create(flags: string[]): GPU;\n}\n\ntype listModes = 'none' | 'cases' | 'unimplemented';\n\nColors.enabled = false;\n\nlet verbose = false;\nlet listMode: listModes = 'none';\nlet debug = false;\nlet printJSON = false;\nlet quiet = false;\nlet loadWebGPUExpectations: Promise<unknown> | undefined = undefined;\nlet gpuProviderModule: GPUProviderModule | undefined = undefined;\nlet dataPath: string | undefined = undefined;\n\nconst queries: string[] = [];\nconst gpuProviderFlags: string[] = [];\nfor (let i = 0; i < sys.args.length; ++i) {\n  const a = sys.args[i];\n  if (a.startsWith('-')) {\n    if (a === '--colors') {\n      Colors.enabled = true;\n    } else if (a === '--verbose') {\n      verbose = true;\n    } else if (a === '--list') {\n      listMode = 'cases';\n    } else if (a === '--list-unimplemented') {\n      listMode = 'unimplemented';\n    } else if (a === '--debug') {\n      debug = true;\n    } else if (a === '--data') {\n      dataPath = sys.args[++i];\n    } else if (a === '--print-json') {\n      printJSON = true;\n    } else if (a === '--expectations') {\n      const expectationsFile = new URL(sys.args[++i], `file://${sys.cwd()}`).pathname;\n      loadWebGPUExpectations = import(expectationsFile).then(m => m.expectations);\n    } else if (a === '--gpu-provider') {\n      const modulePath = sys.args[++i];\n      gpuProviderModule = require(modulePath);\n    } else if (a === '--gpu-provider-flag') {\n      gpuProviderFlags.push(sys.args[++i]);\n    } else if (a === '--quiet') {\n      quiet = true;\n    } else {\n      console.log('unrecognized flag: ', a);\n      usage(1);\n    }\n  } else {\n    queries.push(a);\n  }\n}\n\nif (gpuProviderModule) {\n  setGPUProvider(() => gpuProviderModule!.create(gpuProviderFlags));\n}\n\nif (dataPath !== undefined) {\n  dataCache.setStore({\n    load: (path: string) => {\n      return new Promise<string>((resolve, reject) => {\n        fs.readFile(`${dataPath}/${path}`, 'utf8', (err, data) => {\n          if (err !== null) {\n            reject(err.message);\n          } else {\n            resolve(data);\n          }\n        });\n      });\n    },\n  });\n}\nif (verbose) {\n  dataCache.setDebugLogger(console.log);\n}\n\nif (queries.length === 0) {\n  console.log('no queries specified');\n  usage(0);\n}\n\n(async () => {\n  const loader = new DefaultTestFileLoader();\n  assert(queries.length === 1, 'currently, there must be exactly one query on the cmd line');\n  const filterQuery = parseQuery(queries[0]);\n  const testcases = await loader.loadCases(filterQuery);\n  const expectations = parseExpectationsForTestQuery(\n    await (loadWebGPUExpectations ?? []),\n    filterQuery\n  );\n\n  Logger.globalDebugMode = debug;\n  const log = new Logger();\n\n  const failed: Array<[string, LiveTestCaseResult]> = [];\n  const warned: Array<[string, LiveTestCaseResult]> = [];\n  const skipped: Array<[string, LiveTestCaseResult]> = [];\n\n  let total = 0;\n\n  for (const testcase of testcases) {\n    const name = testcase.query.toString();\n    switch (listMode) {\n      case 'cases':\n        console.log(name);\n        continue;\n      case 'unimplemented':\n        if (testcase.isUnimplemented) {\n          console.log(name);\n        }\n        continue;\n      default:\n        break;\n    }\n\n    const [rec, res] = log.record(name);\n    await testcase.run(rec, expectations);\n\n    if (verbose) {\n      printResults([[name, res]]);\n    }\n\n    total++;\n    switch (res.status) {\n      case 'pass':\n        break;\n      case 'fail':\n        failed.push([name, res]);\n        break;\n      case 'warn':\n        warned.push([name, res]);\n        break;\n      case 'skip':\n        skipped.push([name, res]);\n        break;\n      default:\n        unreachable('unrecognized status');\n    }\n  }\n\n  if (listMode !== 'none') {\n    return;\n  }\n\n  assert(total > 0, 'found no tests!');\n\n  // MAINTENANCE_TODO: write results out somewhere (a file?)\n  if (printJSON) {\n    console.log(log.asJSON(2));\n  }\n\n  if (!quiet) {\n    if (skipped.length) {\n      console.log('');\n      console.log('** Skipped **');\n      printResults(skipped);\n    }\n    if (warned.length) {\n      console.log('');\n      console.log('** Warnings **');\n      printResults(warned);\n    }\n    if (failed.length) {\n      console.log('');\n      console.log('** Failures **');\n      printResults(failed);\n    }\n\n    const passed = total - warned.length - failed.length - skipped.length;\n    const pct = (x: number) => ((100 * x) / total).toFixed(2);\n    const rpt = (x: number) => {\n      const xs = x.toString().padStart(1 + Math.log10(total), ' ');\n      return `${xs} / ${total} = ${pct(x).padStart(6, ' ')}%`;\n    };\n    console.log('');\n    console.log(`** Summary **\nPassed  w/o warnings = ${rpt(passed)}\nPassed with warnings = ${rpt(warned.length)}\nSkipped              = ${rpt(skipped.length)}\nFailed               = ${rpt(failed.length)}`);\n  }\n\n  if (failed.length || warned.length) {\n    sys.exit(1);\n  }\n})().catch(ex => {\n  console.log(ex.stack ?? ex.toString());\n  sys.exit(1);\n});\n\nfunction printResults(results: Array<[string, LiveTestCaseResult]>): void {\n  for (const [name, r] of results) {\n    console.log(`[${r.status}] ${name} (${r.timems}ms). Log:`);\n    if (r.logs) {\n      for (const l of r.logs) {\n        console.log(prettyPrintLog(l));\n      }\n    }\n  }\n}\n"],"mappings":"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"}