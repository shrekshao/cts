{"version":3,"sources":["../../../../src/common/runtime/helper/sys.ts"],"names":["node","existsSync","require","type","args","process","argv","slice","cwd","exit","code","deno","path","Deno","readFileSync","err","sys","globalThis"],"mappings":";AAAA;AACA;AAEA,SAASA,IAAT,GAAgB;AACd,QAAM,EAAEC,UAAF,KAAiBC,OAAO,CAAC,IAAD,CAA9B;;AAEA,SAAO;AACLC,IAAAA,IAAI,EAAE,MADD;AAELF,IAAAA,UAFK;AAGLG,IAAAA,IAAI,EAAEC,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAHD;AAILC,IAAAA,GAAG,EAAE,MAAMH,OAAO,CAACG,GAAR,EAJN;AAKLC,IAAAA,IAAI,EAAE,CAACC,IAAD,KAA+BL,OAAO,CAACI,IAAR,CAAaC,IAAb,CALhC,EAAP;;AAOD;;;;;;;;;;;AAWD,SAASC,IAAT,GAAgB;AACd,WAASV,UAAT,CAAoBW,IAApB,EAAkC;AAChC,QAAI;AACFC,MAAAA,IAAI,CAACC,YAAL,CAAkBF,IAAlB;AACA,aAAO,IAAP;AACD,KAHD,CAGE,OAAOG,GAAP,EAAY;AACZ,aAAO,KAAP;AACD;AACF;;AAED,SAAO;AACLZ,IAAAA,IAAI,EAAE,MADD;AAELF,IAAAA,UAFK;AAGLG,IAAAA,IAAI,EAAES,IAAI,CAACT,IAHN;AAILI,IAAAA,GAAG,EAAEK,IAAI,CAACL,GAJL;AAKLC,IAAAA,IAAI,EAAEI,IAAI,CAACJ,IALN,EAAP;;AAOD;;AAED,MAAMO,GAAG,GAAG,OAAOC,UAAU,CAACZ,OAAlB,KAA8B,WAA9B,GAA4CL,IAAI,EAAhD,GAAqDW,IAAI,EAArE;;AAEA,eAAeK,GAAf","sourcesContent":["/* eslint no-process-exit: \"off\" */\n/* eslint @typescript-eslint/no-namespace: \"off\" */\n\nfunction node() {\n  const { existsSync } = require('fs');\n\n  return {\n    type: 'node',\n    existsSync,\n    args: process.argv.slice(2),\n    cwd: () => process.cwd(),\n    exit: (code?: number | undefined) => process.exit(code),\n  };\n}\n\ndeclare global {\n  namespace Deno {\n    function readFileSync(path: string): Uint8Array;\n    const args: string[];\n    const cwd: () => string;\n    function exit(code?: number): never;\n  }\n}\n\nfunction deno() {\n  function existsSync(path: string) {\n    try {\n      Deno.readFileSync(path);\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  return {\n    type: 'deno',\n    existsSync,\n    args: Deno.args,\n    cwd: Deno.cwd,\n    exit: Deno.exit,\n  };\n}\n\nconst sys = typeof globalThis.process !== 'undefined' ? node() : deno();\n\nexport default sys;\n"],"file":"sys.js"}