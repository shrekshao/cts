{"version":3,"file":"standalone.js","names":["dataCache","setBaseResourcePath","DefaultTestFileLoader","Logger","parseQuery","TestTree","assert","optionEnabled","TestWorker","window","onbeforeunload","haveSomeResults","undefined","runnow","debug","globalDebugMode","logger","worker","autoCloseOnPass","document","getElementById","resultsVis","setStore","load","path","response","fetch","ok","Promise","reject","statusText","text","emptySubtreeResult","pass","fail","warn","skip","total","timems","mergeSubtreeResults","results","target","result","memoize","fn","value","makeTreeNodeHTML","tree","parentLevel","subtree","makeSubtreeHTML","makeCaseHTML","generateMyHTML","parentElement","div","$","appendTo","generateSubtreeHTML","runSubtree","t","caseResult","clearRenderedResult","updateRenderedResult","name","query","toString","rec","res","record","run","status","classList","add","caselogs","addClass","hide","casehead","setChecked","makeTreeNodeHeaderHTML","checked","show","casetime","html","appendChild","removeAttribute","empty","setAttribute","toFixed","logs","l","caselog","attr","on","consoleLogError","toJSON","n","subtreeResult","makeSubtreeChildrenHTML","children","values","level","runMySubtree","subtreeHTML","generateSubtree","header","firstElementChild","setChildrenChecked","childFns","Array","from","push","setChildChecked","e","globalThis","_stack","console","log","extra","onChange","isLeaf","prop","href","open","lastQueryLevelToExpand","runtext","testCreationStack","nodetitle","nodecolumns","val","subtreeCounts","countsToString","description","append","loader","qs","URLSearchParams","location","search","getAll","length","url","protocol","host","pathname","map","q","join","history","replaceState","rootQuery","addEventListener","ev","textContent","data","loadTree","dissolveSingleChildTrees","root","setTreeCheckedRecursively","navigator","clipboard","writeText","asJSON"],"sources":["../../../src/common/runtime/standalone.ts"],"sourcesContent":["// Implements the standalone test runner (see also: /standalone/index.html).\n\nimport { dataCache } from '../framework/data_cache.js';\nimport { setBaseResourcePath } from '../framework/resources.js';\nimport { DefaultTestFileLoader } from '../internal/file_loader.js';\nimport { Logger } from '../internal/logging/logger.js';\nimport { LiveTestCaseResult } from '../internal/logging/result.js';\nimport { parseQuery } from '../internal/query/parseQuery.js';\nimport { TestQueryLevel } from '../internal/query/query.js';\nimport { TestTreeNode, TestSubtree, TestTreeLeaf, TestTree } from '../internal/tree.js';\nimport { assert, ErrorWithExtra } from '../util/util.js';\n\nimport { optionEnabled } from './helper/options.js';\nimport { TestWorker } from './helper/test_worker.js';\n\nwindow.onbeforeunload = () => {\n  // Prompt user before reloading if there are any results\n  return haveSomeResults ? false : undefined;\n};\n\nlet haveSomeResults = false;\n\nconst runnow = optionEnabled('runnow');\nconst debug = optionEnabled('debug');\n\nLogger.globalDebugMode = debug;\nconst logger = new Logger();\n\nsetBaseResourcePath('../out/resources');\n\nconst worker = optionEnabled('worker') ? new TestWorker(debug) : undefined;\n\nconst autoCloseOnPass = document.getElementById('autoCloseOnPass') as HTMLInputElement;\nconst resultsVis = document.getElementById('resultsVis')!;\n\ndataCache.setStore({\n  load: async (path: string) => {\n    const response = await fetch(`data/${path}`);\n    if (!response.ok) {\n      return Promise.reject(response.statusText);\n    }\n    return await response.text();\n  },\n});\n\ninterface SubtreeResult {\n  pass: number;\n  fail: number;\n  warn: number;\n  skip: number;\n  total: number;\n  timems: number;\n}\n\nfunction emptySubtreeResult() {\n  return { pass: 0, fail: 0, warn: 0, skip: 0, total: 0, timems: 0 };\n}\n\nfunction mergeSubtreeResults(...results: SubtreeResult[]) {\n  const target = emptySubtreeResult();\n  for (const result of results) {\n    target.pass += result.pass;\n    target.fail += result.fail;\n    target.warn += result.warn;\n    target.skip += result.skip;\n    target.total += result.total;\n    target.timems += result.timems;\n  }\n  return target;\n}\n\ntype SetCheckedRecursively = () => void;\ntype GenerateSubtreeHTML = (parent: HTMLElement) => SetCheckedRecursively;\ntype RunSubtree = () => Promise<SubtreeResult>;\n\ninterface VisualizedSubtree {\n  generateSubtreeHTML: GenerateSubtreeHTML;\n  runSubtree: RunSubtree;\n}\n\n// DOM generation\n\nfunction memoize<T>(fn: () => T): () => T {\n  let value: T | undefined;\n  return () => {\n    if (value === undefined) {\n      value = fn();\n    }\n    return value;\n  };\n}\n\nfunction makeTreeNodeHTML(tree: TestTreeNode, parentLevel: TestQueryLevel): VisualizedSubtree {\n  let subtree: VisualizedSubtree;\n\n  if ('children' in tree) {\n    subtree = makeSubtreeHTML(tree, parentLevel);\n  } else {\n    subtree = makeCaseHTML(tree);\n  }\n\n  const generateMyHTML = (parentElement: HTMLElement) => {\n    const div = $('<div>').appendTo(parentElement)[0];\n    return subtree.generateSubtreeHTML(div);\n  };\n  return { runSubtree: subtree.runSubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction makeCaseHTML(t: TestTreeLeaf): VisualizedSubtree {\n  // Becomes set once the case has been run once.\n  let caseResult: LiveTestCaseResult | undefined;\n\n  // Becomes set once the DOM for this case exists.\n  let clearRenderedResult: (() => void) | undefined;\n  let updateRenderedResult: (() => void) | undefined;\n\n  const name = t.query.toString();\n  const runSubtree = async () => {\n    if (clearRenderedResult) clearRenderedResult();\n\n    const result: SubtreeResult = emptySubtreeResult();\n\n    haveSomeResults = true;\n    const [rec, res] = logger.record(name);\n    caseResult = res;\n    if (worker) {\n      await worker.run(rec, name);\n    } else {\n      await t.run(rec);\n    }\n\n    result.total++;\n    result.timems += caseResult.timems;\n    switch (caseResult.status) {\n      case 'pass':\n        result.pass++;\n        break;\n      case 'fail':\n        result.fail++;\n        break;\n      case 'skip':\n        result.skip++;\n        break;\n      case 'warn':\n        result.warn++;\n        break;\n    }\n\n    if (updateRenderedResult) updateRenderedResult();\n\n    return result;\n  };\n\n  const generateSubtreeHTML = (div: HTMLElement) => {\n    div.classList.add('testcase');\n\n    const caselogs = $('<div>').addClass('testcaselogs').hide();\n    const [casehead, setChecked] = makeTreeNodeHeaderHTML(t, runSubtree, 2, checked => {\n      checked ? caselogs.show() : caselogs.hide();\n    });\n    const casetime = $('<div>').addClass('testcasetime').html('ms').appendTo(casehead);\n    div.appendChild(casehead);\n    div.appendChild(caselogs[0]);\n\n    clearRenderedResult = () => {\n      div.removeAttribute('data-status');\n      casetime.text('ms');\n      caselogs.empty();\n    };\n\n    updateRenderedResult = () => {\n      if (caseResult) {\n        div.setAttribute('data-status', caseResult.status);\n\n        casetime.text(caseResult.timems.toFixed(4) + ' ms');\n\n        if (caseResult.logs) {\n          caselogs.empty();\n          for (const l of caseResult.logs) {\n            const caselog = $('<div>').addClass('testcaselog').appendTo(caselogs);\n            $('<button>')\n              .addClass('testcaselogbtn')\n              .attr('alt', 'Log stack to console')\n              .attr('title', 'Log stack to console')\n              .appendTo(caselog)\n              .on('click', () => {\n                consoleLogError(l);\n              });\n            $('<pre>').addClass('testcaselogtext').appendTo(caselog).text(l.toJSON());\n          }\n        }\n      }\n    };\n\n    updateRenderedResult();\n\n    return setChecked;\n  };\n\n  return { runSubtree, generateSubtreeHTML };\n}\n\nfunction makeSubtreeHTML(n: TestSubtree, parentLevel: TestQueryLevel): VisualizedSubtree {\n  let subtreeResult: SubtreeResult = emptySubtreeResult();\n  // Becomes set once the DOM for this case exists.\n  let clearRenderedResult: (() => void) | undefined;\n  let updateRenderedResult: (() => void) | undefined;\n\n  const { runSubtree, generateSubtreeHTML } = makeSubtreeChildrenHTML(\n    n.children.values(),\n    n.query.level\n  );\n\n  const runMySubtree = async () => {\n    if (clearRenderedResult) clearRenderedResult();\n    subtreeResult = await runSubtree();\n    if (updateRenderedResult) updateRenderedResult();\n    return subtreeResult;\n  };\n\n  const generateMyHTML = (div: HTMLElement) => {\n    const subtreeHTML = $('<div>').addClass('subtreechildren');\n    const generateSubtree = memoize(() => generateSubtreeHTML(subtreeHTML[0]));\n\n    // Hide subtree - it's not generated yet.\n    subtreeHTML.hide();\n    const [header, setChecked] = makeTreeNodeHeaderHTML(n, runMySubtree, parentLevel, checked => {\n      if (checked) {\n        // Make sure the subtree is generated and then show it.\n        generateSubtree();\n        subtreeHTML.show();\n      } else {\n        subtreeHTML.hide();\n      }\n    });\n\n    div.classList.add('subtree');\n    div.classList.add(['', 'multifile', 'multitest', 'multicase'][n.query.level]);\n    div.appendChild(header);\n    div.appendChild(subtreeHTML[0]);\n\n    clearRenderedResult = () => {\n      div.removeAttribute('data-status');\n    };\n\n    updateRenderedResult = () => {\n      let status = '';\n      if (subtreeResult.pass > 0) {\n        status += 'pass';\n      }\n      if (subtreeResult.fail > 0) {\n        status += 'fail';\n      }\n      div.setAttribute('data-status', status);\n      if (autoCloseOnPass.checked && status === 'pass') {\n        div.firstElementChild!.removeAttribute('open');\n      }\n    };\n\n    updateRenderedResult();\n\n    return () => {\n      setChecked();\n      const setChildrenChecked = generateSubtree();\n      setChildrenChecked();\n    };\n  };\n\n  return { runSubtree: runMySubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction makeSubtreeChildrenHTML(\n  children: Iterable<TestTreeNode>,\n  parentLevel: TestQueryLevel\n): VisualizedSubtree {\n  const childFns = Array.from(children, subtree => makeTreeNodeHTML(subtree, parentLevel));\n\n  const runMySubtree = async () => {\n    const results: SubtreeResult[] = [];\n    for (const { runSubtree } of childFns) {\n      results.push(await runSubtree());\n    }\n    return mergeSubtreeResults(...results);\n  };\n  const generateMyHTML = (div: HTMLElement) => {\n    const setChildrenChecked = Array.from(childFns, ({ generateSubtreeHTML }) =>\n      generateSubtreeHTML(div)\n    );\n\n    return () => {\n      for (const setChildChecked of setChildrenChecked) {\n        setChildChecked();\n      }\n    };\n  };\n\n  return { runSubtree: runMySubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction consoleLogError(e: Error | ErrorWithExtra | undefined) {\n  if (e === undefined) return;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  (globalThis as any)._stack = e;\n  /* eslint-disable-next-line no-console */\n  console.log('_stack =', e);\n  if ('extra' in e && e.extra !== undefined) {\n    /* eslint-disable-next-line no-console */\n    console.log('_stack.extra =', e.extra);\n  }\n}\n\nfunction makeTreeNodeHeaderHTML(\n  n: TestTreeNode,\n  runSubtree: RunSubtree,\n  parentLevel: TestQueryLevel,\n  onChange: (checked: boolean) => void\n): [HTMLElement, SetCheckedRecursively] {\n  const isLeaf = 'run' in n;\n  const div = $('<details>').addClass('nodeheader');\n  const header = $('<summary>').appendTo(div);\n\n  const setChecked = () => {\n    div.prop('open', true); // (does not fire onChange)\n    onChange(true);\n  };\n\n  const href = `?${worker ? 'worker&' : ''}${debug ? 'debug&' : ''}q=${n.query.toString()}`;\n  if (onChange) {\n    div.on('toggle', function (this) {\n      onChange((this as HTMLDetailsElement).open);\n    });\n\n    // Expand the shallower parts of the tree at load.\n    // Also expand completely within subtrees that are at the same query level\n    // (e.g. s:f:t,* and s:f:t,t,*).\n    if (n.query.level <= lastQueryLevelToExpand || n.query.level === parentLevel) {\n      setChecked();\n    }\n  }\n  const runtext = isLeaf ? 'Run case' : 'Run subtree';\n  $('<button>')\n    .addClass(isLeaf ? 'leafrun' : 'subtreerun')\n    .attr('alt', runtext)\n    .attr('title', runtext)\n    .on('click', () => void runSubtree())\n    .appendTo(header);\n  $('<a>')\n    .addClass('nodelink')\n    .attr('href', href)\n    .attr('alt', 'Open')\n    .attr('title', 'Open')\n    .appendTo(header);\n  if ('testCreationStack' in n && n.testCreationStack) {\n    $('<button>')\n      .addClass('testcaselogbtn')\n      .attr('alt', 'Log test creation stack to console')\n      .attr('title', 'Log test creation stack to console')\n      .appendTo(header)\n      .on('click', () => {\n        consoleLogError(n.testCreationStack);\n      });\n  }\n  const nodetitle = $('<div>').addClass('nodetitle').appendTo(header);\n  const nodecolumns = $('<span>').addClass('nodecolumns').appendTo(nodetitle);\n  {\n    $('<input>')\n      .attr('type', 'text')\n      .prop('readonly', true)\n      .addClass('nodequery')\n      .val(n.query.toString())\n      .appendTo(nodecolumns);\n    if (n.subtreeCounts) {\n      $('<span>')\n        .attr('title', '(Nodes with TODOs) / (Total test count)')\n        .text(TestTree.countsToString(n))\n        .appendTo(nodecolumns);\n    }\n  }\n  if ('description' in n && n.description) {\n    nodetitle.append('&nbsp;');\n    $('<pre>') //\n      .addClass('nodedescription')\n      .text(n.description)\n      .appendTo(header);\n  }\n  return [div[0], setChecked];\n}\n\n// Collapse s:f:t:* or s:f:t:c by default.\nlet lastQueryLevelToExpand: TestQueryLevel = 2;\n\nvoid (async () => {\n  const loader = new DefaultTestFileLoader();\n\n  // MAINTENANCE_TODO: start populating page before waiting for everything to load?\n  const qs = new URLSearchParams(window.location.search).getAll('q');\n  if (qs.length === 0) {\n    qs.push('webgpu:*');\n  }\n\n  // Update the URL bar to match the exact current options.\n  {\n    let url = window.location.protocol + '//' + window.location.host + window.location.pathname;\n    url +=\n      '?' +\n      new URLSearchParams([\n        ['runnow', runnow ? '1' : '0'],\n        ['worker', worker ? '1' : '0'],\n        ['debug', debug ? '1' : '0'],\n      ]).toString() +\n      '&' +\n      qs.map(q => 'q=' + q).join('&');\n    window.history.replaceState(null, '', url);\n  }\n\n  assert(qs.length === 1, 'currently, there must be exactly one ?q=');\n  const rootQuery = parseQuery(qs[0]);\n  if (rootQuery.level > lastQueryLevelToExpand) {\n    lastQueryLevelToExpand = rootQuery.level;\n  }\n  loader.addEventListener('import', ev => {\n    $('#info')[0].textContent = `loading: ${ev.data.url}`;\n  });\n  loader.addEventListener('finish', () => {\n    $('#info')[0].textContent = '';\n  });\n  const tree = await loader.loadTree(rootQuery);\n\n  tree.dissolveSingleChildTrees();\n\n  const { runSubtree, generateSubtreeHTML } = makeSubtreeHTML(tree.root, 1);\n  const setTreeCheckedRecursively = generateSubtreeHTML(resultsVis);\n\n  document.getElementById('expandall')!.addEventListener('click', () => {\n    setTreeCheckedRecursively();\n  });\n\n  document.getElementById('copyResultsJSON')!.addEventListener('click', () => {\n    void navigator.clipboard.writeText(logger.asJSON(2));\n  });\n\n  if (runnow) {\n    void runSubtree();\n  }\n})();\n"],"mappings":"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"}