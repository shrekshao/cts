{"version":3,"sources":["../../../src/common/runtime/standalone.ts"],"names":["DefaultTestFileLoader","Logger","parseQuery","assert","optionEnabled","TestWorker","window","onbeforeunload","haveSomeResults","undefined","runnow","debug","globalDebugMode","logger","worker","resultsVis","document","getElementById","memoize","fn","value","makeTreeNodeHTML","tree","parentLevel","subtree","makeSubtreeHTML","makeCaseHTML","generateMyHTML","parentElement","div","$","appendTo","generateSubtreeHTML","runSubtree","t","caseResult","updateRenderedResult","name","query","toString","rec","res","record","run","classList","add","caselogs","addClass","hide","casehead","setChecked","makeTreeNodeHeaderHTML","checked","show","casetime","html","appendChild","setAttribute","status","text","timems","toFixed","logs","empty","l","caselog","attr","on","consoleLogError","toJSON","n","makeSubtreeChildrenHTML","children","values","level","subtreeHTML","generateSubtree","header","setChildrenChecked","childFns","Array","from","runMySubtree","setChildChecked","e","globalThis","_stack","console","log","extra","onChange","isLeaf","prop","href","open","lastQueryLevelToExpand","runtext","testCreationStack","nodetitle","val","description","append","loader","qs","URLSearchParams","location","search","getAll","length","push","url","protocol","host","pathname","map","q","join","history","replaceState","rootQuery","loadTree","dissolveSingleChildTrees","root","setTreeCheckedRecursively","addEventListener","navigator","clipboard","writeText","asJSON"],"mappings":"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","sourcesContent":["// Implements the standalone test runner (see also: /standalone/index.html).\n\nimport { DefaultTestFileLoader } from '../internal/file_loader.js';\nimport { Logger } from '../internal/logging/logger.js';\nimport { LiveTestCaseResult } from '../internal/logging/result.js';\nimport { parseQuery } from '../internal/query/parseQuery.js';\nimport { TestQueryLevel } from '../internal/query/query.js';\nimport { TestTreeNode, TestSubtree, TestTreeLeaf } from '../internal/tree.js';\nimport { assert, ErrorWithExtra } from '../util/util.js';\n\nimport { optionEnabled } from './helper/options.js';\nimport { TestWorker } from './helper/test_worker.js';\n\nwindow.onbeforeunload = () => {\n  // Prompt user before reloading if there are any results\n  return haveSomeResults ? false : undefined;\n};\n\nlet haveSomeResults = false;\n\nconst runnow = optionEnabled('runnow');\nconst debug = optionEnabled('debug');\n\nLogger.globalDebugMode = debug;\nconst logger = new Logger();\n\nconst worker = optionEnabled('worker') ? new TestWorker(debug) : undefined;\n\nconst resultsVis = document.getElementById('resultsVis')!;\n\ntype SetCheckedRecursively = () => void;\ntype GenerateSubtreeHTML = (parent: HTMLElement) => SetCheckedRecursively;\ntype RunSubtree = () => Promise<void>;\n\ninterface VisualizedSubtree {\n  generateSubtreeHTML: GenerateSubtreeHTML;\n  runSubtree: RunSubtree;\n}\n\n// DOM generation\n\nfunction memoize<T>(fn: () => T): () => T {\n  let value: T | undefined;\n  return () => {\n    if (value === undefined) {\n      value = fn();\n    }\n    return value;\n  };\n}\n\nfunction makeTreeNodeHTML(tree: TestTreeNode, parentLevel: TestQueryLevel): VisualizedSubtree {\n  let subtree: VisualizedSubtree;\n\n  if ('children' in tree) {\n    subtree = makeSubtreeHTML(tree, parentLevel);\n  } else {\n    subtree = makeCaseHTML(tree);\n  }\n\n  const generateMyHTML = (parentElement: HTMLElement) => {\n    const div = $('<div>').appendTo(parentElement)[0];\n    return subtree.generateSubtreeHTML(div);\n  };\n  return { runSubtree: subtree.runSubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction makeCaseHTML(t: TestTreeLeaf): VisualizedSubtree {\n  // Becomes set once the case has been run once.\n  let caseResult: LiveTestCaseResult | undefined;\n\n  // Becomes set once the DOM for this case exists.\n  let updateRenderedResult: (() => void) | undefined;\n\n  const name = t.query.toString();\n  const runSubtree = async () => {\n    haveSomeResults = true;\n    const [rec, res] = logger.record(name);\n    caseResult = res;\n    if (worker) {\n      await worker.run(rec, name);\n    } else {\n      await t.run(rec);\n    }\n\n    if (updateRenderedResult) updateRenderedResult();\n  };\n\n  const generateSubtreeHTML = (div: HTMLElement) => {\n    div.classList.add('testcase');\n\n    const caselogs = $('<div>').addClass('testcaselogs').hide();\n    const [casehead, setChecked] = makeTreeNodeHeaderHTML(t, runSubtree, 2, checked => {\n      checked ? caselogs.show() : caselogs.hide();\n    });\n    const casetime = $('<div>').addClass('testcasetime').html('ms').appendTo(casehead);\n    div.appendChild(casehead);\n    div.appendChild(caselogs[0]);\n\n    updateRenderedResult = () => {\n      if (caseResult) {\n        div.setAttribute('data-status', caseResult.status);\n\n        casetime.text(caseResult.timems.toFixed(4) + ' ms');\n\n        if (caseResult.logs) {\n          caselogs.empty();\n          for (const l of caseResult.logs) {\n            const caselog = $('<div>').addClass('testcaselog').appendTo(caselogs);\n            $('<button>')\n              .addClass('testcaselogbtn')\n              .attr('alt', 'Log stack to console')\n              .attr('title', 'Log stack to console')\n              .appendTo(caselog)\n              .on('click', () => {\n                consoleLogError(l);\n              });\n            $('<pre>').addClass('testcaselogtext').appendTo(caselog).text(l.toJSON());\n          }\n        }\n      }\n    };\n\n    updateRenderedResult();\n\n    return setChecked;\n  };\n\n  return { runSubtree, generateSubtreeHTML };\n}\n\nfunction makeSubtreeHTML(n: TestSubtree, parentLevel: TestQueryLevel): VisualizedSubtree {\n  const { runSubtree, generateSubtreeHTML } = makeSubtreeChildrenHTML(\n    n.children.values(),\n    n.query.level\n  );\n\n  const generateMyHTML = (div: HTMLElement) => {\n    const subtreeHTML = $('<div>').addClass('subtreechildren');\n    const generateSubtree = memoize(() => generateSubtreeHTML(subtreeHTML[0]));\n\n    // Hide subtree - it's not generated yet.\n    subtreeHTML.hide();\n    const [header, setChecked] = makeTreeNodeHeaderHTML(n, runSubtree, parentLevel, checked => {\n      if (checked) {\n        // Make sure the subtree is generated and then show it.\n        generateSubtree();\n        subtreeHTML.show();\n      } else {\n        subtreeHTML.hide();\n      }\n    });\n\n    div.classList.add('subtree');\n    div.classList.add(['', 'multifile', 'multitest', 'multicase'][n.query.level]);\n    div.appendChild(header);\n    div.appendChild(subtreeHTML[0]);\n\n    return () => {\n      setChecked();\n      const setChildrenChecked = generateSubtree();\n      setChildrenChecked();\n    };\n  };\n\n  return { runSubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction makeSubtreeChildrenHTML(\n  children: Iterable<TestTreeNode>,\n  parentLevel: TestQueryLevel\n): VisualizedSubtree {\n  const childFns = Array.from(children, subtree => makeTreeNodeHTML(subtree, parentLevel));\n\n  const runMySubtree = async () => {\n    for (const { runSubtree } of childFns) {\n      await runSubtree();\n    }\n  };\n  const generateMyHTML = (div: HTMLElement) => {\n    const setChildrenChecked = Array.from(childFns, ({ generateSubtreeHTML }) =>\n      generateSubtreeHTML(div)\n    );\n\n    return () => {\n      for (const setChildChecked of setChildrenChecked) {\n        setChildChecked();\n      }\n    };\n  };\n\n  return { runSubtree: runMySubtree, generateSubtreeHTML: generateMyHTML };\n}\n\nfunction consoleLogError(e: Error | ErrorWithExtra | undefined) {\n  if (e === undefined) return;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  (globalThis as any)._stack = e;\n  /* eslint-disable-next-line no-console */\n  console.log('_stack =', e);\n  if ('extra' in e && e.extra !== undefined) {\n    /* eslint-disable-next-line no-console */\n    console.log('_stack.extra =', e.extra);\n  }\n}\n\nfunction makeTreeNodeHeaderHTML(\n  n: TestTreeNode,\n  runSubtree: RunSubtree,\n  parentLevel: TestQueryLevel,\n  onChange: (checked: boolean) => void\n): [HTMLElement, SetCheckedRecursively] {\n  const isLeaf = 'run' in n;\n  const div = $('<details>').addClass('nodeheader');\n  const header = $('<summary>').appendTo(div);\n\n  const setChecked = () => {\n    div.prop('open', true); // (does not fire onChange)\n    onChange(true);\n  };\n\n  const href = `?${worker ? 'worker&' : ''}${debug ? 'debug&' : ''}q=${n.query.toString()}`;\n  if (onChange) {\n    div.on('toggle', function (this) {\n      onChange((this as HTMLDetailsElement).open);\n    });\n\n    // Expand the shallower parts of the tree at load.\n    // Also expand completely within subtrees that are at the same query level\n    // (e.g. s:f:t,* and s:f:t,t,*).\n    if (n.query.level <= lastQueryLevelToExpand || n.query.level === parentLevel) {\n      setChecked();\n    }\n  }\n  const runtext = isLeaf ? 'Run case' : 'Run subtree';\n  $('<button>')\n    .addClass(isLeaf ? 'leafrun' : 'subtreerun')\n    .attr('alt', runtext)\n    .attr('title', runtext)\n    .on('click', async () => {\n      await runSubtree();\n    })\n    .appendTo(header);\n  $('<a>')\n    .addClass('nodelink')\n    .attr('href', href)\n    .attr('alt', 'Open')\n    .attr('title', 'Open')\n    .appendTo(header);\n  if ('testCreationStack' in n && n.testCreationStack) {\n    $('<button>')\n      .addClass('testcaselogbtn')\n      .attr('alt', 'Log test creation stack to console')\n      .attr('title', 'Log test creation stack to console')\n      .appendTo(header)\n      .on('click', () => {\n        consoleLogError(n.testCreationStack);\n      });\n  }\n  const nodetitle = $('<div>').addClass('nodetitle').appendTo(header);\n  $('<input>')\n    .attr('type', 'text')\n    .prop('readonly', true)\n    .addClass('nodequery')\n    .val(n.query.toString())\n    .appendTo(nodetitle);\n  if ('description' in n && n.description) {\n    nodetitle.append('&nbsp;');\n    $('<pre>') //\n      .addClass('nodedescription')\n      .text(n.description)\n      .appendTo(header);\n  }\n  return [div[0], setChecked];\n}\n\n// Collapse s:f:t:* or s:f:t:c by default.\nlet lastQueryLevelToExpand: TestQueryLevel = 2;\n\n(async () => {\n  const loader = new DefaultTestFileLoader();\n\n  // TODO: start populating page before waiting for everything to load?\n  const qs = new URLSearchParams(window.location.search).getAll('q');\n  if (qs.length === 0) {\n    qs.push('webgpu:*');\n  }\n\n  // Update the URL bar to match the exact current options.\n  {\n    let url = window.location.protocol + '//' + window.location.host + window.location.pathname;\n    url +=\n      '?' +\n      new URLSearchParams([\n        ['runnow', runnow ? '1' : '0'],\n        ['worker', worker ? '1' : '0'],\n        ['debug', debug ? '1' : '0'],\n      ]).toString() +\n      '&' +\n      qs.map(q => 'q=' + q).join('&');\n    window.history.replaceState(null, '', url);\n  }\n\n  assert(qs.length === 1, 'currently, there must be exactly one ?q=');\n  const rootQuery = parseQuery(qs[0]);\n  if (rootQuery.level > lastQueryLevelToExpand) {\n    lastQueryLevelToExpand = rootQuery.level;\n  }\n  const tree = await loader.loadTree(rootQuery);\n\n  tree.dissolveSingleChildTrees();\n\n  const { runSubtree, generateSubtreeHTML } = makeSubtreeHTML(tree.root, 1);\n  const setTreeCheckedRecursively = generateSubtreeHTML(resultsVis);\n\n  document.getElementById('expandall')!.addEventListener('click', () => {\n    setTreeCheckedRecursively();\n  });\n\n  document.getElementById('copyResultsJSON')!.addEventListener('click', () => {\n    navigator.clipboard.writeText(logger.asJSON(2));\n  });\n\n  if (runnow) {\n    runSubtree();\n  }\n})();\n"],"file":"standalone.js"}