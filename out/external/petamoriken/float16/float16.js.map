{"version":3,"sources":["../../../../src/external/petamoriken/float16/float16.js"],"names":["THIS_IS_NOT_AN_OBJECT","THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT","THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY","THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT","SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT","DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH","ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER","CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT","CANNOT_MIX_BIGINT_AND_OTHER_TYPES","ITERATOR_PROPERTY_IS_NOT_CALLABLE","REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE","OFFSET_IS_OUT_OF_BOUNDS","uncurryThis","target","thisArg","args","ReflectApply","uncurryThisGetter","key","ReflectGetOwnPropertyDescriptor","get","apply","construct","ReflectConstruct","defineProperty","ReflectDefineProperty","ReflectGet","getOwnPropertyDescriptor","getPrototypeOf","ReflectGetPrototypeOf","has","ReflectHas","ownKeys","ReflectOwnKeys","set","ReflectSet","setPrototypeOf","ReflectSetPrototypeOf","Reflect","NativeProxy","Proxy","MAX_SAFE_INTEGER","isFinite","NumberIsFinite","isNaN","NumberIsNaN","Number","iterator","SymbolIterator","species","SymbolSpecies","toStringTag","SymbolToStringTag","for","SymbolFor","Symbol","NativeObject","Object","create","ObjectCreate","ObjectDefineProperty","freeze","ObjectFreeze","is","ObjectIs","ObjectPrototype","prototype","ObjectPrototype__lookupGetter__","__lookupGetter__","object","NativeTypeError","descriptor","undefined","ObjectHasOwn","hasOwn","hasOwnProperty","NativeArray","Array","ArrayIsArray","isArray","ArrayPrototype","ArrayPrototypeJoin","join","ArrayPrototypePush","push","ArrayPrototypeToLocaleString","toLocaleString","NativeArrayPrototypeSymbolIterator","ArrayPrototypeSymbolIterator","MathTrunc","Math","trunc","NativeArrayBuffer","ArrayBuffer","ArrayBufferIsView","isView","ArrayBufferPrototype","ArrayBufferPrototypeSlice","slice","ArrayBufferPrototypeGetByteLength","NativeSharedArrayBuffer","SharedArrayBuffer","SharedArrayBufferPrototypeGetByteLength","TypedArray","Uint8Array","TypedArrayFrom","from","TypedArrayPrototype","NativeTypedArrayPrototypeSymbolIterator","TypedArrayPrototypeKeys","keys","TypedArrayPrototypeValues","values","TypedArrayPrototypeEntries","entries","TypedArrayPrototypeSet","TypedArrayPrototypeReverse","reverse","TypedArrayPrototypeFill","fill","TypedArrayPrototypeCopyWithin","copyWithin","TypedArrayPrototypeSort","sort","TypedArrayPrototypeSlice","TypedArrayPrototypeSubarray","subarray","TypedArrayPrototypeGetBuffer","TypedArrayPrototypeGetByteOffset","TypedArrayPrototypeGetLength","TypedArrayPrototypeGetSymbolToStringTag","NativeUint16Array","Uint16Array","Uint16ArrayFrom","NativeUint32Array","Uint32Array","NativeFloat32Array","Float32Array","ArrayIteratorPrototype","ArrayIteratorPrototypeNext","next","GeneratorPrototypeNext","IteratorPrototype","DataViewPrototype","DataView","DataViewPrototypeGetUint16","getUint16","DataViewPrototypeSetUint16","setUint16","TypeError","NativeRangeError","RangeError","NativeWeakSet","WeakSet","WeakSetPrototype","WeakSetPrototypeAdd","add","WeakSetPrototypeHas","NativeWeakMap","WeakMap","WeakMapPrototype","WeakMapPrototypeGet","WeakMapPrototypeHas","WeakMapPrototypeSet","arrayIterators","SafeIteratorPrototype","value","arrayIterator","safeIfNeeded","array","safe","generators","DummyArrayIteratorPrototype","generator","writable","configurable","wrap","dummy","isObject","isObjectLike","isNativeTypedArray","isNativeBigIntTypedArray","typedArrayName","isArrayBuffer","e","isSharedArrayBuffer","isOrdinaryArray","isOrdinaryNativeTypedArray","isCanonicalIntegerIndexString","number","brand","hasFloat16ArrayBrand","constructor","buffer","floatView","uint32View","baseTable","shiftTable","i","roundToFloat16Bits","num","f","mantissaTable","exponentTable","offsetTable","m","convertToNumber","float16bits","ToIntegerOrInfinity","ToLength","length","SpeciesConstructor","defaultConstructor","IsDetachedBuffer","defaultCompare","x","y","isXNaN","isYNaN","isXPlusZero","isYPlusZero","BYTES_PER_ELEMENT","float16bitsArrays","isFloat16Array","assertFloat16Array","assertSpeciesTypedArray","count","isTargetFloat16Array","isTargetTypedArray","float16bitsArray","getFloat16BitsArray","float16","cloned","Float16Array","byteOffset","copyToArray","TypedArrayPrototypeGetters","handler","receiver","input","_byteOffset","_length","new","list","BufferConstructor","data","arguments","proxy","src","opts","Constructor","uint16","mapFunc","val","of","items","at","index","relativeIndex","k","map","callback","filter","kept","reduce","accumulator","start","reduceRight","forEach","find","findIndex","findLast","findLastIndex","every","some","targetOffset","targetLength","srcLength","Infinity","compareFn","sortCompare","end","relativeStart","relativeEnd","final","n","begin","uint16Subarray","indexOf","element","lastIndexOf","includes","separator","Float16ArrayPrototype","isTypedArray","getFloat16","dataView","setFloat16","hfround","x16"],"mappings":"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","sourcesContent":["/*! @petamoriken/float16 v3.6.6 | MIT License - https://github.com/petamoriken/float16 */\n\nconst THIS_IS_NOT_AN_OBJECT = \"This is not an object\";\nconst THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT = \"This is not a Float16Array object\";\nconst THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY =\n  \"This constructor is not a subclass of Float16Array\";\nconst THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT =\n  \"The constructor property value is not an object\";\nconst SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT =\n  \"Species constructor didn't return TypedArray object\";\nconst DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH =\n  \"Derived constructor created TypedArray object which was too small length\";\nconst ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER =\n  \"Attempting to access detached ArrayBuffer\";\nconst CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT =\n  \"Cannot convert undefined or null to object\";\nconst CANNOT_MIX_BIGINT_AND_OTHER_TYPES =\n  \"Cannot mix BigInt and other types, use explicit conversions\";\nconst ITERATOR_PROPERTY_IS_NOT_CALLABLE = \"@@iterator property is not callable\";\nconst REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE =\n  \"Reduce of empty array with no initial value\";\nconst OFFSET_IS_OUT_OF_BOUNDS = \"Offset is out of bounds\";\n\nfunction uncurryThis(target) {\n  return (thisArg, ...args) => {\n    return ReflectApply(target, thisArg, args);\n  };\n}\nfunction uncurryThisGetter(target, key) {\n  return uncurryThis(\n    ReflectGetOwnPropertyDescriptor(\n      target,\n      key\n    ).get\n  );\n}\nconst {\n  apply: ReflectApply,\n  construct: ReflectConstruct,\n  defineProperty: ReflectDefineProperty,\n  get: ReflectGet,\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n  getPrototypeOf: ReflectGetPrototypeOf,\n  has: ReflectHas,\n  ownKeys: ReflectOwnKeys,\n  set: ReflectSet,\n  setPrototypeOf: ReflectSetPrototypeOf,\n} = Reflect;\nconst NativeProxy = Proxy;\nconst {\n  MAX_SAFE_INTEGER: MAX_SAFE_INTEGER,\n  isFinite: NumberIsFinite,\n  isNaN: NumberIsNaN,\n} = Number;\nconst {\n  iterator: SymbolIterator,\n  species: SymbolSpecies,\n  toStringTag: SymbolToStringTag,\n  for: SymbolFor,\n} = Symbol;\nconst NativeObject = Object;\nconst {\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  freeze: ObjectFreeze,\n  is: ObjectIs,\n} = NativeObject;\nconst ObjectPrototype = NativeObject.prototype;\nconst ObjectPrototype__lookupGetter__ =  (ObjectPrototype).__lookupGetter__\n  ? uncurryThis( (ObjectPrototype).__lookupGetter__)\n  : (object, key) => {\n    if (object == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n    let target = NativeObject(object);\n    do {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      if (descriptor !== undefined) {\n        if (ObjectHasOwn(descriptor, \"get\")) {\n          return descriptor.get;\n        }\n        return;\n      }\n    } while ((target = ReflectGetPrototypeOf(target)) !== null);\n  };\nconst ObjectHasOwn =  (NativeObject).hasOwn ||\n  uncurryThis(ObjectPrototype.hasOwnProperty);\nconst NativeArray = Array;\nconst ArrayIsArray = NativeArray.isArray;\nconst ArrayPrototype = NativeArray.prototype;\nconst ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\nconst ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\nconst ArrayPrototypeToLocaleString = uncurryThis(\n  ArrayPrototype.toLocaleString\n);\nconst NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\nconst ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\nconst MathTrunc = Math.trunc;\nconst NativeArrayBuffer = ArrayBuffer;\nconst ArrayBufferIsView = NativeArrayBuffer.isView;\nconst ArrayBufferPrototype = NativeArrayBuffer.prototype;\nconst ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\nconst ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\");\nconst NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\nconst SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer\n  && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\nconst TypedArray = ReflectGetPrototypeOf(Uint8Array);\nconst TypedArrayFrom = TypedArray.from;\nconst TypedArrayPrototype = TypedArray.prototype;\nconst NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\nconst TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\nconst TypedArrayPrototypeValues = uncurryThis(\n  TypedArrayPrototype.values\n);\nconst TypedArrayPrototypeEntries = uncurryThis(\n  TypedArrayPrototype.entries\n);\nconst TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\nconst TypedArrayPrototypeReverse = uncurryThis(\n  TypedArrayPrototype.reverse\n);\nconst TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\nconst TypedArrayPrototypeCopyWithin = uncurryThis(\n  TypedArrayPrototype.copyWithin\n);\nconst TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\nconst TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\nconst TypedArrayPrototypeSubarray = uncurryThis(\n  TypedArrayPrototype.subarray\n);\nconst TypedArrayPrototypeGetBuffer = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"buffer\"\n);\nconst TypedArrayPrototypeGetByteOffset = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"byteOffset\"\n);\nconst TypedArrayPrototypeGetLength = uncurryThisGetter(\n  TypedArrayPrototype,\n  \"length\"\n);\nconst TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(\n  TypedArrayPrototype,\n  SymbolToStringTag\n);\nconst NativeUint16Array = Uint16Array;\nconst Uint16ArrayFrom = (...args) => {\n  return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n};\nconst NativeUint32Array = Uint32Array;\nconst NativeFloat32Array = Float32Array;\nconst ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\nconst ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\nconst GeneratorPrototypeNext = uncurryThis((function* () {})().next);\nconst IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\nconst DataViewPrototype = DataView.prototype;\nconst DataViewPrototypeGetUint16 = uncurryThis(\n  DataViewPrototype.getUint16\n);\nconst DataViewPrototypeSetUint16 = uncurryThis(\n  DataViewPrototype.setUint16\n);\nconst NativeTypeError = TypeError;\nconst NativeRangeError = RangeError;\nconst NativeWeakSet = WeakSet;\nconst WeakSetPrototype = NativeWeakSet.prototype;\nconst WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\nconst WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has);\nconst NativeWeakMap = WeakMap;\nconst WeakMapPrototype = NativeWeakMap.prototype;\nconst WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\nconst WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\nconst WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);\n\nconst arrayIterators = new NativeWeakMap();\nconst SafeIteratorPrototype = ObjectCreate(null, {\n  next: {\n    value: function next() {\n      const arrayIterator = WeakMapPrototypeGet(arrayIterators, this);\n      return ArrayIteratorPrototypeNext(arrayIterator);\n    },\n  },\n  [SymbolIterator]: {\n    value: function values() {\n      return this;\n    },\n  },\n});\nfunction safeIfNeeded(array) {\n  if (array[SymbolIterator] === NativeArrayPrototypeSymbolIterator) {\n    return array;\n  }\n  const safe = ObjectCreate(SafeIteratorPrototype);\n  WeakMapPrototypeSet(arrayIterators, safe, ArrayPrototypeSymbolIterator(array));\n  return safe;\n}\nconst generators = new NativeWeakMap();\nconst DummyArrayIteratorPrototype = ObjectCreate(IteratorPrototype, {\n  next: {\n    value: function next() {\n      const generator = WeakMapPrototypeGet(generators, this);\n      return GeneratorPrototypeNext(generator);\n    },\n    writable: true,\n    configurable: true,\n  },\n});\nfor (const key of ReflectOwnKeys(ArrayIteratorPrototype)) {\n  if (key === \"next\") {\n    continue;\n  }\n  ObjectDefineProperty(DummyArrayIteratorPrototype, key, ReflectGetOwnPropertyDescriptor(ArrayIteratorPrototype, key));\n}\nfunction wrap(generator) {\n  const dummy = ObjectCreate(DummyArrayIteratorPrototype);\n  WeakMapPrototypeSet(generators, dummy, generator);\n  return dummy;\n}\n\nfunction isObject(value) {\n  return (value !== null && typeof value === \"object\") ||\n    typeof value === \"function\";\n}\nfunction isObjectLike(value) {\n  return value !== null && typeof value === \"object\";\n}\nfunction isNativeTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\nfunction isNativeBigIntTypedArray(value) {\n  const typedArrayName = TypedArrayPrototypeGetSymbolToStringTag(value);\n  return typedArrayName === \"BigInt64Array\" ||\n    typedArrayName === \"BigUint64Array\";\n}\nfunction isArrayBuffer(value) {\n  try {\n    ArrayBufferPrototypeGetByteLength( (value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction isSharedArrayBuffer(value) {\n  if (NativeSharedArrayBuffer === null) {\n    return false;\n  }\n  try {\n    SharedArrayBufferPrototypeGetByteLength( (value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction isOrdinaryArray(value) {\n  if (!ArrayIsArray(value)) {\n    return false;\n  }\n  if (value[SymbolIterator] === NativeArrayPrototypeSymbolIterator) {\n    return true;\n  }\n  const iterator = value[SymbolIterator]();\n  return iterator[SymbolToStringTag] === \"Array Iterator\";\n}\nfunction isOrdinaryNativeTypedArray(value) {\n  if (!isNativeTypedArray(value)) {\n    return false;\n  }\n  if (value[SymbolIterator] === NativeTypedArrayPrototypeSymbolIterator) {\n    return true;\n  }\n  const iterator = value[SymbolIterator]();\n  return iterator[SymbolToStringTag] === \"Array Iterator\";\n}\nfunction isCanonicalIntegerIndexString(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  const number = +value;\n  if (value !== number + \"\") {\n    return false;\n  }\n  if (!NumberIsFinite(number)) {\n    return false;\n  }\n  return number === MathTrunc(number);\n}\n\nconst brand = SymbolFor(\"__Float16Array__\");\nfunction hasFloat16ArrayBrand(target) {\n  if (!isObjectLike(target)) {\n    return false;\n  }\n  const prototype = ReflectGetPrototypeOf(target);\n  if (!isObjectLike(prototype)) {\n    return false;\n  }\n  const constructor = prototype.constructor;\n  if (constructor === undefined) {\n    return false;\n  }\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n  return ReflectHas(constructor, brand);\n}\n\nconst buffer = new NativeArrayBuffer(4);\nconst floatView = new NativeFloat32Array(buffer);\nconst uint32View = new NativeUint32Array(buffer);\nconst baseTable = new NativeUint32Array(512);\nconst shiftTable = new NativeUint32Array(512);\nfor (let i = 0; i < 256; ++i) {\n  const e = i - 127;\n  if (e < -27) {\n    baseTable[i]         = 0x0000;\n    baseTable[i | 0x100] = 0x8000;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n  } else if (e < -14) {\n    baseTable[i]         =  0x0400 >> (-e - 14);\n    baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n    shiftTable[i]         = -e - 1;\n    shiftTable[i | 0x100] = -e - 1;\n  } else if (e <= 15) {\n    baseTable[i]         =  (e + 15) << 10;\n    baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n  } else if (e < 128) {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n  } else {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n  }\n}\nfunction roundToFloat16Bits(num) {\n  floatView[0] =  (num);\n  const f = uint32View[0];\n  const e = (f >> 23) & 0x1ff;\n  return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\nconst mantissaTable = new NativeUint32Array(2048);\nconst exponentTable = new NativeUint32Array(64);\nconst offsetTable = new NativeUint32Array(64);\nfor (let i = 1; i < 1024; ++i) {\n  let m = i << 13;\n  let e = 0;\n  while((m & 0x00800000) === 0) {\n    m <<= 1;\n    e -= 0x00800000;\n  }\n  m &= ~0x00800000;\n  e += 0x38800000;\n  mantissaTable[i] = m | e;\n}\nfor (let i = 1024; i < 2048; ++i) {\n  mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\nfor (let i = 1; i < 31; ++i) {\n  exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor (let i = 33; i < 63; ++i) {\n  exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\nfor (let i = 1; i < 64; ++i) {\n  if (i !== 32) {\n    offsetTable[i] = 1024;\n  }\n}\nfunction convertToNumber(float16bits) {\n  const m = float16bits >> 10;\n  uint32View[0] = mantissaTable[offsetTable[m] + (float16bits & 0x3ff)] + exponentTable[m];\n  return floatView[0];\n}\n\nfunction ToIntegerOrInfinity(target) {\n  const number = +target;\n  if (NumberIsNaN(number) || number === 0) {\n    return 0;\n  }\n  return MathTrunc(number);\n}\nfunction ToLength(target) {\n  const length = ToIntegerOrInfinity(target);\n  if (length < 0) {\n    return 0;\n  }\n  return length < MAX_SAFE_INTEGER\n    ? length\n    : MAX_SAFE_INTEGER;\n}\nfunction SpeciesConstructor(target, defaultConstructor) {\n  if (!isObject(target)) {\n    throw NativeTypeError(THIS_IS_NOT_AN_OBJECT);\n  }\n  const constructor = target.constructor;\n  if (constructor === undefined) {\n    return defaultConstructor;\n  }\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n  const species = constructor[SymbolSpecies];\n  if (species == null) {\n    return defaultConstructor;\n  }\n  return species;\n}\nfunction IsDetachedBuffer(buffer) {\n  if (isSharedArrayBuffer(buffer)) {\n    return false;\n  }\n  try {\n    ArrayBufferPrototypeSlice(buffer, 0, 0);\n    return false;\n  } catch (e) {}\n  return true;\n}\nfunction defaultCompare(x, y) {\n  const isXNaN = NumberIsNaN(x);\n  const isYNaN = NumberIsNaN(y);\n  if (isXNaN && isYNaN) {\n    return 0;\n  }\n  if (isXNaN) {\n    return 1;\n  }\n  if (isYNaN) {\n    return -1;\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (x > y) {\n    return 1;\n  }\n  if (x === 0 && y === 0) {\n    const isXPlusZero = ObjectIs(x, 0);\n    const isYPlusZero = ObjectIs(y, 0);\n    if (!isXPlusZero && isYPlusZero) {\n      return -1;\n    }\n    if (isXPlusZero && !isYPlusZero) {\n      return 1;\n    }\n  }\n  return 0;\n}\n\nconst BYTES_PER_ELEMENT = 2;\nconst float16bitsArrays = new NativeWeakMap();\nfunction isFloat16Array(target) {\n  return WeakMapPrototypeHas(float16bitsArrays, target) ||\n    (!ArrayBufferIsView(target) && hasFloat16ArrayBrand(target));\n}\nfunction assertFloat16Array(target) {\n  if (!isFloat16Array(target)) {\n    throw NativeTypeError(THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT);\n  }\n}\nfunction assertSpeciesTypedArray(target, count) {\n  const isTargetFloat16Array = isFloat16Array(target);\n  const isTargetTypedArray = isNativeTypedArray(target);\n  if (!isTargetFloat16Array && !isTargetTypedArray) {\n    throw NativeTypeError(SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT);\n  }\n  if (typeof count === \"number\") {\n    let length;\n    if (isTargetFloat16Array) {\n      const float16bitsArray = getFloat16BitsArray(target);\n      length = TypedArrayPrototypeGetLength(float16bitsArray);\n    } else {\n      length = TypedArrayPrototypeGetLength(target);\n    }\n    if (length < count) {\n      throw NativeTypeError(\n        DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH\n      );\n    }\n  }\n  if (isNativeBigIntTypedArray(target)) {\n    throw NativeTypeError(CANNOT_MIX_BIGINT_AND_OTHER_TYPES);\n  }\n}\nfunction getFloat16BitsArray(float16) {\n  const float16bitsArray = WeakMapPrototypeGet(float16bitsArrays, float16);\n  if (float16bitsArray !== undefined) {\n    const buffer = TypedArrayPrototypeGetBuffer(float16bitsArray);\n    if (IsDetachedBuffer(buffer)) {\n      throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n    }\n    return float16bitsArray;\n  }\n  const buffer =  (float16).buffer;\n  if (IsDetachedBuffer(buffer)) {\n    throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n  }\n  const cloned = ReflectConstruct(Float16Array, [\n    buffer,\n     (float16).byteOffset,\n     (float16).length,\n  ], float16.constructor);\n  return WeakMapPrototypeGet(float16bitsArrays, cloned);\n}\nfunction copyToArray(float16bitsArray) {\n  const length = TypedArrayPrototypeGetLength(float16bitsArray);\n  const array = [];\n  for (let i = 0; i < length; ++i) {\n    array[i] = convertToNumber(float16bitsArray[i]);\n  }\n  return array;\n}\nconst TypedArrayPrototypeGetters = new NativeWeakSet();\nfor (const key of ReflectOwnKeys(TypedArrayPrototype)) {\n  if (key === SymbolToStringTag) {\n    continue;\n  }\n  const descriptor = ReflectGetOwnPropertyDescriptor(TypedArrayPrototype, key);\n  if (ObjectHasOwn(descriptor, \"get\") && typeof descriptor.get === \"function\") {\n    WeakSetPrototypeAdd(TypedArrayPrototypeGetters, descriptor.get);\n  }\n}\nconst handler = ObjectFreeze( ({\n  get(target, key, receiver) {\n    if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n      return convertToNumber(ReflectGet(target, key));\n    }\n    if (WeakSetPrototypeHas(TypedArrayPrototypeGetters, ObjectPrototype__lookupGetter__(target, key))) {\n      return ReflectGet(target, key);\n    }\n    return ReflectGet(target, key, receiver);\n  },\n  set(target, key, value, receiver) {\n    if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n      return ReflectSet(target, key, roundToFloat16Bits(value));\n    }\n    return ReflectSet(target, key, value, receiver);\n  },\n  getOwnPropertyDescriptor(target, key) {\n    if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n      const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n      descriptor.value = convertToNumber(descriptor.value);\n      return descriptor;\n    }\n    return ReflectGetOwnPropertyDescriptor(target, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (\n      isCanonicalIntegerIndexString(key) &&\n      ObjectHasOwn(target, key) &&\n      ObjectHasOwn(descriptor, \"value\")\n    ) {\n      descriptor.value = roundToFloat16Bits(descriptor.value);\n      return ReflectDefineProperty(target, key, descriptor);\n    }\n    return ReflectDefineProperty(target, key, descriptor);\n  },\n}));\nclass Float16Array {\n  constructor(input, _byteOffset, _length) {\n    let float16bitsArray;\n    if (isFloat16Array(input)) {\n      float16bitsArray = ReflectConstruct(NativeUint16Array, [getFloat16BitsArray(input)], new.target);\n    } else if (isObject(input) && !isArrayBuffer(input)) {\n      let list;\n      let length;\n      if (isNativeTypedArray(input)) {\n        list = input;\n        length = TypedArrayPrototypeGetLength(input);\n        const buffer = TypedArrayPrototypeGetBuffer(input);\n        const BufferConstructor = !isSharedArrayBuffer(buffer)\n          ?  (SpeciesConstructor(\n            buffer,\n            NativeArrayBuffer\n          ))\n          : NativeArrayBuffer;\n        if (IsDetachedBuffer(buffer)) {\n          throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n        }\n        if (isNativeBigIntTypedArray(input)) {\n          throw NativeTypeError(CANNOT_MIX_BIGINT_AND_OTHER_TYPES);\n        }\n        const data = new BufferConstructor(\n          length * BYTES_PER_ELEMENT\n        );\n        float16bitsArray = ReflectConstruct(NativeUint16Array, [data], new.target);\n      } else {\n        const iterator = input[SymbolIterator];\n        if (iterator != null && typeof iterator !== \"function\") {\n          throw NativeTypeError(ITERATOR_PROPERTY_IS_NOT_CALLABLE);\n        }\n        if (iterator != null) {\n          if (isOrdinaryArray(input)) {\n            list = input;\n            length = input.length;\n          } else {\n            list = [...  (input)];\n            length = list.length;\n          }\n        } else {\n          list =  (input);\n          length = ToLength(list.length);\n        }\n        float16bitsArray = ReflectConstruct(NativeUint16Array, [length], new.target);\n      }\n      for (let i = 0; i < length; ++i) {\n        float16bitsArray[i] = roundToFloat16Bits(list[i]);\n      }\n    } else {\n      float16bitsArray = ReflectConstruct(NativeUint16Array, arguments, new.target);\n    }\n    const proxy =  (new NativeProxy(float16bitsArray, handler));\n    WeakMapPrototypeSet(float16bitsArrays, proxy, float16bitsArray);\n    return proxy;\n  }\n  static from(src, ...opts) {\n    const Constructor = this;\n    if (!ReflectHas(Constructor, brand)) {\n      throw NativeTypeError(\n        THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY\n      );\n    }\n    if (Constructor === Float16Array) {\n      if (isFloat16Array(src) && opts.length === 0) {\n        const float16bitsArray = getFloat16BitsArray(src);\n        const uint16 = new NativeUint16Array(\n          TypedArrayPrototypeGetBuffer(float16bitsArray),\n          TypedArrayPrototypeGetByteOffset(float16bitsArray),\n          TypedArrayPrototypeGetLength(float16bitsArray)\n        );\n        return new Float16Array(\n          TypedArrayPrototypeGetBuffer(TypedArrayPrototypeSlice(uint16))\n        );\n      }\n      if (opts.length === 0) {\n        return new Float16Array(\n          TypedArrayPrototypeGetBuffer(\n            Uint16ArrayFrom(src, roundToFloat16Bits)\n          )\n        );\n      }\n      const mapFunc = opts[0];\n      const thisArg = opts[1];\n      return new Float16Array(\n        TypedArrayPrototypeGetBuffer(\n          Uint16ArrayFrom(src, function (val, ...args) {\n            return roundToFloat16Bits(\n              ReflectApply(mapFunc, this, [val, ...safeIfNeeded(args)])\n            );\n          }, thisArg)\n        )\n      );\n    }\n    let list;\n    let length;\n    const iterator = src[SymbolIterator];\n    if (iterator != null && typeof iterator !== \"function\") {\n      throw NativeTypeError(ITERATOR_PROPERTY_IS_NOT_CALLABLE);\n    }\n    if (iterator != null) {\n      if (isOrdinaryArray(src)) {\n        list = src;\n        length = src.length;\n      } else if (isOrdinaryNativeTypedArray(src)) {\n        list = src;\n        length = TypedArrayPrototypeGetLength(src);\n      } else {\n        list = [...src];\n        length = list.length;\n      }\n    } else {\n      if (src == null) {\n        throw NativeTypeError(\n          CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n        );\n      }\n      list = NativeObject(src);\n      length = ToLength(list.length);\n    }\n    const array = new Constructor(length);\n    if (opts.length === 0) {\n      for (let i = 0; i < length; ++i) {\n        array[i] =  (list[i]);\n      }\n    } else {\n      const mapFunc = opts[0];\n      const thisArg = opts[1];\n      for (let i = 0; i < length; ++i) {\n        array[i] = ReflectApply(mapFunc, thisArg, [list[i], i]);\n      }\n    }\n    return array;\n  }\n  static of(...items) {\n    const Constructor = this;\n    if (!ReflectHas(Constructor, brand)) {\n      throw NativeTypeError(\n        THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY\n      );\n    }\n    const length = items.length;\n    if (Constructor === Float16Array) {\n      const proxy = new Float16Array(length);\n      const float16bitsArray = getFloat16BitsArray(proxy);\n      for (let i = 0; i < length; ++i) {\n        float16bitsArray[i] = roundToFloat16Bits(items[i]);\n      }\n      return proxy;\n    }\n    const array = new Constructor(length);\n    for (let i = 0; i < length; ++i) {\n      array[i] = items[i];\n    }\n    return array;\n  }\n  keys() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    return TypedArrayPrototypeKeys(float16bitsArray);\n  }\n  values() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    return wrap((function* () {\n      for (const val of TypedArrayPrototypeValues(float16bitsArray)) {\n        yield convertToNumber(val);\n      }\n    })());\n  }\n  entries() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    return wrap((function* () {\n      for (const [i, val] of TypedArrayPrototypeEntries(float16bitsArray)) {\n        yield  ([i, convertToNumber(val)]);\n      }\n    })());\n  }\n  at(index) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const relativeIndex = ToIntegerOrInfinity(index);\n    const k = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n    if (k < 0 || k >= length) {\n      return;\n    }\n    return convertToNumber(float16bitsArray[k]);\n  }\n  map(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n    if (Constructor === Float16Array) {\n      const proxy = new Float16Array(length);\n      const array = getFloat16BitsArray(proxy);\n      for (let i = 0; i < length; ++i) {\n        const val = convertToNumber(float16bitsArray[i]);\n        array[i] = roundToFloat16Bits(\n          ReflectApply(callback, thisArg, [val, i, this])\n        );\n      }\n      return proxy;\n    }\n    const array = new Constructor(length);\n    assertSpeciesTypedArray(array, length);\n    for (let i = 0; i < length; ++i) {\n      const val = convertToNumber(float16bitsArray[i]);\n      array[i] = ReflectApply(callback, thisArg, [val, i, this]);\n    }\n    return  (array);\n  }\n  filter(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    const kept = [];\n    for (let i = 0; i < length; ++i) {\n      const val = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [val, i, this])) {\n        ArrayPrototypePush(kept, val);\n      }\n    }\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n    const array = new Constructor(kept);\n    assertSpeciesTypedArray(array);\n    return  (array);\n  }\n  reduce(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    if (length === 0 && opts.length === 0) {\n      throw NativeTypeError(REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE);\n    }\n    let accumulator, start;\n    if (opts.length === 0) {\n      accumulator = convertToNumber(float16bitsArray[0]);\n      start = 1;\n    } else {\n      accumulator = opts[0];\n      start = 0;\n    }\n    for (let i = start; i < length; ++i) {\n      accumulator = callback(\n        accumulator,\n        convertToNumber(float16bitsArray[i]),\n        i,\n        this\n      );\n    }\n    return accumulator;\n  }\n  reduceRight(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    if (length === 0 && opts.length === 0) {\n      throw NativeTypeError(REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE);\n    }\n    let accumulator, start;\n    if (opts.length === 0) {\n      accumulator = convertToNumber(float16bitsArray[length - 1]);\n      start = length - 2;\n    } else {\n      accumulator = opts[0];\n      start = length - 1;\n    }\n    for (let i = start; i >= 0; --i) {\n      accumulator = callback(\n        accumulator,\n        convertToNumber(float16bitsArray[i]),\n        i,\n        this\n      );\n    }\n    return accumulator;\n  }\n  forEach(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      ReflectApply(callback, thisArg, [\n        convertToNumber(float16bitsArray[i]),\n        i,\n        this,\n      ]);\n    }\n  }\n  find(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return value;\n      }\n    }\n  }\n  findIndex(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  findLast(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = length - 1; i >= 0; --i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return value;\n      }\n    }\n  }\n  findLastIndex(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = length - 1; i >= 0; --i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (ReflectApply(callback, thisArg, [value, i, this])) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  every(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      if (\n        !ReflectApply(callback, thisArg, [\n          convertToNumber(float16bitsArray[i]),\n          i,\n          this,\n        ])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n  some(callback, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const thisArg = opts[0];\n    for (let i = 0; i < length; ++i) {\n      if (\n        ReflectApply(callback, thisArg, [\n          convertToNumber(float16bitsArray[i]),\n          i,\n          this,\n        ])\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n  set(input, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const targetOffset = ToIntegerOrInfinity(opts[0]);\n    if (targetOffset < 0) {\n      throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n    }\n    if (input == null) {\n      throw NativeTypeError(\n        CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n      );\n    }\n    if (isNativeBigIntTypedArray(input)) {\n      throw NativeTypeError(\n        CANNOT_MIX_BIGINT_AND_OTHER_TYPES\n      );\n    }\n    if (isFloat16Array(input)) {\n      return TypedArrayPrototypeSet(\n        getFloat16BitsArray(this),\n        getFloat16BitsArray(input),\n        targetOffset\n      );\n    }\n    if (isNativeTypedArray(input)) {\n      const buffer = TypedArrayPrototypeGetBuffer(input);\n      if (IsDetachedBuffer(buffer)) {\n        throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n      }\n    }\n    const targetLength = TypedArrayPrototypeGetLength(float16bitsArray);\n    const src = NativeObject(input);\n    const srcLength = ToLength(src.length);\n    if (targetOffset === Infinity || srcLength + targetOffset > targetLength) {\n      throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n    }\n    for (let i = 0; i < srcLength; ++i) {\n      float16bitsArray[i + targetOffset] = roundToFloat16Bits(src[i]);\n    }\n  }\n  reverse() {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    TypedArrayPrototypeReverse(float16bitsArray);\n    return this;\n  }\n  fill(value, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    TypedArrayPrototypeFill(\n      float16bitsArray,\n      roundToFloat16Bits(value),\n      ...safeIfNeeded(opts)\n    );\n    return this;\n  }\n  copyWithin(target, start, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    TypedArrayPrototypeCopyWithin(float16bitsArray, target, start, ...safeIfNeeded(opts));\n    return this;\n  }\n  sort(compareFn) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const sortCompare = compareFn !== undefined ? compareFn : defaultCompare;\n    TypedArrayPrototypeSort(float16bitsArray, (x, y) => {\n      return sortCompare(convertToNumber(x), convertToNumber(y));\n    });\n    return this;\n  }\n  slice(start, end) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n    if (Constructor === Float16Array) {\n      const uint16 = new NativeUint16Array(\n        TypedArrayPrototypeGetBuffer(float16bitsArray),\n        TypedArrayPrototypeGetByteOffset(float16bitsArray),\n        TypedArrayPrototypeGetLength(float16bitsArray)\n      );\n      return new Float16Array(\n        TypedArrayPrototypeGetBuffer(\n          TypedArrayPrototypeSlice(uint16, start, end)\n        )\n      );\n    }\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const relativeStart = ToIntegerOrInfinity(start);\n    const relativeEnd = end === undefined ? length : ToIntegerOrInfinity(end);\n    let k;\n    if (relativeStart === -Infinity) {\n      k = 0;\n    } else if (relativeStart < 0) {\n      k = length + relativeStart > 0 ? length + relativeStart : 0;\n    } else {\n      k = length < relativeStart ? length : relativeStart;\n    }\n    let final;\n    if (relativeEnd === -Infinity) {\n      final = 0;\n    } else if (relativeEnd < 0) {\n      final = length + relativeEnd > 0 ? length + relativeEnd : 0;\n    } else {\n      final = length < relativeEnd ? length : relativeEnd;\n    }\n    const count = final - k > 0 ? final - k : 0;\n    const array = new Constructor(count);\n    assertSpeciesTypedArray(array, count);\n    if (count === 0) {\n      return array;\n    }\n    const buffer = TypedArrayPrototypeGetBuffer(float16bitsArray);\n    if (IsDetachedBuffer(buffer)) {\n      throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n    }\n    let n = 0;\n    while (k < final) {\n      array[n] = convertToNumber(float16bitsArray[k]);\n      ++k;\n      ++n;\n    }\n    return  (array);\n  }\n  subarray(begin, end) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n    const uint16 = new NativeUint16Array(\n      TypedArrayPrototypeGetBuffer(float16bitsArray),\n      TypedArrayPrototypeGetByteOffset(float16bitsArray),\n      TypedArrayPrototypeGetLength(float16bitsArray)\n    );\n    const uint16Subarray = TypedArrayPrototypeSubarray(uint16, begin, end);\n    const array = new Constructor(\n      TypedArrayPrototypeGetBuffer(uint16Subarray),\n      TypedArrayPrototypeGetByteOffset(uint16Subarray),\n      TypedArrayPrototypeGetLength(uint16Subarray)\n    );\n    assertSpeciesTypedArray(array);\n    return  (array);\n  }\n  indexOf(element, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    let from = ToIntegerOrInfinity(opts[0]);\n    if (from === Infinity) {\n      return -1;\n    }\n    if (from < 0) {\n      from += length;\n      if (from < 0) {\n        from = 0;\n      }\n    }\n    for (let i = from; i < length; ++i) {\n      if (\n        ObjectHasOwn(float16bitsArray, i) &&\n        convertToNumber(float16bitsArray[i]) === element\n      ) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  lastIndexOf(element, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    let from = opts.length >= 1 ? ToIntegerOrInfinity(opts[0]) : length - 1;\n    if (from === -Infinity) {\n      return -1;\n    }\n    if (from >= 0) {\n      from = from < length - 1 ? from : length - 1;\n    } else {\n      from += length;\n    }\n    for (let i = from; i >= 0; --i) {\n      if (\n        ObjectHasOwn(float16bitsArray, i) &&\n        convertToNumber(float16bitsArray[i]) === element\n      ) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  includes(element, ...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    let from = ToIntegerOrInfinity(opts[0]);\n    if (from === Infinity) {\n      return false;\n    }\n    if (from < 0) {\n      from += length;\n      if (from < 0) {\n        from = 0;\n      }\n    }\n    const isNaN = NumberIsNaN(element);\n    for (let i = from; i < length; ++i) {\n      const value = convertToNumber(float16bitsArray[i]);\n      if (isNaN && NumberIsNaN(value)) {\n        return true;\n      }\n      if (value === element) {\n        return true;\n      }\n    }\n    return false;\n  }\n  join(separator) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const array = copyToArray(float16bitsArray);\n    return ArrayPrototypeJoin(array, separator);\n  }\n  toLocaleString(...opts) {\n    assertFloat16Array(this);\n    const float16bitsArray = getFloat16BitsArray(this);\n    const array = copyToArray(float16bitsArray);\n    return ArrayPrototypeToLocaleString(array, ...safeIfNeeded(opts));\n  }\n  get [SymbolToStringTag]() {\n    if (isFloat16Array(this)) {\n      return  (\"Float16Array\");\n    }\n  }\n}\nObjectDefineProperty(Float16Array, \"BYTES_PER_ELEMENT\", {\n  value: BYTES_PER_ELEMENT,\n});\nObjectDefineProperty(Float16Array, brand, {});\nReflectSetPrototypeOf(Float16Array, TypedArray);\nconst Float16ArrayPrototype = Float16Array.prototype;\nObjectDefineProperty(Float16ArrayPrototype, \"BYTES_PER_ELEMENT\", {\n  value: BYTES_PER_ELEMENT,\n});\nObjectDefineProperty(Float16ArrayPrototype, SymbolIterator, {\n  value: Float16ArrayPrototype.values,\n  writable: true,\n  configurable: true,\n});\nReflectSetPrototypeOf(Float16ArrayPrototype, TypedArrayPrototype);\n\nfunction isTypedArray(target) {\n  return isNativeTypedArray(target) || isFloat16Array(target);\n}\n\nfunction getFloat16(dataView, byteOffset, ...opts) {\n  return convertToNumber(\n    DataViewPrototypeGetUint16(dataView, byteOffset, ...safeIfNeeded(opts))\n  );\n}\nfunction setFloat16(dataView, byteOffset, value, ...opts) {\n  return DataViewPrototypeSetUint16(\n    dataView,\n    byteOffset,\n    roundToFloat16Bits(value),\n    ...safeIfNeeded(opts)\n  );\n}\n\nfunction hfround(x) {\n  const number = +x;\n  if (!NumberIsFinite(number) || number === 0) {\n    return number;\n  }\n  const x16 = roundToFloat16Bits(number);\n  return convertToNumber(x16);\n}\n\nexport { Float16Array, getFloat16, hfround, isFloat16Array, isTypedArray, setFloat16 };\n"],"file":"float16.js"}