{"version":3,"sources":["../../../../../src/webgpu/shader/execution/builtin/builtin.ts"],"names":["Colors","runShaderTest","t","storageClass","storageMode","type","arrayLength","builtin","arrayType","cases","source","length","inputData","i","j","input","value","inputBuffer","makeBufferWithContents","GPUBufferUsage","COPY_SRC","STORAGE","outputBuffer","device","createBuffer","size","usage","COPY_DST","module","createShaderModule","code","pipeline","createComputePipeline","compute","entryPoint","group","createBindGroup","layout","getBindGroupLayout","entries","binding","resource","buffer","encoder","createCommandEncoder","pass","beginComputePass","setPipeline","setBindGroup","dispatch","endPass","queue","submit","finish","formatNum","num","color","reset","Infinity","bold","toString","checkExpectation","outputData","errs","inputValue","outputValue","expectedValue","caseMatched","idx","expectedIndex","push","elementMatched","expected","some","e","green","red","caseExpected","grey","join","Error","undefined","expectGPUBufferValuesPassCheck","typedLength","kBit","i32","positive","min","max","negative","u32","f32","zero","subnormal","nan","s","q","infinity","powTwo","toMinus1","toMinus2","toMinus3","toMinus4","toMinus5","toMinus6","toMinus7","toMinus8","toMinus9","toMinus10","toMinus11","toMinus12","toMinus13","toMinus14","toMinus15","toMinus16","toMinus17","toMinus18","toMinus19","toMinus20","toMinus21","toMinus22","toMinus23","toMinus24","toMinus25","toMinus26","toMinus27","toMinus28","toMinus29","toMinus30","toMinus31","to0","to1","to2","to3","to4","to5","to6","to7","to8","to9","to10","to11","to12","to13","to14","to15","to16","to17","to18","to19","to20","to21","to22","to23","to24","to25","to26","to27","to28","to29","to30","to31","negPowTwo","kValue","Math","pow","to32","toMinus32"],"mappings":"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","sourcesContent":["import { Colors } from '../../../../common/util/colors.js';\nimport {\n  TypedArrayBufferView,\n  TypedArrayBufferViewConstructor,\n} from '../../../../common/util/util.js';\nimport { GPUTest } from '../../../gpu_test.js';\nimport { NumberType, NumberRepr } from '../../../util/conversion.js';\n\nexport type Case<T extends NumberType> = {\n  input: NumberRepr<T>;\n  expected: Array<NumberRepr<T>>;\n};\n\nexport function runShaderTest<F extends NumberType>(\n  t: GPUTest,\n  storageClass: string,\n  storageMode: string,\n  type: string,\n  arrayLength: number,\n  builtin: string,\n  arrayType: TypedArrayBufferViewConstructor,\n  cases: Array<Case<F>>\n): void {\n  const source = `\n    [[block]]\n    struct Data {\n      values : [[stride(16)]] array<${type}, ${cases.length}>;\n    };\n\n    [[group(0), binding(0)]] var<${storageClass}, ${storageMode}> inputs : Data;\n    [[group(0), binding(1)]] var<${storageClass}, write> outputs : Data;\n\n    [[stage(compute), workgroup_size(1)]]\n    fn main() {\n      for(var i = 0; i < ${cases.length}; i = i + 1) {\n          let input : ${type} = inputs.values[i];\n          let result : ${type} = ${builtin}(input);\n          outputs.values[i] = result;\n      }\n    }\n  `;\n\n  const inputData: TypedArrayBufferView = new arrayType(cases.length * 4);\n\n  // an arbitrary approach of mapping cases into inputData:\n  // if the arrayLength > 1, ie. type is a vector, or matrix then\n  //   fill the i-th element with the input value of cases[i+j]\n  // if arrayLength = 1 or i+j > length of cases\n  //   fill the i-th element with input value of  cases[i]\n  // TODO(sarahM0): This is using a TypedArray to convert the value into bits,\n  // but NumberRepr already has bits. There's a chance some numbers won't get the same bit pattern both ways\n  // (having been converted from bits to double back to bits). Probably best to copy the bits in directly.\n  for (let i = 0; i < cases.length; i++) {\n    for (let j = 0; j < arrayLength; j++) {\n      inputData[i * 4 + j] = (i + j < cases.length\n        ? cases[i + j].input.value\n        : cases[i].input.value) as number;\n    }\n  }\n\n  const inputBuffer = t.makeBufferWithContents(\n    inputData,\n    GPUBufferUsage.COPY_SRC | GPUBufferUsage.STORAGE\n  );\n\n  const outputBuffer = t.device.createBuffer({\n    // TODO(sarahM0): investigate why \"size: cases.length*4*arrayLength\" returns zero\n    size: inputData.length * 4,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST | GPUBufferUsage.STORAGE,\n  });\n\n  const module = t.device.createShaderModule({ code: source });\n  const pipeline = t.device.createComputePipeline({\n    compute: { module, entryPoint: 'main' },\n  });\n\n  const group = t.device.createBindGroup({\n    layout: pipeline.getBindGroupLayout(0),\n    entries: [\n      { binding: 0, resource: { buffer: inputBuffer } },\n      { binding: 1, resource: { buffer: outputBuffer } },\n    ],\n  });\n\n  const encoder = t.device.createCommandEncoder();\n  const pass = encoder.beginComputePass();\n  pass.setPipeline(pipeline);\n  pass.setBindGroup(0, group);\n  pass.dispatch(1);\n  pass.endPass();\n\n  t.queue.submit([encoder.finish()]);\n\n  // Returns the string representation of num using the specified color.\n  const formatNum = (num: number | bigint, color = Colors.reset) => {\n    switch (num) {\n      case 0:\n      case Infinity:\n      case -Infinity:\n        return color.bold(num.toString());\n      default:\n        return color.bold(num.toString()) + color(' (0x' + num.toString(16) + ')');\n    }\n  };\n\n  const checkExpectation = (outputData: typeof inputData) => {\n    // The list of expectation failures\n    const errs: string[] = [];\n\n    // For each case...\n    for (let i = 0; i < cases.length; i++) {\n      // String representations of the input, output and expectation values for this case.\n      const inputValue: string[] = [];\n      const outputValue: string[] = [];\n      const expectedValue: string[] = [];\n      let caseMatched = true;\n\n      // For each element in the case...\n      for (let j = 0; j < arrayLength; j++) {\n        const idx = i * 4 + j;\n        const expectedIndex = i + j < cases.length ? i + j : i;\n        inputValue.push(formatNum(inputData[idx]));\n\n        // `cases[expectedIndex].expected` is an array of values that are treated as a pass.\n        // Do any of these expected values match?\n        const elementMatched = cases[expectedIndex].expected.some(e => e.value === outputData[idx]);\n        outputValue.push(formatNum(outputData[idx], elementMatched ? Colors.green : Colors.red));\n\n        const caseExpected: string[] = [];\n        for (const e of cases[expectedIndex].expected) {\n          if (outputData[idx] === e.value) {\n            // This expected value matched\n            caseExpected.push(formatNum(e.value, Colors.green));\n          } else if (elementMatched) {\n            // The element matched, but it wasn't for this value.\n            caseExpected.push(formatNum(e.value, Colors.grey));\n          } else {\n            // The element did not match any expected value\n            caseExpected.push(formatNum(e.value, Colors.red));\n          }\n        }\n        expectedValue.push(caseExpected.join(' or '));\n\n        // If none of the expected values matched, then the case has failed.\n        caseMatched = caseMatched && elementMatched;\n      }\n\n      if (!caseMatched) {\n        if (arrayLength > 1) {\n          errs.push(\n            `${builtin}(${type}(${inputValue.join(', ')}))\\n` +\n              `    returned: ${type}(${outputValue.join(', ')})\\n` +\n              `    expected: ${type}(${expectedValue.join(', ')})`\n          );\n        } else {\n          errs.push(\n            `${builtin}(${inputValue.join(', ')})\\n` +\n              `    returned: ${outputValue.join(', ')}\\n` +\n              `    expected: ${expectedValue.join(', ')}`\n          );\n        }\n      }\n    }\n\n    if (errs.length > 0) {\n      return new Error(errs.join('\\n\\n'));\n    }\n    return undefined;\n  };\n\n  t.expectGPUBufferValuesPassCheck(outputBuffer, checkExpectation, {\n    type: arrayType,\n    typedLength: inputData.length,\n  });\n}\n\n// TODO(sarahM0): Perhaps instead of kBit and kValue tables we could have one table\n// where every value is a NumberRepr instead of either bits or value?\n// Then tests wouldn't need most of the NumberRepr.fromX calls,\n// and you would probably need fewer table entries in total\n// (since each NumberRepr has both bits and value).\nexport const kBit = {\n  // Limits of int32\n  i32: {\n    positive: {\n      min: 0x0000_0000, // 0\n      max: 0x7fff_ffff, // 2147483647\n    },\n    negative: {\n      min: 0x8000_0000, // -2147483648\n      max: 0x0000_0000, // 0\n    },\n  },\n\n  // Limits of uint32\n  u32: {\n    min: 0x0000_0000,\n    max: 0xffff_ffff,\n  },\n\n  // Limits of f32\n  f32: {\n    positive: {\n      min: 0x0080_0000,\n      max: 0x7f7f_ffff,\n      zero: 0x0000_0000,\n    },\n    negative: {\n      max: 0x8080_0000,\n      min: 0xff7f_ffff,\n      zero: 0x8000_0000,\n    },\n    subnormal: {\n      positive: {\n        min: 0x0000_0001,\n        max: 0x007f_ffff,\n      },\n    },\n    nan: {\n      negative: {\n        s: 0xff80_0001,\n        q: 0xffc0_0001,\n      },\n      positive: {\n        s: 0x7f80_0001,\n        q: 0x7fc0_0001,\n      },\n    },\n    infinity: {\n      positive: 0x7f80_0000,\n      negative: 0xff80_0000,\n    },\n  },\n\n  // 32-bit representation of power(2, n) n = {-31, ..., 31}\n  // A uint32 representation as a JS `number`\n  // {toMinus31, ..., to31} ie. {-31, ..., 31}\n  powTwo: {\n    toMinus1: 0x3f00_0000,\n    toMinus2: 0x3e80_0000,\n    toMinus3: 0x3e00_0000,\n    toMinus4: 0x3d80_0000,\n    toMinus5: 0x3d00_0000,\n    toMinus6: 0x3c80_0000,\n    toMinus7: 0x3c00_0000,\n    toMinus8: 0x3b80_0000,\n    toMinus9: 0x3b00_0000,\n    toMinus10: 0x3a80_0000,\n    toMinus11: 0x3a00_0000,\n    toMinus12: 0x3980_0000,\n    toMinus13: 0x3900_0000,\n    toMinus14: 0x3880_0000,\n    toMinus15: 0x3800_0000,\n    toMinus16: 0x3780_0000,\n    toMinus17: 0x3700_0000,\n    toMinus18: 0x3680_0000,\n    toMinus19: 0x3600_0000,\n    toMinus20: 0x3580_0000,\n    toMinus21: 0x3500_0000,\n    toMinus22: 0x3480_0000,\n    toMinus23: 0x3400_0000,\n    toMinus24: 0x3380_0000,\n    toMinus25: 0x3300_0000,\n    toMinus26: 0x3280_0000,\n    toMinus27: 0x3200_0000,\n    toMinus28: 0x3180_0000,\n    toMinus29: 0x3100_0000,\n    toMinus30: 0x3080_0000,\n    toMinus31: 0x3000_0000,\n\n    to0: 0x0000_0001,\n    to1: 0x0000_0002,\n    to2: 0x0000_0004,\n    to3: 0x0000_0008,\n    to4: 0x0000_0010,\n    to5: 0x0000_0020,\n    to6: 0x0000_0040,\n    to7: 0x0000_0080,\n    to8: 0x0000_0100,\n    to9: 0x0000_0200,\n    to10: 0x0000_0400,\n    to11: 0x0000_0800,\n    to12: 0x0000_1000,\n    to13: 0x0000_2000,\n    to14: 0x0000_4000,\n    to15: 0x0000_8000,\n    to16: 0x0001_0000,\n    to17: 0x0002_0000,\n    to18: 0x0004_0000,\n    to19: 0x0008_0000,\n    to20: 0x0010_0000,\n    to21: 0x0020_0000,\n    to22: 0x0040_0000,\n    to23: 0x0080_0000,\n    to24: 0x0100_0000,\n    to25: 0x0200_0000,\n    to26: 0x0400_0000,\n    to27: 0x0800_0000,\n    to28: 0x1000_0000,\n    to29: 0x2000_0000,\n    to30: 0x4000_0000,\n    to31: 0x8000_0000,\n  },\n\n  // 32-bit representation of  of -1 * power(2, n) n = {-31, ..., 31}\n  // An int32 represented as a JS `number`\n  // {toMinus31, ..., to31} ie. {-31, ..., 31}\n  negPowTwo: {\n    toMinus1: 0xbf00_0000,\n    toMinus2: 0xbe80_0000,\n    toMinus3: 0xbe00_0000,\n    toMinus4: 0xbd80_0000,\n    toMinus5: 0xbd00_0000,\n    toMinus6: 0xbc80_0000,\n    toMinus7: 0xbc00_0000,\n    toMinus8: 0xbb80_0000,\n    toMinus9: 0xbb00_0000,\n    toMinus10: 0xba80_0000,\n    toMinus11: 0xba00_0000,\n    toMinus12: 0xb980_0000,\n    toMinus13: 0xb900_0000,\n    toMinus14: 0xb880_0000,\n    toMinus15: 0xb800_0000,\n    toMinus16: 0xb780_0000,\n    toMinus17: 0xb700_0000,\n    toMinus18: 0xb680_0000,\n    toMinus19: 0xb600_0000,\n    toMinus20: 0xb580_0000,\n    toMinus21: 0xb500_0000,\n    toMinus22: 0xb480_0000,\n    toMinus23: 0xb400_0000,\n    toMinus24: 0xb380_0000,\n    toMinus25: 0xb300_0000,\n    toMinus26: 0xb280_0000,\n    toMinus27: 0xb200_0000,\n    toMinus28: 0xb180_0000,\n    toMinus29: 0xb100_0000,\n    toMinus30: 0xb080_0000,\n    toMinus31: 0xb000_0000,\n\n    to0: 0xffff_ffff,\n    to1: 0xffff_fffe,\n    to2: 0xffff_fffc,\n    to3: 0xffff_fff8,\n    to4: 0xffff_fff0,\n    to5: 0xffff_ffe0,\n    to6: 0xffff_ffc0,\n    to7: 0xffff_ff80,\n    to8: 0xffff_ff00,\n    to9: 0xffff_fe00,\n    to10: 0xffff_fc00,\n    to11: 0xffff_f800,\n    to12: 0xffff_f000,\n    to13: 0xffff_e000,\n    to14: 0xffff_c000,\n    to15: 0xffff_8000,\n    to16: 0xffff_0000,\n    to17: 0xfffe_0000,\n    to18: 0xfffc_0000,\n    to19: 0xfff8_0000,\n    to20: 0xfff0_0000,\n    to21: 0xffe0_0000,\n    to22: 0xffc0_0000,\n    to23: 0xff80_0000,\n    to24: 0xff00_0000,\n    to25: 0xfe00_0000,\n    to26: 0xfc00_0000,\n    to27: 0xf800_0000,\n    to28: 0xf000_0000,\n    to29: 0xe000_0000,\n    to30: 0xc000_0000,\n    to31: 0x8000_0000,\n  },\n} as const;\n\nexport const kValue = {\n  powTwo: {\n    to0: Math.pow(2, 0),\n    to1: Math.pow(2, 1),\n    to2: Math.pow(2, 2),\n    to3: Math.pow(2, 3),\n    to4: Math.pow(2, 4),\n    to5: Math.pow(2, 5),\n    to6: Math.pow(2, 6),\n    to7: Math.pow(2, 7),\n    to8: Math.pow(2, 8),\n    to9: Math.pow(2, 9),\n    to10: Math.pow(2, 10),\n    to11: Math.pow(2, 11),\n    to12: Math.pow(2, 12),\n    to13: Math.pow(2, 13),\n    to14: Math.pow(2, 14),\n    to15: Math.pow(2, 15),\n    to16: Math.pow(2, 16),\n    to17: Math.pow(2, 17),\n    to18: Math.pow(2, 18),\n    to19: Math.pow(2, 19),\n    to20: Math.pow(2, 20),\n    to21: Math.pow(2, 21),\n    to22: Math.pow(2, 22),\n    to23: Math.pow(2, 23),\n    to24: Math.pow(2, 24),\n    to25: Math.pow(2, 25),\n    to26: Math.pow(2, 26),\n    to27: Math.pow(2, 27),\n    to28: Math.pow(2, 28),\n    to29: Math.pow(2, 29),\n    to30: Math.pow(2, 30),\n    to31: Math.pow(2, 31),\n    to32: Math.pow(2, 32),\n\n    toMinus1: Math.pow(2, -1),\n    toMinus2: Math.pow(2, -2),\n    toMinus3: Math.pow(2, -3),\n    toMinus4: Math.pow(2, -4),\n    toMinus5: Math.pow(2, -5),\n    toMinus6: Math.pow(2, -6),\n    toMinus7: Math.pow(2, -7),\n    toMinus8: Math.pow(2, -8),\n    toMinus9: Math.pow(2, -9),\n    toMinus10: Math.pow(2, -10),\n    toMinus11: Math.pow(2, -11),\n    toMinus12: Math.pow(2, -12),\n    toMinus13: Math.pow(2, -13),\n    toMinus14: Math.pow(2, -14),\n    toMinus15: Math.pow(2, -15),\n    toMinus16: Math.pow(2, -16),\n    toMinus17: Math.pow(2, -17),\n    toMinus18: Math.pow(2, -18),\n    toMinus19: Math.pow(2, -19),\n    toMinus20: Math.pow(2, -20),\n    toMinus21: Math.pow(2, -21),\n    toMinus22: Math.pow(2, -22),\n    toMinus23: Math.pow(2, -23),\n    toMinus24: Math.pow(2, -24),\n    toMinus25: Math.pow(2, -25),\n    toMinus26: Math.pow(2, -26),\n    toMinus27: Math.pow(2, -27),\n    toMinus28: Math.pow(2, -28),\n    toMinus29: Math.pow(2, -29),\n    toMinus30: Math.pow(2, -30),\n    toMinus31: Math.pow(2, -31),\n    toMinus32: Math.pow(2, -32),\n  },\n  negPowTwo: {\n    to0: -Math.pow(2, 0),\n    to1: -Math.pow(2, 1),\n    to2: -Math.pow(2, 2),\n    to3: -Math.pow(2, 3),\n    to4: -Math.pow(2, 4),\n    to5: -Math.pow(2, 5),\n    to6: -Math.pow(2, 6),\n    to7: -Math.pow(2, 7),\n    to8: -Math.pow(2, 8),\n    to9: -Math.pow(2, 9),\n    to10: -Math.pow(2, 10),\n    to11: -Math.pow(2, 11),\n    to12: -Math.pow(2, 12),\n    to13: -Math.pow(2, 13),\n    to14: -Math.pow(2, 14),\n    to15: -Math.pow(2, 15),\n    to16: -Math.pow(2, 16),\n    to17: -Math.pow(2, 17),\n    to18: -Math.pow(2, 18),\n    to19: -Math.pow(2, 19),\n    to20: -Math.pow(2, 20),\n    to21: -Math.pow(2, 21),\n    to22: -Math.pow(2, 22),\n    to23: -Math.pow(2, 23),\n    to24: -Math.pow(2, 24),\n    to25: -Math.pow(2, 25),\n    to26: -Math.pow(2, 26),\n    to27: -Math.pow(2, 27),\n    to28: -Math.pow(2, 28),\n    to29: -Math.pow(2, 29),\n    to30: -Math.pow(2, 30),\n    to31: -Math.pow(2, 31),\n    to32: -Math.pow(2, 32),\n\n    toMinus1: -Math.pow(2, -1),\n    toMinus2: -Math.pow(2, -2),\n    toMinus3: -Math.pow(2, -3),\n    toMinus4: -Math.pow(2, -4),\n    toMinus5: -Math.pow(2, -5),\n    toMinus6: -Math.pow(2, -6),\n    toMinus7: -Math.pow(2, -7),\n    toMinus8: -Math.pow(2, -8),\n    toMinus9: -Math.pow(2, -9),\n    toMinus10: -Math.pow(2, -10),\n    toMinus11: -Math.pow(2, -11),\n    toMinus12: -Math.pow(2, -12),\n    toMinus13: -Math.pow(2, -13),\n    toMinus14: -Math.pow(2, -14),\n    toMinus15: -Math.pow(2, -15),\n    toMinus16: -Math.pow(2, -16),\n    toMinus17: -Math.pow(2, -17),\n    toMinus18: -Math.pow(2, -18),\n    toMinus19: -Math.pow(2, -19),\n    toMinus20: -Math.pow(2, -20),\n    toMinus21: -Math.pow(2, -21),\n    toMinus22: -Math.pow(2, -22),\n    toMinus23: -Math.pow(2, -23),\n    toMinus24: -Math.pow(2, -24),\n    toMinus25: -Math.pow(2, -25),\n    toMinus26: -Math.pow(2, -26),\n    toMinus27: -Math.pow(2, -27),\n    toMinus28: -Math.pow(2, -28),\n    toMinus29: -Math.pow(2, -29),\n    toMinus30: -Math.pow(2, -30),\n    toMinus31: -Math.pow(2, -31),\n    toMinus32: -Math.pow(2, -32),\n  },\n} as const;\n"],"file":"builtin.js"}