{"version":3,"sources":["../../../../../src/webgpu/shader/execution/builtin/firstLeadingBit.spec.ts"],"names":["description","makeTestGroup","GPUTest","i32","i32Bits","TypeI32","u32","TypeU32","u32Bits","run","g","test","uniqueId","specURL","desc","params","u","combine","undefined","fn","t","cfg","input","expected"],"mappings":"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","sourcesContent":["export const description = `\nExecution Tests for the 'firstLeadingBit' builtin function\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../gpu_test.js';\nimport { i32, i32Bits, TypeI32, u32, TypeU32, u32Bits } from '../../../util/conversion.js';\n\nimport { Config, run } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('integer_builtin_functions,firstLeadingBit_unsigned')\n  .uniqueId('xxxxxxxxxxxxxxxx')\n  .specURL('https://www.w3.org/TR/2021/WD-WGSL-20210929/#integer-builtin-functions')\n  .desc(\n    `\nfirstLeadingBit:\nT is u32 or vecN<u32> firstLeadingBit(e: T) -> T\n\nFor scalar T, the result is:\n* T(-1) if e is zero.\n* Otherwise the position of the most significant 1 bit in e.\nComponent-wise when T is a vector.\n\nPlease read the following guidelines before contributing:\nhttps://github.com/gpuweb/cts/blob/main/docs/plan_autogen.md\n`\n  )\n  .params(u =>\n    u\n      .combine('storageClass', ['uniform', 'storage_r', 'storage_rw'] as const)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    run(t, 'firstLeadingBit', [TypeU32], TypeU32, cfg, [\n      // Zero\n      { input: u32Bits(0b00000000000000000000000000000000), expected: u32(-1) },\n\n      // One\n      { input: u32Bits(0b00000000000000000000000000000001), expected: u32(0) },\n\n      // 0's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000010), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000000100), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000001000), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000010000), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000100000), expected: u32(5) },\n      { input: u32Bits(0b00000000000000000000000001000000), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000010000000), expected: u32(7) },\n      { input: u32Bits(0b00000000000000000000000100000000), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000001000000000), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000000010000000000), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000100000000000), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000001000000000000), expected: u32(12) },\n      { input: u32Bits(0b00000000000000000010000000000000), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000100000000000000), expected: u32(14) },\n      { input: u32Bits(0b00000000000000001000000000000000), expected: u32(15) },\n      { input: u32Bits(0b00000000000000010000000000000000), expected: u32(16) },\n      { input: u32Bits(0b00000000000000100000000000000000), expected: u32(17) },\n      { input: u32Bits(0b00000000000001000000000000000000), expected: u32(18) },\n      { input: u32Bits(0b00000000000010000000000000000000), expected: u32(19) },\n      { input: u32Bits(0b00000000000100000000000000000000), expected: u32(20) },\n      { input: u32Bits(0b00000000001000000000000000000000), expected: u32(21) },\n      { input: u32Bits(0b00000000010000000000000000000000), expected: u32(22) },\n      { input: u32Bits(0b00000000100000000000000000000000), expected: u32(23) },\n      { input: u32Bits(0b00000001000000000000000000000000), expected: u32(24) },\n      { input: u32Bits(0b00000010000000000000000000000000), expected: u32(25) },\n      { input: u32Bits(0b00000100000000000000000000000000), expected: u32(26) },\n      { input: u32Bits(0b00001000000000000000000000000000), expected: u32(27) },\n      { input: u32Bits(0b00010000000000000000000000000000), expected: u32(28) },\n      { input: u32Bits(0b00100000000000000000000000000000), expected: u32(29) },\n      { input: u32Bits(0b01000000000000000000000000000000), expected: u32(30) },\n      { input: u32Bits(0b10000000000000000000000000000000), expected: u32(31) },\n\n      // 1's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000011), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000000111), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000001111), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000011111), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000111111), expected: u32(5) },\n      { input: u32Bits(0b00000000000000000000000001111111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(7) },\n      { input: u32Bits(0b00000000000000000000000111111111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000000011111111111), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000111111111111), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000001111111111111), expected: u32(12) },\n      { input: u32Bits(0b00000000000000000011111111111111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000111111111111111), expected: u32(14) },\n      { input: u32Bits(0b00000000000000001111111111111111), expected: u32(15) },\n      { input: u32Bits(0b00000000000000011111111111111111), expected: u32(16) },\n      { input: u32Bits(0b00000000000000111111111111111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000001111111111111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(19) },\n      { input: u32Bits(0b00000000000111111111111111111111), expected: u32(20) },\n      { input: u32Bits(0b00000000001111111111111111111111), expected: u32(21) },\n      { input: u32Bits(0b00000000011111111111111111111111), expected: u32(22) },\n      { input: u32Bits(0b00000000111111111111111111111111), expected: u32(23) },\n      { input: u32Bits(0b00000001111111111111111111111111), expected: u32(24) },\n      { input: u32Bits(0b00000011111111111111111111111111), expected: u32(25) },\n      { input: u32Bits(0b00000111111111111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00001111111111111111111111111111), expected: u32(27) },\n      { input: u32Bits(0b00011111111111111111111111111111), expected: u32(28) },\n      { input: u32Bits(0b00111111111111111111111111111111), expected: u32(29) },\n      { input: u32Bits(0b01111111111111111111111111111111), expected: u32(30) },\n      { input: u32Bits(0b11111111111111111111111111111111), expected: u32(31) },\n\n      // random after leading 1\n      { input: u32Bits(0b00000000000000000000000000000110), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000001101), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000011101), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000111001), expected: u32(5) },\n      { input: u32Bits(0b00000000000000000000000001101111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(7) },\n      { input: u32Bits(0b00000000000000000000000111101111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000000011111110001), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000111011011101), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000001101101111111), expected: u32(12) },\n      { input: u32Bits(0b00000000000000000011111111011111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000101111001110101), expected: u32(14) },\n      { input: u32Bits(0b00000000000000001101111011110111), expected: u32(15) },\n      { input: u32Bits(0b00000000000000011111111111110011), expected: u32(16) },\n      { input: u32Bits(0b00000000000000111111111110111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000001111111011111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(19) },\n      { input: u32Bits(0b00000000000111110101011110111111), expected: u32(20) },\n      { input: u32Bits(0b00000000001111101111111111110111), expected: u32(21) },\n      { input: u32Bits(0b00000000011111111111010000101111), expected: u32(22) },\n      { input: u32Bits(0b00000000111111111111001111111011), expected: u32(23) },\n      { input: u32Bits(0b00000001111111011111101111111111), expected: u32(24) },\n      { input: u32Bits(0b00000011101011111011110111111011), expected: u32(25) },\n      { input: u32Bits(0b00000111111110111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00001111000000011011011110111111), expected: u32(27) },\n      { input: u32Bits(0b00011110101111011111111111111111), expected: u32(28) },\n      { input: u32Bits(0b00110110111111100111111110111101), expected: u32(29) },\n      { input: u32Bits(0b01010111111101111111011111011111), expected: u32(30) },\n      { input: u32Bits(0b11100010011110101101101110101111), expected: u32(31) },\n    ]);\n  });\n\ng.test('integer_builtin_functions,firstLeadingBit_signed')\n  .uniqueId('xxxxxxxxxxxxxxxx')\n  .specURL('https://www.w3.org/TR/2021/WD-WGSL-20210929/#integer-builtin-functions')\n  .desc(\n    `\nfirstLeadingBit:\nT is i32 or vecN<i32> firstLeadingBit(e: T) -> T\n\nFor scalar T, the result is:\n* -1 if e is 0 or -1.\n* Otherwise the position of the most significant bit in e that is different from e's sign bit.\n\nNote: Since signed integers use twos-complement representation, the sign bit appears in the most significant bit position.\n\nComponent-wise when T is a vector.\n\nPlease read the following guidelines before contributing:\nhttps://github.com/gpuweb/cts/blob/main/docs/plan_autogen.md\n`\n  )\n  .params(u =>\n    u\n      .combine('storageClass', ['uniform', 'storage_r', 'storage_rw'] as const)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    run(t, 'firstLeadingBit', [TypeI32], TypeI32, cfg, [\n      // Zero\n      { input: i32Bits(0b00000000000000000000000000000000), expected: i32(-1) },\n\n      // One\n      { input: i32Bits(0b00000000000000000000000000000001), expected: i32(0) },\n\n      // Positive: 0's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000010), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000000100), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000001000), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000010000), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000100000), expected: i32(5) },\n      { input: i32Bits(0b00000000000000000000000001000000), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000010000000), expected: i32(7) },\n      { input: i32Bits(0b00000000000000000000000100000000), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000001000000000), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000000010000000000), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000100000000000), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000001000000000000), expected: i32(12) },\n      { input: i32Bits(0b00000000000000000010000000000000), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000100000000000000), expected: i32(14) },\n      { input: i32Bits(0b00000000000000001000000000000000), expected: i32(15) },\n      { input: i32Bits(0b00000000000000010000000000000000), expected: i32(16) },\n      { input: i32Bits(0b00000000000000100000000000000000), expected: i32(17) },\n      { input: i32Bits(0b00000000000001000000000000000000), expected: i32(18) },\n      { input: i32Bits(0b00000000000010000000000000000000), expected: i32(19) },\n      { input: i32Bits(0b00000000000100000000000000000000), expected: i32(20) },\n      { input: i32Bits(0b00000000001000000000000000000000), expected: i32(21) },\n      { input: i32Bits(0b00000000010000000000000000000000), expected: i32(22) },\n      { input: i32Bits(0b00000000100000000000000000000000), expected: i32(23) },\n      { input: i32Bits(0b00000001000000000000000000000000), expected: i32(24) },\n      { input: i32Bits(0b00000010000000000000000000000000), expected: i32(25) },\n      { input: i32Bits(0b00000100000000000000000000000000), expected: i32(26) },\n      { input: i32Bits(0b00001000000000000000000000000000), expected: i32(27) },\n      { input: i32Bits(0b00010000000000000000000000000000), expected: i32(28) },\n      { input: i32Bits(0b00100000000000000000000000000000), expected: i32(29) },\n      { input: i32Bits(0b01000000000000000000000000000000), expected: i32(30) },\n\n      // Negative: 0's after leading 0\n      { input: i32Bits(0b11111111111111111111111111111110), expected: i32(0) },\n      { input: i32Bits(0b11111111111111111111111111111100), expected: i32(1) },\n      { input: i32Bits(0b11111111111111111111111111111000), expected: i32(2) },\n      { input: i32Bits(0b11111111111111111111111111110000), expected: i32(3) },\n      { input: i32Bits(0b11111111111111111111111111100000), expected: i32(4) },\n      { input: i32Bits(0b11111111111111111111111111000000), expected: i32(5) },\n      { input: i32Bits(0b11111111111111111111111110000000), expected: i32(6) },\n      { input: i32Bits(0b11111111111111111111111100000000), expected: i32(7) },\n      { input: i32Bits(0b11111111111111111111111000000000), expected: i32(8) },\n      { input: i32Bits(0b11111111111111111111110000000000), expected: i32(9) },\n      { input: i32Bits(0b11111111111111111111100000000000), expected: i32(10) },\n      { input: i32Bits(0b11111111111111111111000000000000), expected: i32(11) },\n      { input: i32Bits(0b11111111111111111110000000000000), expected: i32(12) },\n      { input: i32Bits(0b11111111111111111100000000000000), expected: i32(13) },\n      { input: i32Bits(0b11111111111111111000000000000000), expected: i32(14) },\n      { input: i32Bits(0b11111111111111110000000000000000), expected: i32(15) },\n      { input: i32Bits(0b11111111111111100000000000000000), expected: i32(16) },\n      { input: i32Bits(0b11111111111111000000000000000000), expected: i32(17) },\n      { input: i32Bits(0b11111111111110000000000000000000), expected: i32(18) },\n      { input: i32Bits(0b11111111111100000000000000000000), expected: i32(19) },\n      { input: i32Bits(0b11111111111000000000000000000000), expected: i32(20) },\n      { input: i32Bits(0b11111111110000000000000000000000), expected: i32(21) },\n      { input: i32Bits(0b11111111100000000000000000000000), expected: i32(22) },\n      { input: i32Bits(0b11111111000000000000000000000000), expected: i32(23) },\n      { input: i32Bits(0b11111110000000000000000000000000), expected: i32(24) },\n      { input: i32Bits(0b11111100000000000000000000000000), expected: i32(25) },\n      { input: i32Bits(0b11111000000000000000000000000000), expected: i32(26) },\n      { input: i32Bits(0b11110000000000000000000000000000), expected: i32(27) },\n      { input: i32Bits(0b11100000000000000000000000000000), expected: i32(28) },\n      { input: i32Bits(0b11000000000000000000000000000000), expected: i32(29) },\n      { input: i32Bits(0b10000000000000000000000000000000), expected: i32(30) },\n\n      // Positive: 1's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000011), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000000111), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000001111), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000011111), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000111111), expected: i32(5) },\n      { input: i32Bits(0b00000000000000000000000001111111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(7) },\n      { input: i32Bits(0b00000000000000000000000111111111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000000011111111111), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000111111111111), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000001111111111111), expected: i32(12) },\n      { input: i32Bits(0b00000000000000000011111111111111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000111111111111111), expected: i32(14) },\n      { input: i32Bits(0b00000000000000001111111111111111), expected: i32(15) },\n      { input: i32Bits(0b00000000000000011111111111111111), expected: i32(16) },\n      { input: i32Bits(0b00000000000000111111111111111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000001111111111111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(19) },\n      { input: i32Bits(0b00000000000111111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b00000000001111111111111111111111), expected: i32(21) },\n      { input: i32Bits(0b00000000011111111111111111111111), expected: i32(22) },\n      { input: i32Bits(0b00000000111111111111111111111111), expected: i32(23) },\n      { input: i32Bits(0b00000001111111111111111111111111), expected: i32(24) },\n      { input: i32Bits(0b00000011111111111111111111111111), expected: i32(25) },\n      { input: i32Bits(0b00000111111111111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00001111111111111111111111111111), expected: i32(27) },\n      { input: i32Bits(0b00011111111111111111111111111111), expected: i32(28) },\n      { input: i32Bits(0b00111111111111111111111111111111), expected: i32(29) },\n      { input: i32Bits(0b01111111111111111111111111111111), expected: i32(30) },\n\n      // Negative: 1's after leading 0\n      { input: i32Bits(0b11111111111111111111111111111101), expected: i32(1) },\n      { input: i32Bits(0b11111111111111111111111111111011), expected: i32(2) },\n      { input: i32Bits(0b11111111111111111111111111110111), expected: i32(3) },\n      { input: i32Bits(0b11111111111111111111111111101111), expected: i32(4) },\n      { input: i32Bits(0b11111111111111111111111111011111), expected: i32(5) },\n      { input: i32Bits(0b11111111111111111111111110111111), expected: i32(6) },\n      { input: i32Bits(0b11111111111111111111111101111111), expected: i32(7) },\n      { input: i32Bits(0b11111111111111111111111011111111), expected: i32(8) },\n      { input: i32Bits(0b11111111111111111111110111111111), expected: i32(9) },\n      { input: i32Bits(0b11111111111111111111101111111111), expected: i32(10) },\n      { input: i32Bits(0b11111111111111111111011111111111), expected: i32(11) },\n      { input: i32Bits(0b11111111111111111110111111111111), expected: i32(12) },\n      { input: i32Bits(0b11111111111111111101111111111111), expected: i32(13) },\n      { input: i32Bits(0b11111111111111111011111111111111), expected: i32(14) },\n      { input: i32Bits(0b11111111111111110111111111111111), expected: i32(15) },\n      { input: i32Bits(0b11111111111111101111111111111111), expected: i32(16) },\n      { input: i32Bits(0b11111111111111011111111111111111), expected: i32(17) },\n      { input: i32Bits(0b11111111111110111111111111111111), expected: i32(18) },\n      { input: i32Bits(0b11111111111101111111111111111111), expected: i32(19) },\n      { input: i32Bits(0b11111111111011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b11111111110111111111111111111111), expected: i32(21) },\n      { input: i32Bits(0b11111111101111111111111111111111), expected: i32(22) },\n      { input: i32Bits(0b11111111011111111111111111111111), expected: i32(23) },\n      { input: i32Bits(0b11111110111111111111111111111111), expected: i32(24) },\n      { input: i32Bits(0b11111101111111111111111111111111), expected: i32(25) },\n      { input: i32Bits(0b11111011111111111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b11110111111111111111111111111111), expected: i32(27) },\n      { input: i32Bits(0b11101111111111111111111111111111), expected: i32(28) },\n      { input: i32Bits(0b11011111111111111111111111111111), expected: i32(29) },\n      { input: i32Bits(0b10111111111111111111111111111111), expected: i32(30) },\n\n      // Positive: random after leading 1\n      { input: i32Bits(0b00000000000000000000000000000110), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000001101), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000011101), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000111001), expected: i32(5) },\n      { input: i32Bits(0b00000000000000000000000001101111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(7) },\n      { input: i32Bits(0b00000000000000000000000111101111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000000011111110001), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000111011011101), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000001101101111111), expected: i32(12) },\n      { input: i32Bits(0b00000000000000000011111111011111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000101111001110101), expected: i32(14) },\n      { input: i32Bits(0b00000000000000001101111011110111), expected: i32(15) },\n      { input: i32Bits(0b00000000000000011111111111110011), expected: i32(16) },\n      { input: i32Bits(0b00000000000000111111111110111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000001111111011111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(19) },\n      { input: i32Bits(0b00000000000111110101011110111111), expected: i32(20) },\n      { input: i32Bits(0b00000000001111101111111111110111), expected: i32(21) },\n      { input: i32Bits(0b00000000011111111111010000101111), expected: i32(22) },\n      { input: i32Bits(0b00000000111111111111001111111011), expected: i32(23) },\n      { input: i32Bits(0b00000001111111011111101111111111), expected: i32(24) },\n      { input: i32Bits(0b00000011101011111011110111111011), expected: i32(25) },\n      { input: i32Bits(0b00000111111110111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00001111000000011011011110111111), expected: i32(27) },\n      { input: i32Bits(0b00011110101111011111111111111111), expected: i32(28) },\n      { input: i32Bits(0b00110110111111100111111110111101), expected: i32(29) },\n      { input: i32Bits(0b01010111111101111111011111011111), expected: i32(30) },\n\n      // Negative: random after leading 0\n      { input: i32Bits(0b11111111111111111111111111111010), expected: i32(2) },\n      { input: i32Bits(0b11111111111111111111111111110110), expected: i32(3) },\n      { input: i32Bits(0b11111111111111111111111111101101), expected: i32(4) },\n      { input: i32Bits(0b11111111111111111111111111011101), expected: i32(5) },\n      { input: i32Bits(0b11111111111111111111111110111001), expected: i32(6) },\n      { input: i32Bits(0b11111111111111111111111101101111), expected: i32(7) },\n      { input: i32Bits(0b11111111111111111111111011111111), expected: i32(8) },\n      { input: i32Bits(0b11111111111111111111110111101111), expected: i32(9) },\n      { input: i32Bits(0b11111111111111111111101111111111), expected: i32(10) },\n      { input: i32Bits(0b11111111111111111111011111110001), expected: i32(11) },\n      { input: i32Bits(0b11111111111111111110111011011101), expected: i32(12) },\n      { input: i32Bits(0b11111111111111111101101101111111), expected: i32(13) },\n      { input: i32Bits(0b11111111111111111011111111011111), expected: i32(14) },\n      { input: i32Bits(0b11111111111111110101111001110101), expected: i32(15) },\n      { input: i32Bits(0b11111111111111101101111011110111), expected: i32(16) },\n      { input: i32Bits(0b11111111111111011111111111110011), expected: i32(17) },\n      { input: i32Bits(0b11111111111110111111111110111111), expected: i32(18) },\n      { input: i32Bits(0b11111111111101111111011111111111), expected: i32(19) },\n      { input: i32Bits(0b11111111111011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b11111111110111110101011110111111), expected: i32(21) },\n      { input: i32Bits(0b11111111101111101111111111110111), expected: i32(22) },\n      { input: i32Bits(0b11111111011111111111010000101111), expected: i32(23) },\n      { input: i32Bits(0b11111110111111111111001111111011), expected: i32(24) },\n      { input: i32Bits(0b11111101111111011111101111111111), expected: i32(25) },\n      { input: i32Bits(0b11111011101011111011110111111011), expected: i32(26) },\n      { input: i32Bits(0b11110111111110111111111111111111), expected: i32(27) },\n      { input: i32Bits(0b11101111000000011011011110111111), expected: i32(28) },\n      { input: i32Bits(0b11011110101111011111111111111111), expected: i32(29) },\n      { input: i32Bits(0b10110110111111100111111110111101), expected: i32(30) },\n    ]);\n  });\n"],"file":"firstLeadingBit.spec.js"}