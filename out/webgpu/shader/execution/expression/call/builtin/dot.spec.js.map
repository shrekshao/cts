{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/dot.spec.ts"],"names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","dotInterval","kVectorTestValues","allInputSources","makeVectorPairToF32IntervalCase","run","builtin","g","test","specURL","desc","params","u","combine","unimplemented","fn","t","makeCase","x","y","cases","flatMap","i","map","j"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'dot' builtin function\n\nT is AbstractInt, AbstractFloat, i32, u32, f32, or f16\n@const fn dot(e1: vecN<T>,e2: vecN<T>) -> T\nReturns the dot product of e1 and e2.\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { dotInterval } from '../../../../../util/f32_interval.js';\nimport { kVectorTestValues } from '../../../../../util/math.js';\nimport { allInputSources, Case, makeVectorPairToF32IntervalCase, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('abstract_int')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`abstract int tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`abstract float test`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const makeCase = (x: number[], y: number[]): Case => {\n      return makeVectorPairToF32IntervalCase(x, y, dotInterval);\n    };\n\n    const cases: Case[] = kVectorTestValues[2].flatMap(i => {\n      return kVectorTestValues[2].map(j => {\n        return makeCase(i, j);\n      });\n    });\n\n    await run(\n      t,\n      builtin('dot'),\n      [TypeVec(2, TypeF32), TypeVec(2, TypeF32)],\n      TypeF32,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const makeCase = (x: number[], y: number[]): Case => {\n      return makeVectorPairToF32IntervalCase(x, y, dotInterval);\n    };\n\n    const cases: Case[] = kVectorTestValues[3].flatMap(i => {\n      return kVectorTestValues[3].map(j => {\n        return makeCase(i, j);\n      });\n    });\n\n    await run(\n      t,\n      builtin('dot'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeF32,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`f32 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const makeCase = (x: number[], y: number[]): Case => {\n      return makeVectorPairToF32IntervalCase(x, y, dotInterval);\n    };\n\n    const cases: Case[] = kVectorTestValues[4].flatMap(i => {\n      return kVectorTestValues[4].map(j => {\n        return makeCase(i, j);\n      });\n    });\n\n    await run(\n      t,\n      builtin('dot'),\n      [TypeVec(4, TypeF32), TypeVec(4, TypeF32)],\n      TypeF32,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#vector-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .unimplemented();\n"],"file":"dot.spec.js"}