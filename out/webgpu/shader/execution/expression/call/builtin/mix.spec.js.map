{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/mix.spec.ts"],"names":["description","makeTestGroup","GPUTest","TypeF32","mixIntervals","sparseF32Range","allInputSources","makeTernaryToF32IntervalCase","run","builtin","g","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","makeCase","x","y","z","values","cases","forEach","push"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'mix' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn mix(e1: T, e2: T, e3: T) -> T\nReturns the linear blend of e1 and e2 (e.g. e1*(1-e3)+e2*e3). Component-wise when T is a vector.\n\nT is AbstractFloat, f32, or f16\nT2 is vecN<T>\n@const fn mix(e1: T2, e2: T2, e3: T) -> T2\nReturns the component-wise linear blend of e1 and e2, using scalar blending factor e3 for each component.\nSame as mix(e1,e2,T2(e3)).\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32 } from '../../../../../util/conversion.js';\nimport { mixIntervals } from '../../../../../util/f32_interval.js';\nimport { sparseF32Range } from '../../../../../util/math.js';\nimport { allInputSources, Case, makeTernaryToF32IntervalCase, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('matching_abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests with matching params`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('matching_f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 test with matching third param`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const makeCase = (x: number, y: number, z: number): Case => {\n      return makeTernaryToF32IntervalCase(x, y, z, ...mixIntervals);\n    };\n\n    const values = sparseF32Range();\n    const cases: Array<Case> = [];\n    values.forEach(x => {\n      values.forEach(y => {\n        values.forEach(z => {\n          cases.push(makeCase(x, y, z));\n        });\n      });\n    });\n    await run(t, builtin('mix'), [TypeF32, TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('matching_f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests with matching third param`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('nonmatching_abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests with vector params and scalar third param`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('nonmatching_f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests with vector params and scalar third param`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('monmatching_f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests with vector params and scalar third param`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n"],"file":"mix.spec.js"}