{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/countOneBits.spec.ts"],"names":["description","makeTestGroup","GPUTest","TypeU32","u32Bits","u32","TypeI32","i32Bits","i32","run","builtin","g","test","specURL","desc","params","u","combine","undefined","fn","t","cfg","input","expected"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'countOneBits' builtin function\n\nS is i32 or u32\nT is S or vecN<S>\n@const fn countOneBits(e: T ) -> T\nThe number of 1 bits in the representation of e.\nAlso known as \"population count\".\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeU32, u32Bits, u32, TypeI32, i32Bits, i32 } from '../../../../../util/conversion.js';\nimport { Config, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u =>\n    u\n      .combine('storageClass', ['uniform', 'storage_r', 'storage_rw'] as const)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    run(t, builtin('countOneBits'), [TypeU32], TypeU32, cfg, [\n      // Zero\n      { input: u32Bits(0b00000000000000000000000000000000), expected: u32(0) },\n\n      // One\n      { input: u32Bits(0b00000000000000000000000000000001), expected: u32(1) },\n\n      // 0's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000010), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000000100), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000001000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000010000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000100000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000001000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000010000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000100000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000001000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000010000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000100000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000001000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000010000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000100000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000001000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000010000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000100000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000001000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000010000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000100000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000001000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000010000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000100000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000001000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000010000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000100000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00001000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00010000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00100000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b01000000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b10000000000000000000000000000000), expected: u32(1) },\n\n      // 1's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000011), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000000111), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000001111), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000011111), expected: u32(5) },\n      { input: u32Bits(0b00000000000000000000000000111111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000001111111), expected: u32(7) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000000111111111), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000011111111111), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000000111111111111), expected: u32(12) },\n      { input: u32Bits(0b00000000000000000001111111111111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000011111111111111), expected: u32(14) },\n      { input: u32Bits(0b00000000000000000111111111111111), expected: u32(15) },\n      { input: u32Bits(0b00000000000000001111111111111111), expected: u32(16) },\n      { input: u32Bits(0b00000000000000011111111111111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000000111111111111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000001111111111111111111), expected: u32(19) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(20) },\n      { input: u32Bits(0b00000000000111111111111111111111), expected: u32(21) },\n      { input: u32Bits(0b00000000001111111111111111111111), expected: u32(22) },\n      { input: u32Bits(0b00000000011111111111111111111111), expected: u32(23) },\n      { input: u32Bits(0b00000000111111111111111111111111), expected: u32(24) },\n      { input: u32Bits(0b00000001111111111111111111111111), expected: u32(25) },\n      { input: u32Bits(0b00000011111111111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00000111111111111111111111111111), expected: u32(27) },\n      { input: u32Bits(0b00001111111111111111111111111111), expected: u32(28) },\n      { input: u32Bits(0b00011111111111111111111111111111), expected: u32(29) },\n      { input: u32Bits(0b00111111111111111111111111111111), expected: u32(30) },\n      { input: u32Bits(0b01111111111111111111111111111111), expected: u32(31) },\n      { input: u32Bits(0b11111111111111111111111111111111), expected: u32(32) },\n\n      // random after leading 1\n      { input: u32Bits(0b00000000000000000000000000000110), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000001101), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000011101), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000111001), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000001101111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000000111101111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000011111110001), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000111011011101), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000001101101111111), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000011111111011111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000101111001110101), expected: u32(10) },\n      { input: u32Bits(0b00000000000000001101111011110111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000011111111111110011), expected: u32(15) },\n      { input: u32Bits(0b00000000000000111111111110111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000001111111011111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(20) },\n      { input: u32Bits(0b00000000000111110101011110111111), expected: u32(17) },\n      { input: u32Bits(0b00000000001111101111111111110111), expected: u32(20) },\n      { input: u32Bits(0b00000000011111111111010000101111), expected: u32(17) },\n      { input: u32Bits(0b00000000111111111111001111111011), expected: u32(21) },\n      { input: u32Bits(0b00000001111111011111101111111111), expected: u32(23) },\n      { input: u32Bits(0b00000011101011111011110111111011), expected: u32(21) },\n      { input: u32Bits(0b00000111111110111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00001111000000011011011110111111), expected: u32(18) },\n      { input: u32Bits(0b00011110101111011111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00110110111111100111111110111101), expected: u32(24) },\n      { input: u32Bits(0b01010111111101111111011111011111), expected: u32(26) },\n      { input: u32Bits(0b11100010011110101101101110101111), expected: u32(21) },\n    ]);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u =>\n    u\n      .combine('storageClass', ['uniform', 'storage_r', 'storage_rw'] as const)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    run(t, builtin('countOneBits'), [TypeI32], TypeI32, cfg, [\n      // Zero\n      { input: i32Bits(0b00000000000000000000000000000000), expected: i32(0) },\n\n      // One\n      { input: i32Bits(0b00000000000000000000000000000001), expected: i32(1) },\n\n      // 0's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000010), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000000100), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000001000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000010000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000100000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000001000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000010000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000100000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000001000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000010000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000100000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000001000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000010000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000100000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000001000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000010000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000100000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000001000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000010000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000100000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000001000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000010000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000100000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000001000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000010000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000100000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00001000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00010000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00100000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b01000000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b10000000000000000000000000000000), expected: i32(1) },\n\n      // 1's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000011), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000000111), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000001111), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000011111), expected: i32(5) },\n      { input: i32Bits(0b00000000000000000000000000111111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000001111111), expected: i32(7) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000000111111111), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000011111111111), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000000111111111111), expected: i32(12) },\n      { input: i32Bits(0b00000000000000000001111111111111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000011111111111111), expected: i32(14) },\n      { input: i32Bits(0b00000000000000000111111111111111), expected: i32(15) },\n      { input: i32Bits(0b00000000000000001111111111111111), expected: i32(16) },\n      { input: i32Bits(0b00000000000000011111111111111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000000111111111111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000001111111111111111111), expected: i32(19) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b00000000000111111111111111111111), expected: i32(21) },\n      { input: i32Bits(0b00000000001111111111111111111111), expected: i32(22) },\n      { input: i32Bits(0b00000000011111111111111111111111), expected: i32(23) },\n      { input: i32Bits(0b00000000111111111111111111111111), expected: i32(24) },\n      { input: i32Bits(0b00000001111111111111111111111111), expected: i32(25) },\n      { input: i32Bits(0b00000011111111111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00000111111111111111111111111111), expected: i32(27) },\n      { input: i32Bits(0b00001111111111111111111111111111), expected: i32(28) },\n      { input: i32Bits(0b00011111111111111111111111111111), expected: i32(29) },\n      { input: i32Bits(0b00111111111111111111111111111111), expected: i32(30) },\n      { input: i32Bits(0b01111111111111111111111111111111), expected: i32(31) },\n      { input: i32Bits(0b11111111111111111111111111111111), expected: i32(32) },\n\n      // random after leading 1\n      { input: i32Bits(0b00000000000000000000000000000110), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000001101), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000011101), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000111001), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000001101111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000000111101111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000011111110001), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000111011011101), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000001101101111111), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000011111111011111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000101111001110101), expected: i32(10) },\n      { input: i32Bits(0b00000000000000001101111011110111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000011111111111110011), expected: i32(15) },\n      { input: i32Bits(0b00000000000000111111111110111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000001111111011111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b00000000000111110101011110111111), expected: i32(17) },\n      { input: i32Bits(0b00000000001111101111111111110111), expected: i32(20) },\n      { input: i32Bits(0b00000000011111111111010000101111), expected: i32(17) },\n      { input: i32Bits(0b00000000111111111111001111111011), expected: i32(21) },\n      { input: i32Bits(0b00000001111111011111101111111111), expected: i32(23) },\n      { input: i32Bits(0b00000011101011111011110111111011), expected: i32(21) },\n      { input: i32Bits(0b00000111111110111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00001111000000011011011110111111), expected: i32(18) },\n      { input: i32Bits(0b00011110101111011111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00110110111111100111111110111101), expected: i32(24) },\n      { input: i32Bits(0b01010111111101111111011111011111), expected: i32(26) },\n      { input: i32Bits(0b11100010011110101101101110101111), expected: i32(21) },\n    ]);\n  });\n"],"file":"countOneBits.spec.js"}