{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/countOneBits.spec.ts"],"names":["description","makeTestGroup","GPUTest","TypeU32","u32Bits","u32","TypeI32","i32Bits","i32","run","builtin","g","test","uniqueId","specURL","desc","params","u","combine","undefined","fn","t","cfg","input","expected"],"mappings":"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","sourcesContent":["export const description = `\nExecution Tests for the 'countOneBits' builtin function\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeU32, u32Bits, u32, TypeI32, i32Bits, i32 } from '../../../../../util/conversion.js';\nimport { Config, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('u32')\n  .uniqueId('xxxxxxxxxxxxxxxx')\n  .specURL('https://www.w3.org/TR/2021/WD-WGSL-20210929/#integer-builtin-functions')\n  .desc(\n    `\ncount 1 bits:\nT is i32, u32, vecN<i32>, or vecN<u32> countOneBits(e: T ) -> T The number of 1 bits in the representation of e. Also known as \"population count\". Component-wise when T is a vector. (SPIR-V OpBitCount)\n`\n  )\n  .params(u =>\n    u\n      .combine('storageClass', ['uniform', 'storage_r', 'storage_rw'] as const)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    run(t, builtin('countOneBits'), [TypeU32], TypeU32, cfg, [\n      // Zero\n      { input: u32Bits(0b00000000000000000000000000000000), expected: u32(0) },\n\n      // One\n      { input: u32Bits(0b00000000000000000000000000000001), expected: u32(1) },\n\n      // 0's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000010), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000000100), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000001000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000010000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000100000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000001000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000010000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000100000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000001000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000010000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000100000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000001000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000010000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000100000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000001000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000010000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000100000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000001000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000010000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000100000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000001000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000010000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000100000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000001000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000010000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000100000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00001000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00010000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00100000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b01000000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b10000000000000000000000000000000), expected: u32(1) },\n\n      // 1's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000011), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000000111), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000001111), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000011111), expected: u32(5) },\n      { input: u32Bits(0b00000000000000000000000000111111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000001111111), expected: u32(7) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000000111111111), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000011111111111), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000000111111111111), expected: u32(12) },\n      { input: u32Bits(0b00000000000000000001111111111111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000011111111111111), expected: u32(14) },\n      { input: u32Bits(0b00000000000000000111111111111111), expected: u32(15) },\n      { input: u32Bits(0b00000000000000001111111111111111), expected: u32(16) },\n      { input: u32Bits(0b00000000000000011111111111111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000000111111111111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000001111111111111111111), expected: u32(19) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(20) },\n      { input: u32Bits(0b00000000000111111111111111111111), expected: u32(21) },\n      { input: u32Bits(0b00000000001111111111111111111111), expected: u32(22) },\n      { input: u32Bits(0b00000000011111111111111111111111), expected: u32(23) },\n      { input: u32Bits(0b00000000111111111111111111111111), expected: u32(24) },\n      { input: u32Bits(0b00000001111111111111111111111111), expected: u32(25) },\n      { input: u32Bits(0b00000011111111111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00000111111111111111111111111111), expected: u32(27) },\n      { input: u32Bits(0b00001111111111111111111111111111), expected: u32(28) },\n      { input: u32Bits(0b00011111111111111111111111111111), expected: u32(29) },\n      { input: u32Bits(0b00111111111111111111111111111111), expected: u32(30) },\n      { input: u32Bits(0b01111111111111111111111111111111), expected: u32(31) },\n      { input: u32Bits(0b11111111111111111111111111111111), expected: u32(32) },\n\n      // random after leading 1\n      { input: u32Bits(0b00000000000000000000000000000110), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000001101), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000011101), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000111001), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000001101111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000000111101111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000011111110001), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000111011011101), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000001101101111111), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000011111111011111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000101111001110101), expected: u32(10) },\n      { input: u32Bits(0b00000000000000001101111011110111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000011111111111110011), expected: u32(15) },\n      { input: u32Bits(0b00000000000000111111111110111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000001111111011111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(20) },\n      { input: u32Bits(0b00000000000111110101011110111111), expected: u32(17) },\n      { input: u32Bits(0b00000000001111101111111111110111), expected: u32(20) },\n      { input: u32Bits(0b00000000011111111111010000101111), expected: u32(17) },\n      { input: u32Bits(0b00000000111111111111001111111011), expected: u32(21) },\n      { input: u32Bits(0b00000001111111011111101111111111), expected: u32(23) },\n      { input: u32Bits(0b00000011101011111011110111111011), expected: u32(21) },\n      { input: u32Bits(0b00000111111110111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00001111000000011011011110111111), expected: u32(18) },\n      { input: u32Bits(0b00011110101111011111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00110110111111100111111110111101), expected: u32(24) },\n      { input: u32Bits(0b01010111111101111111011111011111), expected: u32(26) },\n      { input: u32Bits(0b11100010011110101101101110101111), expected: u32(21) },\n    ]);\n  });\n\ng.test('i32')\n  .uniqueId('xxxxxxxxxxxxxxxx')\n  .specURL('https://www.w3.org/TR/2021/WD-WGSL-20210929/#integer-builtin-functions')\n  .desc(\n    `\ncount 1 bits:\nT is i32, u32, vecN<i32>, or vecN<u32> countOneBits(e: T ) -> T The number of 1 bits in the representation of e. Also known as \"population count\". Component-wise when T is a vector. (SPIR-V OpBitCount)\n`\n  )\n  .params(u =>\n    u\n      .combine('storageClass', ['uniform', 'storage_r', 'storage_rw'] as const)\n      .combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    run(t, builtin('countOneBits'), [TypeI32], TypeI32, cfg, [\n      // Zero\n      { input: i32Bits(0b00000000000000000000000000000000), expected: i32(0) },\n\n      // One\n      { input: i32Bits(0b00000000000000000000000000000001), expected: i32(1) },\n\n      // 0's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000010), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000000100), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000001000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000010000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000100000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000001000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000010000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000100000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000001000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000010000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000100000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000001000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000010000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000100000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000001000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000010000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000100000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000001000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000010000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000100000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000001000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000010000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000100000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000001000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000010000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000100000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00001000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00010000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00100000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b01000000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b10000000000000000000000000000000), expected: i32(1) },\n\n      // 1's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000011), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000000111), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000001111), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000011111), expected: i32(5) },\n      { input: i32Bits(0b00000000000000000000000000111111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000001111111), expected: i32(7) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000000111111111), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000011111111111), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000000111111111111), expected: i32(12) },\n      { input: i32Bits(0b00000000000000000001111111111111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000011111111111111), expected: i32(14) },\n      { input: i32Bits(0b00000000000000000111111111111111), expected: i32(15) },\n      { input: i32Bits(0b00000000000000001111111111111111), expected: i32(16) },\n      { input: i32Bits(0b00000000000000011111111111111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000000111111111111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000001111111111111111111), expected: i32(19) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b00000000000111111111111111111111), expected: i32(21) },\n      { input: i32Bits(0b00000000001111111111111111111111), expected: i32(22) },\n      { input: i32Bits(0b00000000011111111111111111111111), expected: i32(23) },\n      { input: i32Bits(0b00000000111111111111111111111111), expected: i32(24) },\n      { input: i32Bits(0b00000001111111111111111111111111), expected: i32(25) },\n      { input: i32Bits(0b00000011111111111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00000111111111111111111111111111), expected: i32(27) },\n      { input: i32Bits(0b00001111111111111111111111111111), expected: i32(28) },\n      { input: i32Bits(0b00011111111111111111111111111111), expected: i32(29) },\n      { input: i32Bits(0b00111111111111111111111111111111), expected: i32(30) },\n      { input: i32Bits(0b01111111111111111111111111111111), expected: i32(31) },\n      { input: i32Bits(0b11111111111111111111111111111111), expected: i32(32) },\n\n      // random after leading 1\n      { input: i32Bits(0b00000000000000000000000000000110), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000001101), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000011101), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000111001), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000001101111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000000111101111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000011111110001), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000111011011101), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000001101101111111), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000011111111011111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000101111001110101), expected: i32(10) },\n      { input: i32Bits(0b00000000000000001101111011110111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000011111111111110011), expected: i32(15) },\n      { input: i32Bits(0b00000000000000111111111110111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000001111111011111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b00000000000111110101011110111111), expected: i32(17) },\n      { input: i32Bits(0b00000000001111101111111111110111), expected: i32(20) },\n      { input: i32Bits(0b00000000011111111111010000101111), expected: i32(17) },\n      { input: i32Bits(0b00000000111111111111001111111011), expected: i32(21) },\n      { input: i32Bits(0b00000001111111011111101111111111), expected: i32(23) },\n      { input: i32Bits(0b00000011101011111011110111111011), expected: i32(21) },\n      { input: i32Bits(0b00000111111110111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00001111000000011011011110111111), expected: i32(18) },\n      { input: i32Bits(0b00011110101111011111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00110110111111100111111110111101), expected: i32(24) },\n      { input: i32Bits(0b01010111111101111111011111011111), expected: i32(26) },\n      { input: i32Bits(0b11100010011110101101101110101111), expected: i32(21) },\n    ]);\n  });\n"],"file":"countOneBits.spec.js"}