{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/countOneBits.spec.ts"],"names":["description","makeTestGroup","GPUTest","TypeU32","u32Bits","u32","TypeI32","i32Bits","i32","allInputSources","run","builtin","g","test","specURL","desc","params","u","combine","undefined","fn","t","cfg","input","expected"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'countOneBits' builtin function\n\nS is i32 or u32\nT is S or vecN<S>\n@const fn countOneBits(e: T ) -> T\nThe number of 1 bits in the representation of e.\nAlso known as \"population count\".\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeU32, u32Bits, u32, TypeI32, i32Bits, i32 } from '../../../../../util/conversion.js';\nimport { allInputSources, Config, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    await run(t, builtin('countOneBits'), [TypeU32], TypeU32, cfg, [\n      // Zero\n      { input: u32Bits(0b00000000000000000000000000000000), expected: u32(0) },\n\n      // One\n      { input: u32Bits(0b00000000000000000000000000000001), expected: u32(1) },\n\n      // 0's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000010), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000000100), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000001000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000010000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000100000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000001000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000010000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000100000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000001000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000010000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000100000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000001000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000010000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000100000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000001000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000010000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000000100000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000001000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000010000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000000100000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000001000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000010000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000000100000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000001000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000010000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00000100000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00001000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00010000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b00100000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b01000000000000000000000000000000), expected: u32(1) },\n      { input: u32Bits(0b10000000000000000000000000000000), expected: u32(1) },\n\n      // 1's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000011), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000000111), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000001111), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000011111), expected: u32(5) },\n      { input: u32Bits(0b00000000000000000000000000111111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000001111111), expected: u32(7) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000000111111111), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000011111111111), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000000111111111111), expected: u32(12) },\n      { input: u32Bits(0b00000000000000000001111111111111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000011111111111111), expected: u32(14) },\n      { input: u32Bits(0b00000000000000000111111111111111), expected: u32(15) },\n      { input: u32Bits(0b00000000000000001111111111111111), expected: u32(16) },\n      { input: u32Bits(0b00000000000000011111111111111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000000111111111111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000001111111111111111111), expected: u32(19) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(20) },\n      { input: u32Bits(0b00000000000111111111111111111111), expected: u32(21) },\n      { input: u32Bits(0b00000000001111111111111111111111), expected: u32(22) },\n      { input: u32Bits(0b00000000011111111111111111111111), expected: u32(23) },\n      { input: u32Bits(0b00000000111111111111111111111111), expected: u32(24) },\n      { input: u32Bits(0b00000001111111111111111111111111), expected: u32(25) },\n      { input: u32Bits(0b00000011111111111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00000111111111111111111111111111), expected: u32(27) },\n      { input: u32Bits(0b00001111111111111111111111111111), expected: u32(28) },\n      { input: u32Bits(0b00011111111111111111111111111111), expected: u32(29) },\n      { input: u32Bits(0b00111111111111111111111111111111), expected: u32(30) },\n      { input: u32Bits(0b01111111111111111111111111111111), expected: u32(31) },\n      { input: u32Bits(0b11111111111111111111111111111111), expected: u32(32) },\n\n      // random after leading 1\n      { input: u32Bits(0b00000000000000000000000000000110), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000001101), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000011101), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000111001), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000001101111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000000111101111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000011111110001), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000111011011101), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000001101101111111), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000011111111011111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000101111001110101), expected: u32(10) },\n      { input: u32Bits(0b00000000000000001101111011110111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000011111111111110011), expected: u32(15) },\n      { input: u32Bits(0b00000000000000111111111110111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000001111111011111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(20) },\n      { input: u32Bits(0b00000000000111110101011110111111), expected: u32(17) },\n      { input: u32Bits(0b00000000001111101111111111110111), expected: u32(20) },\n      { input: u32Bits(0b00000000011111111111010000101111), expected: u32(17) },\n      { input: u32Bits(0b00000000111111111111001111111011), expected: u32(21) },\n      { input: u32Bits(0b00000001111111011111101111111111), expected: u32(23) },\n      { input: u32Bits(0b00000011101011111011110111111011), expected: u32(21) },\n      { input: u32Bits(0b00000111111110111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00001111000000011011011110111111), expected: u32(18) },\n      { input: u32Bits(0b00011110101111011111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00110110111111100111111110111101), expected: u32(24) },\n      { input: u32Bits(0b01010111111101111111011111011111), expected: u32(26) },\n      { input: u32Bits(0b11100010011110101101101110101111), expected: u32(21) },\n    ]);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    await run(t, builtin('countOneBits'), [TypeI32], TypeI32, cfg, [\n      // Zero\n      { input: i32Bits(0b00000000000000000000000000000000), expected: i32(0) },\n\n      // One\n      { input: i32Bits(0b00000000000000000000000000000001), expected: i32(1) },\n\n      // 0's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000010), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000000100), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000001000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000010000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000100000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000001000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000010000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000100000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000001000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000010000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000100000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000001000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000010000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000100000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000001000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000010000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000000100000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000001000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000010000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000000100000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000001000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000010000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000000100000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000001000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000010000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00000100000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00001000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00010000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b00100000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b01000000000000000000000000000000), expected: i32(1) },\n      { input: i32Bits(0b10000000000000000000000000000000), expected: i32(1) },\n\n      // 1's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000011), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000000111), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000001111), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000011111), expected: i32(5) },\n      { input: i32Bits(0b00000000000000000000000000111111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000001111111), expected: i32(7) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000000111111111), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000011111111111), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000000111111111111), expected: i32(12) },\n      { input: i32Bits(0b00000000000000000001111111111111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000011111111111111), expected: i32(14) },\n      { input: i32Bits(0b00000000000000000111111111111111), expected: i32(15) },\n      { input: i32Bits(0b00000000000000001111111111111111), expected: i32(16) },\n      { input: i32Bits(0b00000000000000011111111111111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000000111111111111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000001111111111111111111), expected: i32(19) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b00000000000111111111111111111111), expected: i32(21) },\n      { input: i32Bits(0b00000000001111111111111111111111), expected: i32(22) },\n      { input: i32Bits(0b00000000011111111111111111111111), expected: i32(23) },\n      { input: i32Bits(0b00000000111111111111111111111111), expected: i32(24) },\n      { input: i32Bits(0b00000001111111111111111111111111), expected: i32(25) },\n      { input: i32Bits(0b00000011111111111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00000111111111111111111111111111), expected: i32(27) },\n      { input: i32Bits(0b00001111111111111111111111111111), expected: i32(28) },\n      { input: i32Bits(0b00011111111111111111111111111111), expected: i32(29) },\n      { input: i32Bits(0b00111111111111111111111111111111), expected: i32(30) },\n      { input: i32Bits(0b01111111111111111111111111111111), expected: i32(31) },\n      { input: i32Bits(0b11111111111111111111111111111111), expected: i32(32) },\n\n      // random after leading 1\n      { input: i32Bits(0b00000000000000000000000000000110), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000001101), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000011101), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000111001), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000001101111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000000111101111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000011111110001), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000111011011101), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000001101101111111), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000011111111011111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000101111001110101), expected: i32(10) },\n      { input: i32Bits(0b00000000000000001101111011110111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000011111111111110011), expected: i32(15) },\n      { input: i32Bits(0b00000000000000111111111110111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000001111111011111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b00000000000111110101011110111111), expected: i32(17) },\n      { input: i32Bits(0b00000000001111101111111111110111), expected: i32(20) },\n      { input: i32Bits(0b00000000011111111111010000101111), expected: i32(17) },\n      { input: i32Bits(0b00000000111111111111001111111011), expected: i32(21) },\n      { input: i32Bits(0b00000001111111011111101111111111), expected: i32(23) },\n      { input: i32Bits(0b00000011101011111011110111111011), expected: i32(21) },\n      { input: i32Bits(0b00000111111110111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00001111000000011011011110111111), expected: i32(18) },\n      { input: i32Bits(0b00011110101111011111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00110110111111100111111110111101), expected: i32(24) },\n      { input: i32Bits(0b01010111111101111111011111011111), expected: i32(26) },\n      { input: i32Bits(0b11100010011110101101101110101111), expected: i32(21) },\n    ]);\n  });\n"],"file":"countOneBits.spec.js"}