{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/refract.spec.ts"],"names":["description","makeTestGroup","GPUTest","allInputSources","g","test","specURL","desc","params","u","combine","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVO,CAYP,SAASC,aAAT,QAA8B,kDAA9B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACC,OAAD,CAAvB;;AAEPE,CAAC,CAACC,IAAF,CAAO,gBAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH,CAES,sBAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBP,eAAzB,EAA0CO,OAA1C,CAAkD,WAAlD,EAA+D,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA/D,CAHf;AAIGC,aAJH;;AAMAP,CAAC,CAACC,IAAF,CAAO,KAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH,CAES,WAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBP,eAAzB,EAA0CO,OAA1C,CAAkD,WAAlD,EAA+D,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA/D,CAHf;AAIGC,aAJH;;AAMAP,CAAC,CAACC,IAAF,CAAO,KAAP;AACGC,OADH,CACW,qDADX;AAEGC,IAFH,CAES,WAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBP,eAAzB,EAA0CO,OAA1C,CAAkD,WAAlD,EAA+D,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA/D,CAHf;AAIGC,aAJH","sourcesContent":["export const description = `\nExecution tests for the 'refract' builtin function\n\nT is vecN<I>\nI is AbstractFloat, f32, or f16\n@const fn refract(e1: T ,e2: T ,e3: I ) -> T\nFor the incident vector e1 and surface normal e2, and the ratio of indices of\nrefraction e3, let k = 1.0 -e3*e3* (1.0 - dot(e2,e1) * dot(e2,e1)).\nIf k < 0.0, returns the refraction vector 0.0, otherwise return the refraction\nvector e3*e1- (e3* dot(e2,e1) + sqrt(k)) *e2.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { allInputSources } from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n"],"file":"refract.spec.js"}