{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/atomicStore.spec.ts"],"names":["description","makeTestGroup","GPUTest","g","test","specURL","desc","params","u","combine","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,kDAA9B;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,OAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,OAAP;AACGC,OADH,CACW,0CADX;AAEGC,IAFH;AAGK;AACL;AACA,CALA;;AAOGC,MAPH,CAOU,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAF,CAAU,OAAV,EAAmB,CAAC,UAAD,EAAa,QAAb,EAAuB,SAAvB,CAAnB,CAPf;AAQGC,aARH;;AAUAP,CAAC,CAACC,IAAF,CAAO,OAAP;AACGC,OADH,CACW,0CADX;AAEGC,IAFH;AAGK;AACL;AACA;AACA;AACA;AACA,CARA;;AAUGC,MAVH,CAUU,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,CAAC,SAAD,EAAY,SAAZ,CAAhB,EAAiDA,OAAjD,CAAyD,GAAzD,EAA8D,CAAC,KAAD,EAAQ,KAAR,CAA9D,CAXJ;;AAaGC,aAbH","sourcesContent":["export const description = `\nAtomically stores the value v in the atomic object pointed to by atomic_ptr.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('stage')\n  .specURL('https://www.w3.org/TR/WGSL/#atomic-store')\n  .desc(\n    `\nAtomic built-in functions must not be used in a vertex shader stage.\n`\n  )\n  .params(u => u.combine('stage', ['fragment', 'vertex', 'compute'] as const))\n  .unimplemented();\n\ng.test('store')\n  .specURL('https://www.w3.org/TR/WGSL/#atomic-store')\n  .desc(\n    `\nSC is storage or workgroup\nT is i32 or u32\n\nfn atomicStore(atomic_ptr: ptr<SC, atomic<T>, read_write>, v: T)\n`\n  )\n  .params(u =>\n    u.combine('SC', ['storage', 'uniform'] as const).combine('T', ['i32', 'u32'] as const)\n  )\n  .unimplemented();\n"],"file":"atomicStore.spec.js"}