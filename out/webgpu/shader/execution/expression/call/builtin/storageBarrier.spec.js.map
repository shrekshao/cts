{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/storageBarrier.spec.ts"],"names":["description","makeTestGroup","GPUTest","g","test","specURL","desc","params","u","combine","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbO,CAeP,SAASC,aAAT,QAA8B,kDAA9B;AACA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,OAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,OAAP;AACGC,OADH,CACW,oDADX;AAEGC,IAFH;AAGK;AACL;AACA,CALA;;AAOGC,MAPH,CAOU,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAF,CAAU,OAAV,EAAmB,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,CAAnB,CAPf;AAQGC,aARH;;AAUAP,CAAC,CAACC,IAAF,CAAO,SAAP;AACGC,OADH,CACW,oDADX;AAEGC,IAFH;AAGK;AACL;AACA,CALA;;AAOGI,aAPH","sourcesContent":["export const description = `\n'storageBarrier' affects memory and atomic operations in the storage address space.\n\nAll synchronization functions execute a control barrier with Acquire/Release memory ordering.\nThat is, all synchronization functions, and affected memory and atomic operations are ordered\nin program order relative to the synchronization function. Additionally, the affected memory\nand atomic operations program-ordered before the synchronization function must be visible to\nall other threads in the workgroup before any affected memory or atomic operation program-ordered\nafter the synchronization function is executed by a member of the workgroup. All synchronization\nfunctions use the Workgroup memory scope. All synchronization functions have a Workgroup\nexecution scope.\n\nAll synchronization functions must only be used in the compute shader stage.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('stage')\n  .specURL('https://www.w3.org/TR/WGSL/#sync-builtin-functions')\n  .desc(\n    `\nAll synchronization functions must only be used in the compute shader stage.\n`\n  )\n  .params(u => u.combine('stage', ['vertex', 'fragment', 'compute'] as const))\n  .unimplemented();\n\ng.test('barrier')\n  .specURL('https://www.w3.org/TR/WGSL/#sync-builtin-functions')\n  .desc(\n    `\nfn storageBarrier()\n`\n  )\n  .unimplemented();\n"],"file":"storageBarrier.spec.js"}