{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/any.spec.ts"],"names":["description","makeTestGroup","GPUTest","False","True","TypeBool","TypeVec","vec2","vec3","vec4","run","builtin","g","test","uniqueId","specURL","desc","params","u","combine","fn","t","overloads","scalar","type","cases","input","expected","overload"],"mappings":"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","sourcesContent":["export const description = `\nExecution Tests for the 'any' builtin function\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  False,\n  True,\n  TypeBool,\n  TypeVec,\n  vec2,\n  vec3,\n  vec4,\n} from '../../../../../util/conversion.js';\nimport { run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('bool')\n  .uniqueId('ac2b3a100379d70f')\n  .specURL('https://www.w3.org/TR/2021/WD-WGSL-20210929/#logical-builtin-functions')\n  .desc(\n    `\nvector any:\ne: vecN<bool> any(e): bool Returns true if any component of e is true. (OpAny)\n\nPlease read the following guidelines before contributing:\nhttps://github.com/gpuweb/cts/blob/main/docs/plan_autogen.md\n`\n  )\n  .params(u =>\n    u\n      .combine('storageClass', ['uniform', 'storage_r', 'storage_rw'] as const)\n      .combine('overload', ['scalar', 'vec2', 'vec3', 'vec4'] as const)\n  )\n  .fn(async t => {\n    const overloads = {\n      scalar: {\n        type: TypeBool,\n        cases: [\n          { input: False, expected: False },\n          { input: True, expected: True },\n        ],\n      },\n      vec2: {\n        type: TypeVec(2, TypeBool),\n        cases: [\n          { input: vec2(False, False), expected: False },\n          { input: vec2(True, False), expected: True },\n          { input: vec2(False, True), expected: True },\n          { input: vec2(True, True), expected: True },\n        ],\n      },\n      vec3: {\n        type: TypeVec(3, TypeBool),\n        cases: [\n          { input: vec3(False, False, False), expected: False },\n          { input: vec3(True, False, False), expected: True },\n          { input: vec3(False, True, False), expected: True },\n          { input: vec3(True, True, False), expected: True },\n          { input: vec3(False, False, True), expected: True },\n          { input: vec3(True, False, True), expected: True },\n          { input: vec3(False, True, True), expected: True },\n          { input: vec3(True, True, True), expected: True },\n        ],\n      },\n      vec4: {\n        type: TypeVec(4, TypeBool),\n        cases: [\n          { input: vec4(False, False, False, False), expected: False },\n          { input: vec4(False, True, False, False), expected: True },\n          { input: vec4(False, False, True, False), expected: True },\n          { input: vec4(False, True, True, False), expected: True },\n          { input: vec4(False, False, False, True), expected: True },\n          { input: vec4(False, True, False, True), expected: True },\n          { input: vec4(False, False, True, True), expected: True },\n          { input: vec4(False, True, True, True), expected: True },\n          { input: vec4(True, False, False, False), expected: True },\n          { input: vec4(True, False, False, True), expected: True },\n          { input: vec4(True, False, True, False), expected: True },\n          { input: vec4(True, False, True, True), expected: True },\n          { input: vec4(True, True, False, False), expected: True },\n          { input: vec4(True, True, False, True), expected: True },\n          { input: vec4(True, True, True, False), expected: True },\n          { input: vec4(True, True, True, True), expected: True },\n        ],\n      },\n    };\n    const overload = overloads[t.params.overload];\n\n    run(t, builtin('any'), [overload.type], TypeBool, t.params, overload.cases);\n  });\n"],"file":"any.spec.js"}