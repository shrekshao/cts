{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/all.spec.ts"],"names":["description","makeTestGroup","GPUTest","False","True","TypeBool","TypeVec","vec2","vec3","vec4","run","builtin","g","test","specURL","desc","params","u","combine","fn","t","overloads","scalar","type","cases","input","expected","overload"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'all' builtin function\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport {\n  False,\n  True,\n  TypeBool,\n  TypeVec,\n  vec2,\n  vec3,\n  vec4,\n} from '../../../../../util/conversion.js';\nimport { run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('bool')\n  .specURL('https://www.w3.org/TR/WGSL/#logical-builtin-functions')\n  .desc(\n    `\n# scalar\ne: bool\n@const fn all(e) -> bool\nReturns e.\n\n# vector\n@const fn all(e: vecN<bool>) -> bool\nReturns true if each component of e is true.\n`\n  )\n  .params(u =>\n    u\n      .combine('storageClass', ['uniform', 'storage_r', 'storage_rw'] as const)\n      .combine('overload', ['scalar', 'vec2', 'vec3', 'vec4'] as const)\n  )\n  .fn(async t => {\n    const overloads = {\n      scalar: {\n        type: TypeBool,\n        cases: [\n          { input: False, expected: False },\n          { input: True, expected: True },\n        ],\n      },\n      vec2: {\n        type: TypeVec(2, TypeBool),\n        cases: [\n          { input: vec2(False, False), expected: False },\n          { input: vec2(True, False), expected: False },\n          { input: vec2(False, True), expected: False },\n          { input: vec2(True, True), expected: True },\n        ],\n      },\n      vec3: {\n        type: TypeVec(3, TypeBool),\n        cases: [\n          { input: vec3(False, False, False), expected: False },\n          { input: vec3(True, False, False), expected: False },\n          { input: vec3(False, True, False), expected: False },\n          { input: vec3(True, True, False), expected: False },\n          { input: vec3(False, False, True), expected: False },\n          { input: vec3(True, False, True), expected: False },\n          { input: vec3(False, True, True), expected: False },\n          { input: vec3(True, True, True), expected: True },\n        ],\n      },\n      vec4: {\n        type: TypeVec(4, TypeBool),\n        cases: [\n          { input: vec4(False, False, False, False), expected: False },\n          { input: vec4(False, True, False, False), expected: False },\n          { input: vec4(False, False, True, False), expected: False },\n          { input: vec4(False, True, True, False), expected: False },\n          { input: vec4(False, False, False, True), expected: False },\n          { input: vec4(False, True, False, True), expected: False },\n          { input: vec4(False, False, True, True), expected: False },\n          { input: vec4(False, True, True, True), expected: False },\n          { input: vec4(True, False, False, False), expected: False },\n          { input: vec4(True, False, False, True), expected: False },\n          { input: vec4(True, False, True, False), expected: False },\n          { input: vec4(True, False, True, True), expected: False },\n          { input: vec4(True, True, False, False), expected: False },\n          { input: vec4(True, True, False, True), expected: False },\n          { input: vec4(True, True, True, False), expected: False },\n          { input: vec4(True, True, True, True), expected: True },\n        ],\n      },\n    };\n    const overload = overloads[t.params.overload];\n\n    run(t, builtin('all'), [overload.type], TypeBool, t.params, overload.cases);\n  });\n"],"file":"all.spec.js"}