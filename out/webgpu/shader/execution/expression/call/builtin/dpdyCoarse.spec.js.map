{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/dpdyCoarse.spec.ts"],"names":["description","makeTestGroup","GPUTest","allInputSources","g","test","specURL","desc","params","u","combine","undefined","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAPO,CASP,SAASC,aAAT,QAA8B,kDAA9B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACC,OAAD,CAAvB;;AAEPE,CAAC,CAACC,IAAF,CAAO,KAAP;AACGC,OADH,CACW,0DADX;AAEGC,IAFH,CAES,UAFT;AAGGC,MAHH,CAGU,CAAAC,CAAC;AACPA,CAAC,CAACC,OAAF,CAAU,aAAV,EAAyBP,eAAzB,EAA0CO,OAA1C,CAAkD,WAAlD,EAA+D,CAACC,SAAD,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA/D,CAJJ;;AAMGC,aANH","sourcesContent":["export const description = `\nExecution tests for the 'dpdyCoarse' builtin function\n\nT is f32 or vecN<f32>\nfn dpdyCoarse(e:T) ->T\nReturns the partial derivative of e with respect to window y coordinates using local differences.\nThis may result in fewer unique positions that dpdyFine(e).\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { allInputSources } from '../../expression.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#derivative-builtin-functions')\n  .desc(`f32 test`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"file":"dpdyCoarse.spec.js"}