{"version":3,"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/firstLeadingBit.spec.ts"],"names":["description","makeTestGroup","GPUTest","i32","i32Bits","TypeI32","u32","TypeU32","u32Bits","allInputSources","run","builtin","g","test","specURL","desc","params","u","combine","undefined","fn","t","cfg","input","expected"],"mappings":"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","sourcesContent":["export const description = `\nExecution tests for the 'firstLeadingBit' builtin function\n\nT is u32 or vecN<u32>\n@const fn firstLeadingBit(e: T ) -> T\nFor scalar T, the result is: T(-1) if e is zero.\nOtherwise the position of the most significant 1 bit in e.\nComponent-wise when T is a vector.\n\nT is i32 or vecN<i32>\n@const fn firstLeadingBit(e: T ) -> T\nFor scalar T, the result is: -1 if e is 0 or -1.\nOtherwise the position of the most significant bit in e that is different from e’s sign bit.\nComponent-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { i32, i32Bits, TypeI32, u32, TypeU32, u32Bits } from '../../../../../util/conversion.js';\nimport { allInputSources, Config, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('u32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`u32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    await run(t, builtin('firstLeadingBit'), [TypeU32], TypeU32, cfg, [\n      // Zero\n      { input: u32Bits(0b00000000000000000000000000000000), expected: u32(-1) },\n\n      // One\n      { input: u32Bits(0b00000000000000000000000000000001), expected: u32(0) },\n\n      // 0's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000010), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000000100), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000001000), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000010000), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000100000), expected: u32(5) },\n      { input: u32Bits(0b00000000000000000000000001000000), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000010000000), expected: u32(7) },\n      { input: u32Bits(0b00000000000000000000000100000000), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000001000000000), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000000010000000000), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000100000000000), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000001000000000000), expected: u32(12) },\n      { input: u32Bits(0b00000000000000000010000000000000), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000100000000000000), expected: u32(14) },\n      { input: u32Bits(0b00000000000000001000000000000000), expected: u32(15) },\n      { input: u32Bits(0b00000000000000010000000000000000), expected: u32(16) },\n      { input: u32Bits(0b00000000000000100000000000000000), expected: u32(17) },\n      { input: u32Bits(0b00000000000001000000000000000000), expected: u32(18) },\n      { input: u32Bits(0b00000000000010000000000000000000), expected: u32(19) },\n      { input: u32Bits(0b00000000000100000000000000000000), expected: u32(20) },\n      { input: u32Bits(0b00000000001000000000000000000000), expected: u32(21) },\n      { input: u32Bits(0b00000000010000000000000000000000), expected: u32(22) },\n      { input: u32Bits(0b00000000100000000000000000000000), expected: u32(23) },\n      { input: u32Bits(0b00000001000000000000000000000000), expected: u32(24) },\n      { input: u32Bits(0b00000010000000000000000000000000), expected: u32(25) },\n      { input: u32Bits(0b00000100000000000000000000000000), expected: u32(26) },\n      { input: u32Bits(0b00001000000000000000000000000000), expected: u32(27) },\n      { input: u32Bits(0b00010000000000000000000000000000), expected: u32(28) },\n      { input: u32Bits(0b00100000000000000000000000000000), expected: u32(29) },\n      { input: u32Bits(0b01000000000000000000000000000000), expected: u32(30) },\n      { input: u32Bits(0b10000000000000000000000000000000), expected: u32(31) },\n\n      // 1's after leading 1\n      { input: u32Bits(0b00000000000000000000000000000011), expected: u32(1) },\n      { input: u32Bits(0b00000000000000000000000000000111), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000001111), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000011111), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000111111), expected: u32(5) },\n      { input: u32Bits(0b00000000000000000000000001111111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(7) },\n      { input: u32Bits(0b00000000000000000000000111111111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000000011111111111), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000111111111111), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000001111111111111), expected: u32(12) },\n      { input: u32Bits(0b00000000000000000011111111111111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000111111111111111), expected: u32(14) },\n      { input: u32Bits(0b00000000000000001111111111111111), expected: u32(15) },\n      { input: u32Bits(0b00000000000000011111111111111111), expected: u32(16) },\n      { input: u32Bits(0b00000000000000111111111111111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000001111111111111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(19) },\n      { input: u32Bits(0b00000000000111111111111111111111), expected: u32(20) },\n      { input: u32Bits(0b00000000001111111111111111111111), expected: u32(21) },\n      { input: u32Bits(0b00000000011111111111111111111111), expected: u32(22) },\n      { input: u32Bits(0b00000000111111111111111111111111), expected: u32(23) },\n      { input: u32Bits(0b00000001111111111111111111111111), expected: u32(24) },\n      { input: u32Bits(0b00000011111111111111111111111111), expected: u32(25) },\n      { input: u32Bits(0b00000111111111111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00001111111111111111111111111111), expected: u32(27) },\n      { input: u32Bits(0b00011111111111111111111111111111), expected: u32(28) },\n      { input: u32Bits(0b00111111111111111111111111111111), expected: u32(29) },\n      { input: u32Bits(0b01111111111111111111111111111111), expected: u32(30) },\n      { input: u32Bits(0b11111111111111111111111111111111), expected: u32(31) },\n\n      // random after leading 1\n      { input: u32Bits(0b00000000000000000000000000000110), expected: u32(2) },\n      { input: u32Bits(0b00000000000000000000000000001101), expected: u32(3) },\n      { input: u32Bits(0b00000000000000000000000000011101), expected: u32(4) },\n      { input: u32Bits(0b00000000000000000000000000111001), expected: u32(5) },\n      { input: u32Bits(0b00000000000000000000000001101111), expected: u32(6) },\n      { input: u32Bits(0b00000000000000000000000011111111), expected: u32(7) },\n      { input: u32Bits(0b00000000000000000000000111101111), expected: u32(8) },\n      { input: u32Bits(0b00000000000000000000001111111111), expected: u32(9) },\n      { input: u32Bits(0b00000000000000000000011111110001), expected: u32(10) },\n      { input: u32Bits(0b00000000000000000000111011011101), expected: u32(11) },\n      { input: u32Bits(0b00000000000000000001101101111111), expected: u32(12) },\n      { input: u32Bits(0b00000000000000000011111111011111), expected: u32(13) },\n      { input: u32Bits(0b00000000000000000101111001110101), expected: u32(14) },\n      { input: u32Bits(0b00000000000000001101111011110111), expected: u32(15) },\n      { input: u32Bits(0b00000000000000011111111111110011), expected: u32(16) },\n      { input: u32Bits(0b00000000000000111111111110111111), expected: u32(17) },\n      { input: u32Bits(0b00000000000001111111011111111111), expected: u32(18) },\n      { input: u32Bits(0b00000000000011111111111111111111), expected: u32(19) },\n      { input: u32Bits(0b00000000000111110101011110111111), expected: u32(20) },\n      { input: u32Bits(0b00000000001111101111111111110111), expected: u32(21) },\n      { input: u32Bits(0b00000000011111111111010000101111), expected: u32(22) },\n      { input: u32Bits(0b00000000111111111111001111111011), expected: u32(23) },\n      { input: u32Bits(0b00000001111111011111101111111111), expected: u32(24) },\n      { input: u32Bits(0b00000011101011111011110111111011), expected: u32(25) },\n      { input: u32Bits(0b00000111111110111111111111111111), expected: u32(26) },\n      { input: u32Bits(0b00001111000000011011011110111111), expected: u32(27) },\n      { input: u32Bits(0b00011110101111011111111111111111), expected: u32(28) },\n      { input: u32Bits(0b00110110111111100111111110111101), expected: u32(29) },\n      { input: u32Bits(0b01010111111101111111011111011111), expected: u32(30) },\n      { input: u32Bits(0b11100010011110101101101110101111), expected: u32(31) },\n    ]);\n  });\n\ng.test('i32')\n  .specURL('https://www.w3.org/TR/WGSL/#integer-builtin-functions')\n  .desc(`i32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cfg: Config = t.params;\n    await run(t, builtin('firstLeadingBit'), [TypeI32], TypeI32, cfg, [\n      // Zero\n      { input: i32Bits(0b00000000000000000000000000000000), expected: i32(-1) },\n\n      // One\n      { input: i32Bits(0b00000000000000000000000000000001), expected: i32(0) },\n\n      // Positive: 0's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000010), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000000100), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000001000), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000010000), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000100000), expected: i32(5) },\n      { input: i32Bits(0b00000000000000000000000001000000), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000010000000), expected: i32(7) },\n      { input: i32Bits(0b00000000000000000000000100000000), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000001000000000), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000000010000000000), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000100000000000), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000001000000000000), expected: i32(12) },\n      { input: i32Bits(0b00000000000000000010000000000000), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000100000000000000), expected: i32(14) },\n      { input: i32Bits(0b00000000000000001000000000000000), expected: i32(15) },\n      { input: i32Bits(0b00000000000000010000000000000000), expected: i32(16) },\n      { input: i32Bits(0b00000000000000100000000000000000), expected: i32(17) },\n      { input: i32Bits(0b00000000000001000000000000000000), expected: i32(18) },\n      { input: i32Bits(0b00000000000010000000000000000000), expected: i32(19) },\n      { input: i32Bits(0b00000000000100000000000000000000), expected: i32(20) },\n      { input: i32Bits(0b00000000001000000000000000000000), expected: i32(21) },\n      { input: i32Bits(0b00000000010000000000000000000000), expected: i32(22) },\n      { input: i32Bits(0b00000000100000000000000000000000), expected: i32(23) },\n      { input: i32Bits(0b00000001000000000000000000000000), expected: i32(24) },\n      { input: i32Bits(0b00000010000000000000000000000000), expected: i32(25) },\n      { input: i32Bits(0b00000100000000000000000000000000), expected: i32(26) },\n      { input: i32Bits(0b00001000000000000000000000000000), expected: i32(27) },\n      { input: i32Bits(0b00010000000000000000000000000000), expected: i32(28) },\n      { input: i32Bits(0b00100000000000000000000000000000), expected: i32(29) },\n      { input: i32Bits(0b01000000000000000000000000000000), expected: i32(30) },\n\n      // Negative: 0's after leading 0\n      { input: i32Bits(0b11111111111111111111111111111110), expected: i32(0) },\n      { input: i32Bits(0b11111111111111111111111111111100), expected: i32(1) },\n      { input: i32Bits(0b11111111111111111111111111111000), expected: i32(2) },\n      { input: i32Bits(0b11111111111111111111111111110000), expected: i32(3) },\n      { input: i32Bits(0b11111111111111111111111111100000), expected: i32(4) },\n      { input: i32Bits(0b11111111111111111111111111000000), expected: i32(5) },\n      { input: i32Bits(0b11111111111111111111111110000000), expected: i32(6) },\n      { input: i32Bits(0b11111111111111111111111100000000), expected: i32(7) },\n      { input: i32Bits(0b11111111111111111111111000000000), expected: i32(8) },\n      { input: i32Bits(0b11111111111111111111110000000000), expected: i32(9) },\n      { input: i32Bits(0b11111111111111111111100000000000), expected: i32(10) },\n      { input: i32Bits(0b11111111111111111111000000000000), expected: i32(11) },\n      { input: i32Bits(0b11111111111111111110000000000000), expected: i32(12) },\n      { input: i32Bits(0b11111111111111111100000000000000), expected: i32(13) },\n      { input: i32Bits(0b11111111111111111000000000000000), expected: i32(14) },\n      { input: i32Bits(0b11111111111111110000000000000000), expected: i32(15) },\n      { input: i32Bits(0b11111111111111100000000000000000), expected: i32(16) },\n      { input: i32Bits(0b11111111111111000000000000000000), expected: i32(17) },\n      { input: i32Bits(0b11111111111110000000000000000000), expected: i32(18) },\n      { input: i32Bits(0b11111111111100000000000000000000), expected: i32(19) },\n      { input: i32Bits(0b11111111111000000000000000000000), expected: i32(20) },\n      { input: i32Bits(0b11111111110000000000000000000000), expected: i32(21) },\n      { input: i32Bits(0b11111111100000000000000000000000), expected: i32(22) },\n      { input: i32Bits(0b11111111000000000000000000000000), expected: i32(23) },\n      { input: i32Bits(0b11111110000000000000000000000000), expected: i32(24) },\n      { input: i32Bits(0b11111100000000000000000000000000), expected: i32(25) },\n      { input: i32Bits(0b11111000000000000000000000000000), expected: i32(26) },\n      { input: i32Bits(0b11110000000000000000000000000000), expected: i32(27) },\n      { input: i32Bits(0b11100000000000000000000000000000), expected: i32(28) },\n      { input: i32Bits(0b11000000000000000000000000000000), expected: i32(29) },\n      { input: i32Bits(0b10000000000000000000000000000000), expected: i32(30) },\n\n      // Positive: 1's after leading 1\n      { input: i32Bits(0b00000000000000000000000000000011), expected: i32(1) },\n      { input: i32Bits(0b00000000000000000000000000000111), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000001111), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000011111), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000111111), expected: i32(5) },\n      { input: i32Bits(0b00000000000000000000000001111111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(7) },\n      { input: i32Bits(0b00000000000000000000000111111111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000000011111111111), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000111111111111), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000001111111111111), expected: i32(12) },\n      { input: i32Bits(0b00000000000000000011111111111111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000111111111111111), expected: i32(14) },\n      { input: i32Bits(0b00000000000000001111111111111111), expected: i32(15) },\n      { input: i32Bits(0b00000000000000011111111111111111), expected: i32(16) },\n      { input: i32Bits(0b00000000000000111111111111111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000001111111111111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(19) },\n      { input: i32Bits(0b00000000000111111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b00000000001111111111111111111111), expected: i32(21) },\n      { input: i32Bits(0b00000000011111111111111111111111), expected: i32(22) },\n      { input: i32Bits(0b00000000111111111111111111111111), expected: i32(23) },\n      { input: i32Bits(0b00000001111111111111111111111111), expected: i32(24) },\n      { input: i32Bits(0b00000011111111111111111111111111), expected: i32(25) },\n      { input: i32Bits(0b00000111111111111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00001111111111111111111111111111), expected: i32(27) },\n      { input: i32Bits(0b00011111111111111111111111111111), expected: i32(28) },\n      { input: i32Bits(0b00111111111111111111111111111111), expected: i32(29) },\n      { input: i32Bits(0b01111111111111111111111111111111), expected: i32(30) },\n\n      // Negative: 1's after leading 0\n      { input: i32Bits(0b11111111111111111111111111111101), expected: i32(1) },\n      { input: i32Bits(0b11111111111111111111111111111011), expected: i32(2) },\n      { input: i32Bits(0b11111111111111111111111111110111), expected: i32(3) },\n      { input: i32Bits(0b11111111111111111111111111101111), expected: i32(4) },\n      { input: i32Bits(0b11111111111111111111111111011111), expected: i32(5) },\n      { input: i32Bits(0b11111111111111111111111110111111), expected: i32(6) },\n      { input: i32Bits(0b11111111111111111111111101111111), expected: i32(7) },\n      { input: i32Bits(0b11111111111111111111111011111111), expected: i32(8) },\n      { input: i32Bits(0b11111111111111111111110111111111), expected: i32(9) },\n      { input: i32Bits(0b11111111111111111111101111111111), expected: i32(10) },\n      { input: i32Bits(0b11111111111111111111011111111111), expected: i32(11) },\n      { input: i32Bits(0b11111111111111111110111111111111), expected: i32(12) },\n      { input: i32Bits(0b11111111111111111101111111111111), expected: i32(13) },\n      { input: i32Bits(0b11111111111111111011111111111111), expected: i32(14) },\n      { input: i32Bits(0b11111111111111110111111111111111), expected: i32(15) },\n      { input: i32Bits(0b11111111111111101111111111111111), expected: i32(16) },\n      { input: i32Bits(0b11111111111111011111111111111111), expected: i32(17) },\n      { input: i32Bits(0b11111111111110111111111111111111), expected: i32(18) },\n      { input: i32Bits(0b11111111111101111111111111111111), expected: i32(19) },\n      { input: i32Bits(0b11111111111011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b11111111110111111111111111111111), expected: i32(21) },\n      { input: i32Bits(0b11111111101111111111111111111111), expected: i32(22) },\n      { input: i32Bits(0b11111111011111111111111111111111), expected: i32(23) },\n      { input: i32Bits(0b11111110111111111111111111111111), expected: i32(24) },\n      { input: i32Bits(0b11111101111111111111111111111111), expected: i32(25) },\n      { input: i32Bits(0b11111011111111111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b11110111111111111111111111111111), expected: i32(27) },\n      { input: i32Bits(0b11101111111111111111111111111111), expected: i32(28) },\n      { input: i32Bits(0b11011111111111111111111111111111), expected: i32(29) },\n      { input: i32Bits(0b10111111111111111111111111111111), expected: i32(30) },\n\n      // Positive: random after leading 1\n      { input: i32Bits(0b00000000000000000000000000000110), expected: i32(2) },\n      { input: i32Bits(0b00000000000000000000000000001101), expected: i32(3) },\n      { input: i32Bits(0b00000000000000000000000000011101), expected: i32(4) },\n      { input: i32Bits(0b00000000000000000000000000111001), expected: i32(5) },\n      { input: i32Bits(0b00000000000000000000000001101111), expected: i32(6) },\n      { input: i32Bits(0b00000000000000000000000011111111), expected: i32(7) },\n      { input: i32Bits(0b00000000000000000000000111101111), expected: i32(8) },\n      { input: i32Bits(0b00000000000000000000001111111111), expected: i32(9) },\n      { input: i32Bits(0b00000000000000000000011111110001), expected: i32(10) },\n      { input: i32Bits(0b00000000000000000000111011011101), expected: i32(11) },\n      { input: i32Bits(0b00000000000000000001101101111111), expected: i32(12) },\n      { input: i32Bits(0b00000000000000000011111111011111), expected: i32(13) },\n      { input: i32Bits(0b00000000000000000101111001110101), expected: i32(14) },\n      { input: i32Bits(0b00000000000000001101111011110111), expected: i32(15) },\n      { input: i32Bits(0b00000000000000011111111111110011), expected: i32(16) },\n      { input: i32Bits(0b00000000000000111111111110111111), expected: i32(17) },\n      { input: i32Bits(0b00000000000001111111011111111111), expected: i32(18) },\n      { input: i32Bits(0b00000000000011111111111111111111), expected: i32(19) },\n      { input: i32Bits(0b00000000000111110101011110111111), expected: i32(20) },\n      { input: i32Bits(0b00000000001111101111111111110111), expected: i32(21) },\n      { input: i32Bits(0b00000000011111111111010000101111), expected: i32(22) },\n      { input: i32Bits(0b00000000111111111111001111111011), expected: i32(23) },\n      { input: i32Bits(0b00000001111111011111101111111111), expected: i32(24) },\n      { input: i32Bits(0b00000011101011111011110111111011), expected: i32(25) },\n      { input: i32Bits(0b00000111111110111111111111111111), expected: i32(26) },\n      { input: i32Bits(0b00001111000000011011011110111111), expected: i32(27) },\n      { input: i32Bits(0b00011110101111011111111111111111), expected: i32(28) },\n      { input: i32Bits(0b00110110111111100111111110111101), expected: i32(29) },\n      { input: i32Bits(0b01010111111101111111011111011111), expected: i32(30) },\n\n      // Negative: random after leading 0\n      { input: i32Bits(0b11111111111111111111111111111010), expected: i32(2) },\n      { input: i32Bits(0b11111111111111111111111111110110), expected: i32(3) },\n      { input: i32Bits(0b11111111111111111111111111101101), expected: i32(4) },\n      { input: i32Bits(0b11111111111111111111111111011101), expected: i32(5) },\n      { input: i32Bits(0b11111111111111111111111110111001), expected: i32(6) },\n      { input: i32Bits(0b11111111111111111111111101101111), expected: i32(7) },\n      { input: i32Bits(0b11111111111111111111111011111111), expected: i32(8) },\n      { input: i32Bits(0b11111111111111111111110111101111), expected: i32(9) },\n      { input: i32Bits(0b11111111111111111111101111111111), expected: i32(10) },\n      { input: i32Bits(0b11111111111111111111011111110001), expected: i32(11) },\n      { input: i32Bits(0b11111111111111111110111011011101), expected: i32(12) },\n      { input: i32Bits(0b11111111111111111101101101111111), expected: i32(13) },\n      { input: i32Bits(0b11111111111111111011111111011111), expected: i32(14) },\n      { input: i32Bits(0b11111111111111110101111001110101), expected: i32(15) },\n      { input: i32Bits(0b11111111111111101101111011110111), expected: i32(16) },\n      { input: i32Bits(0b11111111111111011111111111110011), expected: i32(17) },\n      { input: i32Bits(0b11111111111110111111111110111111), expected: i32(18) },\n      { input: i32Bits(0b11111111111101111111011111111111), expected: i32(19) },\n      { input: i32Bits(0b11111111111011111111111111111111), expected: i32(20) },\n      { input: i32Bits(0b11111111110111110101011110111111), expected: i32(21) },\n      { input: i32Bits(0b11111111101111101111111111110111), expected: i32(22) },\n      { input: i32Bits(0b11111111011111111111010000101111), expected: i32(23) },\n      { input: i32Bits(0b11111110111111111111001111111011), expected: i32(24) },\n      { input: i32Bits(0b11111101111111011111101111111111), expected: i32(25) },\n      { input: i32Bits(0b11111011101011111011110111111011), expected: i32(26) },\n      { input: i32Bits(0b11110111111110111111111111111111), expected: i32(27) },\n      { input: i32Bits(0b11101111000000011011011110111111), expected: i32(28) },\n      { input: i32Bits(0b11011110101111011111111111111111), expected: i32(29) },\n      { input: i32Bits(0b10110110111111100111111110111101), expected: i32(30) },\n    ]);\n  });\n"],"file":"firstLeadingBit.spec.js"}