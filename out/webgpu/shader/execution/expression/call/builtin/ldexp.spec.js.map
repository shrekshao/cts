{"version":3,"file":"ldexp.spec.js","names":["description","makeTestGroup","GPUTest","f32","i32","TypeF32","TypeI32","ldexpInterval","fullF32Range","fullI32Range","quantizeToF32","quantizeToI32","makeCaseCache","allInputSources","run","builtin","g","d","makeCase","e1","e2","expected","input","cases","forEach","push","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","get"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/ldexp.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'ldexp' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n\nK is AbstractInt, i32\nI is K or vecN<K>, where\n  I is a scalar if T is a scalar, or a vector when T is a vector\n\n@const fn ldexp(e1: T ,e2: I ) -> T\nReturns e1 * 2^e2. Component-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { f32, i32, TypeF32, TypeI32 } from '../../../../../util/conversion.js';\nimport { ldexpInterval } from '../../../../../util/f32_interval.js';\nimport {\n  fullF32Range,\n  fullI32Range,\n  quantizeToF32,\n  quantizeToI32,\n} from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('ldexp', {\n  f32: () => {\n    const makeCase = (e1: number, e2: number): Case => {\n      // Due to the heterogeneous types of the params to ldexp (f32 & i32),\n      // makeBinaryToF32IntervalCase cannot be used here.\n      e1 = quantizeToF32(e1);\n      e2 = quantizeToI32(e2);\n      const expected = ldexpInterval(e1, e2);\n      return { input: [f32(e1), i32(e2)], expected };\n    };\n\n    const cases: Array<Case> = [];\n    fullF32Range().forEach(e1 => {\n      fullI32Range().forEach(e2 => {\n        cases.push(makeCase(e1, e2));\n      });\n    });\n    return cases;\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(\n    `\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('ldexp'), [TypeF32, TypeI32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"mappings":"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"}