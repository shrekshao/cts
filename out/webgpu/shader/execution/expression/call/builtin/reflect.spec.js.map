{"version":3,"file":"reflect.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","reflectInterval","sparseVectorF32Range","makeCaseCache","allInputSources","generateVectorPairToVectorCases","run","builtin","g","d","f32_vec2_const","f32_vec2_non_const","f32_vec3_const","f32_vec3_non_const","f32_vec4_const","f32_vec4_non_const","test","specURL","desc","params","u","combine","unimplemented","fn","t","cases","get","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/reflect.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'reflect' builtin function\n\nT is vecN<AbstractFloat>, vecN<f32>, or vecN<f16>\n@const fn reflect(e1: T, e2: T ) -> T\nFor the incident vector e1 and surface orientation e2, returns the reflection\ndirection e1-2*dot(e2,e1)*e2.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { reflectInterval } from '../../../../../util/f32_interval.js';\nimport { sparseVectorF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, generateVectorPairToVectorCases, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('reflect', {\n  f32_vec2_const: () => {\n    return generateVectorPairToVectorCases(\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      'f32-only',\n      reflectInterval\n    );\n  },\n  f32_vec2_non_const: () => {\n    return generateVectorPairToVectorCases(\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      reflectInterval\n    );\n  },\n  f32_vec3_const: () => {\n    return generateVectorPairToVectorCases(\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      'f32-only',\n      reflectInterval\n    );\n  },\n  f32_vec3_non_const: () => {\n    return generateVectorPairToVectorCases(\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      reflectInterval\n    );\n  },\n  f32_vec4_const: () => {\n    return generateVectorPairToVectorCases(\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      'f32-only',\n      reflectInterval\n    );\n  },\n  f32_vec4_non_const: () => {\n    return generateVectorPairToVectorCases(\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      reflectInterval\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec2_const' : 'f32_vec2_non_const'\n    );\n    await run(\n      t,\n      builtin('reflect'),\n      [TypeVec(2, TypeF32), TypeVec(2, TypeF32)],\n      TypeVec(2, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec3_const' : 'f32_vec3_non_const'\n    );\n    await run(\n      t,\n      builtin('reflect'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeVec(3, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec4_const' : 'f32_vec4_non_const'\n    );\n    await run(\n      t,\n      builtin('reflect'),\n      [TypeVec(4, TypeF32), TypeVec(4, TypeF32)],\n      TypeVec(4, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n"],"mappings":"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"}