{"version":3,"file":"step.spec.js","names":["description","makeTestGroup","GPUTest","anyOf","f32","TypeF32","stepInterval","toF32Interval","fullF32Range","quantizeToF32","makeCaseCache","allInputSources","run","builtin","g","d","zeroInterval","oneInterval","makeCase","edge","x","expected","isPoint","isFinite","input","range","cases","forEach","push","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","get"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/step.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'step' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn step(edge: T ,x: T ) -> T\nReturns 1.0 if edge ≤ x, and 0.0 otherwise. Component-wise when T is a vector.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { anyOf } from '../../../../../util/compare.js';\nimport { f32, TypeF32 } from '../../../../../util/conversion.js';\nimport { stepInterval, toF32Interval } from '../../../../../util/f32_interval.js';\nimport { fullF32Range, quantizeToF32 } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('step', {\n  f32: () => {\n    const zeroInterval = toF32Interval(0);\n    const oneInterval = toF32Interval(1);\n\n    // stepInterval's return value isn't always interpreted as an acceptance\n    // interval, so makeBinaryToF32IntervalCase cannot be used here.\n    // See the comment block on stepInterval for more details\n    const makeCase = (edge: number, x: number): Case => {\n      edge = quantizeToF32(edge);\n      x = quantizeToF32(x);\n      const expected = stepInterval(edge, x);\n\n      // [0, 0], [1, 1], or [-∞, +∞] cases\n      if (expected.isPoint() || !expected.isFinite()) {\n        return { input: [f32(edge), f32(x)], expected };\n      }\n\n      // [0, 1] case\n      return {\n        input: [f32(edge), f32(x)],\n        expected: anyOf(zeroInterval, oneInterval),\n      };\n    };\n\n    const range = fullF32Range();\n    const cases: Array<Case> = [];\n    range.forEach(edge => {\n      range.forEach(x => {\n        cases.push(makeCase(edge, x));\n      });\n    });\n\n    return cases;\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('f32');\n    await run(t, builtin('step'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"mappings":"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"}