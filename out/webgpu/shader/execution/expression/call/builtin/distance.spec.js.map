{"version":3,"file":"distance.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","distanceInterval","fullF32Range","sparseVectorF32Range","makeCaseCache","allInputSources","generateBinaryToF32IntervalCases","generateVectorPairToF32IntervalCases","run","builtin","g","d","f32_const","f32_non_const","f32_vec2_const","f32_vec2_non_const","f32_vec3_const","f32_vec3_non_const","f32_vec4_const","f32_vec4_non_const","test","specURL","desc","params","u","combine","undefined","unimplemented","fn","t","cases","get","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/distance.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'distance' builtin function\n\nS is AbstractFloat, f32, f16\nT is S or vecN<S>\n@const fn distance(e1: T ,e2: T ) -> f32\nReturns the distance between e1 and e2 (e.g. length(e1-e2)).\n\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../../util/conversion.js';\nimport { distanceInterval } from '../../../../../util/f32_interval.js';\nimport { fullF32Range, sparseVectorF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport {\n  allInputSources,\n  generateBinaryToF32IntervalCases,\n  generateVectorPairToF32IntervalCases,\n  run,\n} from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('distance', {\n  f32_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'f32-only',\n      distanceInterval\n    );\n  },\n  f32_non_const: () => {\n    return generateBinaryToF32IntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      distanceInterval\n    );\n  },\n  f32_vec2_const: () => {\n    return generateVectorPairToF32IntervalCases(\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      'f32-only',\n      distanceInterval\n    );\n  },\n  f32_vec2_non_const: () => {\n    return generateVectorPairToF32IntervalCases(\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      distanceInterval\n    );\n  },\n  f32_vec3_const: () => {\n    return generateVectorPairToF32IntervalCases(\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      'f32-only',\n      distanceInterval\n    );\n  },\n  f32_vec3_non_const: () => {\n    return generateVectorPairToF32IntervalCases(\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      distanceInterval\n    );\n  },\n  f32_vec4_const: () => {\n    return generateVectorPairToF32IntervalCases(\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      'f32-only',\n      distanceInterval\n    );\n  },\n  f32_vec4_non_const: () => {\n    return generateVectorPairToF32IntervalCases(\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      distanceInterval\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n\ng.test('f32')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(t.params.inputSource === 'const' ? 'f32_const' : 'f32_non_const');\n    await run(t, builtin('distance'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec2_const' : 'f32_vec2_non_const'\n    );\n    await run(\n      t,\n      builtin('distance'),\n      [TypeVec(2, TypeF32), TypeVec(2, TypeF32)],\n      TypeF32,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec3_const' : 'f32_vec3_non_const'\n    );\n    await run(\n      t,\n      builtin('distance'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeF32,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec4_const' : 'f32_vec4_non_const'\n    );\n    await run(\n      t,\n      builtin('distance'),\n      [TypeVec(4, TypeF32), TypeVec(4, TypeF32)],\n      TypeF32,\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .unimplemented();\n"],"mappings":"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"}