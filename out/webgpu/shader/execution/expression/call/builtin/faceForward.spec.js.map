{"version":3,"file":"faceForward.spec.js","names":["description","makeTestGroup","GPUTest","anyOf","f32","TypeF32","TypeVec","Vector","faceForwardIntervals","cartesianProduct","quantizeToF32","sparseVectorF32Range","makeCaseCache","allInputSources","run","builtin","g","makeCaseF32","x","y","z","check","map","x_f32","y_f32","z_f32","results","some","r","undefined","define_results","filter","input","expected","generateCasesF32","xs","ys","zs","e","c","d","f32_vec2_const","f32_vec2_non_const","f32_vec3_const","f32_vec3_non_const","f32_vec4_const","f32_vec4_non_const","test","specURL","desc","params","u","combine","unimplemented","fn","t","cases","get","inputSource"],"sources":["../../../../../../../src/webgpu/shader/execution/expression/call/builtin/faceForward.spec.ts"],"sourcesContent":["export const description = `\nExecution tests for the 'faceForward' builtin function\n\nT is vecN<AbstractFloat>, vecN<f32>, or vecN<f16>\n@const fn faceForward(e1: T ,e2: T ,e3: T ) -> T\nReturns e1 if dot(e2,e3) is negative, and -e1 otherwise.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../../gpu_test.js';\nimport { anyOf } from '../../../../../util/compare.js';\nimport { f32, TypeF32, TypeVec, Vector } from '../../../../../util/conversion.js';\nimport { F32Vector, faceForwardIntervals } from '../../../../../util/f32_interval.js';\nimport { cartesianProduct, quantizeToF32, sparseVectorF32Range } from '../../../../../util/math.js';\nimport { makeCaseCache } from '../../case_cache.js';\nimport { allInputSources, Case, IntervalFilter, run } from '../../expression.js';\n\nimport { builtin } from './builtin.js';\n\nexport const g = makeTestGroup(GPUTest);\n\n// Using a bespoke implementation of make*Case and generate*Cases here\n// since faceForwardIntervals is the only builtin with the API signature\n// (vec, vec, vec) -> vec\n//\n// Additionally faceForward has significant complexities around it due to the\n// fact that `dot` is calculated in it s operation, but the result of dot isn't\n// used to calculate the builtin's result.\n\n/**\n * @returns a Case for `faceForward`\n * @param x the `x` param for the case\n * @param y the `y` param for the case\n * @param z the `z` param for the case\n * @param check what interval checking to apply\n * */\nfunction makeCaseF32(\n  x: number[],\n  y: number[],\n  z: number[],\n  check: IntervalFilter\n): Case | undefined {\n  x = x.map(quantizeToF32);\n  y = y.map(quantizeToF32);\n  z = z.map(quantizeToF32);\n\n  const x_f32 = x.map(f32);\n  const y_f32 = y.map(f32);\n  const z_f32 = z.map(f32);\n\n  const results = faceForwardIntervals(x, y, z);\n  if (check === 'f32-only' && results.some(r => r === undefined)) {\n    return undefined;\n  }\n\n  // Stripping the undefined results, since undefined is used to signal that an OOB\n  // could occur within the calculation that isn't reflected in the result\n  // intervals.\n  const define_results = results.filter((r): r is F32Vector => r !== undefined);\n\n  return {\n    input: [new Vector(x_f32), new Vector(y_f32), new Vector(z_f32)],\n    expected: anyOf(...define_results),\n  };\n}\n\n/**\n * @returns an array of Cases for `faceForward`\n * @param xs array of inputs to try for the `x` param\n * @param ys array of inputs to try for the `y` param\n * @param zs array of inputs to try for the `z` param\n * @param check what interval checking to apply\n */\nfunction generateCasesF32(\n  xs: number[][],\n  ys: number[][],\n  zs: number[][],\n  check: IntervalFilter\n): Case[] {\n  // Cannot use `cartesianProduct` here due to heterogeneous param types\n  return cartesianProduct(xs, ys, zs)\n    .map(e => makeCaseF32(e[0], e[1], e[2], check))\n    .filter((c): c is Case => c !== undefined);\n}\n\nexport const d = makeCaseCache('faceForward', {\n  f32_vec2_const: () => {\n    return generateCasesF32(\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      'f32-only'\n    );\n  },\n  f32_vec2_non_const: () => {\n    return generateCasesF32(\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      sparseVectorF32Range(2),\n      'unfiltered'\n    );\n  },\n  f32_vec3_const: () => {\n    return generateCasesF32(\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      'f32-only'\n    );\n  },\n  f32_vec3_non_const: () => {\n    return generateCasesF32(\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      sparseVectorF32Range(3),\n      'unfiltered'\n    );\n  },\n  f32_vec4_const: () => {\n    return generateCasesF32(\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      'f32-only'\n    );\n  },\n  f32_vec4_non_const: () => {\n    return generateCasesF32(\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      sparseVectorF32Range(4),\n      'unfiltered'\n    );\n  },\n});\n\ng.test('abstract_float')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`abstract float tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n\ng.test('f32_vec2')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec2s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec2_const' : 'f32_vec2_non_const'\n    );\n    await run(\n      t,\n      builtin('faceForward'),\n      [TypeVec(2, TypeF32), TypeVec(2, TypeF32), TypeVec(2, TypeF32)],\n      TypeVec(2, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec3')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec3s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec3_const' : 'f32_vec3_non_const'\n    );\n    await run(\n      t,\n      builtin('faceForward'),\n      [TypeVec(3, TypeF32), TypeVec(3, TypeF32), TypeVec(3, TypeF32)],\n      TypeVec(3, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f32_vec4')\n  .specURL('https://www.w3.org/TR/WGSL/#numeric-builtin-functions')\n  .desc(`f32 tests using vec4s`)\n  .params(u => u.combine('inputSource', allInputSources))\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'f32_vec4_const' : 'f32_vec4_non_const'\n    );\n    await run(\n      t,\n      builtin('faceForward'),\n      [TypeVec(4, TypeF32), TypeVec(4, TypeF32), TypeVec(4, TypeF32)],\n      TypeVec(4, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('f16')\n  .specURL('https://www.w3.org/TR/WGSL/#float-builtin-functions')\n  .desc(`f16 tests`)\n  .params(u => u.combine('inputSource', allInputSources).combine('vectorize', [2, 3, 4] as const))\n  .unimplemented();\n"],"mappings":"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"}