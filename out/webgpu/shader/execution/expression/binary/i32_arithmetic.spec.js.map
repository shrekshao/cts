{"version":3,"file":"i32_arithmetic.spec.js","names":["description","makeTestGroup","GPUTest","kValue","TypeI32","TypeVec","fullI32Range","sparseI32Range","vectorI32Range","makeCaseCache","allInputSources","generateBinaryToI32Cases","generateI32VectorBinaryToVectorCases","generateVectorI32BinaryToVectorCases","run","binary","i32_add","x","y","i32_subtract","i32_multiply","Math","imul","i32_divide_non_const","i32","negative","min","i32_divide_const","undefined","i32_remainder_non_const","i32_remainder_const","g","d","addition","subtraction","multiplication","division_non_const","division_const","remainder_non_const","remainder_const","addition_scalar_vector2","addition_scalar_vector3","addition_scalar_vector4","addition_vector2_scalar","addition_vector3_scalar","addition_vector4_scalar","subtraction_scalar_vector2","subtraction_scalar_vector3","subtraction_scalar_vector4","subtraction_vector2_scalar","subtraction_vector3_scalar","subtraction_vector4_scalar","multiplication_scalar_vector2","multiplication_scalar_vector3","multiplication_scalar_vector4","multiplication_vector2_scalar","multiplication_vector3_scalar","multiplication_vector4_scalar","division_scalar_vector2_non_const","division_scalar_vector3_non_const","division_scalar_vector4_non_const","division_vector2_scalar_non_const","division_vector3_scalar_non_const","division_vector4_scalar_non_const","division_scalar_vector2_const","division_scalar_vector3_const","division_scalar_vector4_const","division_vector2_scalar_const","division_vector3_scalar_const","division_vector4_scalar_const","remainder_scalar_vector2_non_const","remainder_scalar_vector3_non_const","remainder_scalar_vector4_non_const","remainder_vector2_scalar_non_const","remainder_vector3_scalar_non_const","remainder_vector4_scalar_non_const","remainder_scalar_vector2_const","remainder_scalar_vector3_const","remainder_scalar_vector4_const","remainder_vector2_scalar_const","remainder_vector3_scalar_const","remainder_vector4_scalar_const","test","specURL","desc","params","u","combine","fn","t","cases","get","inputSource","vec_size","vectorize_rhs","vec_type","vectorize_lhs","source"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/i32_arithmetic.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the i32 arithmetic binary expression operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { kValue } from '../../../../util/constants.js';\nimport { TypeI32, TypeVec } from '../../../../util/conversion.js';\nimport { fullI32Range, sparseI32Range, vectorI32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport {\n  allInputSources,\n  generateBinaryToI32Cases,\n  generateI32VectorBinaryToVectorCases,\n  generateVectorI32BinaryToVectorCases,\n  run,\n} from '../expression.js';\n\nimport { binary } from './binary.js';\n\nfunction i32_add(x: number, y: number): number | undefined {\n  return x + y;\n}\n\nfunction i32_subtract(x: number, y: number): number | undefined {\n  return x - y;\n}\n\nfunction i32_multiply(x: number, y: number): number | undefined {\n  return Math.imul(x, y);\n}\n\nfunction i32_divide_non_const(x: number, y: number): number | undefined {\n  if (y === 0) {\n    return x;\n  }\n  if (x === kValue.i32.negative.min && y === -1) {\n    return x;\n  }\n  return x / y;\n}\n\nfunction i32_divide_const(x: number, y: number): number | undefined {\n  if (y === 0) {\n    return undefined;\n  }\n  if (x === kValue.i32.negative.min && y === -1) {\n    return undefined;\n  }\n  return x / y;\n}\n\nfunction i32_remainder_non_const(x: number, y: number): number | undefined {\n  if (y === 0) {\n    return 0;\n  }\n  if (x === kValue.i32.negative.min && y === -1) {\n    return 0;\n  }\n  return x % y;\n}\n\nfunction i32_remainder_const(x: number, y: number): number | undefined {\n  if (y === 0) {\n    return undefined;\n  }\n  if (x === kValue.i32.negative.min && y === -1) {\n    return undefined;\n  }\n  return x % y;\n}\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/i32_arithmetic', {\n  addition: () => {\n    return generateBinaryToI32Cases(fullI32Range(), fullI32Range(), i32_add);\n  },\n  subtraction: () => {\n    return generateBinaryToI32Cases(fullI32Range(), fullI32Range(), i32_subtract);\n  },\n  multiplication: () => {\n    return generateBinaryToI32Cases(fullI32Range(), fullI32Range(), i32_multiply);\n  },\n  division_non_const: () => {\n    return generateBinaryToI32Cases(fullI32Range(), fullI32Range(), i32_divide_non_const);\n  },\n  division_const: () => {\n    return generateBinaryToI32Cases(fullI32Range(), fullI32Range(), i32_divide_const);\n  },\n  remainder_non_const: () => {\n    return generateBinaryToI32Cases(fullI32Range(), fullI32Range(), i32_remainder_non_const);\n  },\n  remainder_const: () => {\n    return generateBinaryToI32Cases(fullI32Range(), fullI32Range(), i32_remainder_const);\n  },\n  addition_scalar_vector2: () => {\n    return generateI32VectorBinaryToVectorCases(sparseI32Range(), vectorI32Range(2), i32_add);\n  },\n  addition_scalar_vector3: () => {\n    return generateI32VectorBinaryToVectorCases(sparseI32Range(), vectorI32Range(3), i32_add);\n  },\n  addition_scalar_vector4: () => {\n    return generateI32VectorBinaryToVectorCases(sparseI32Range(), vectorI32Range(4), i32_add);\n  },\n  addition_vector2_scalar: () => {\n    return generateVectorI32BinaryToVectorCases(vectorI32Range(2), sparseI32Range(), i32_add);\n  },\n  addition_vector3_scalar: () => {\n    return generateVectorI32BinaryToVectorCases(vectorI32Range(3), sparseI32Range(), i32_add);\n  },\n  addition_vector4_scalar: () => {\n    return generateVectorI32BinaryToVectorCases(vectorI32Range(4), sparseI32Range(), i32_add);\n  },\n  subtraction_scalar_vector2: () => {\n    return generateI32VectorBinaryToVectorCases(sparseI32Range(), vectorI32Range(2), i32_subtract);\n  },\n  subtraction_scalar_vector3: () => {\n    return generateI32VectorBinaryToVectorCases(sparseI32Range(), vectorI32Range(3), i32_subtract);\n  },\n  subtraction_scalar_vector4: () => {\n    return generateI32VectorBinaryToVectorCases(sparseI32Range(), vectorI32Range(4), i32_subtract);\n  },\n  subtraction_vector2_scalar: () => {\n    return generateVectorI32BinaryToVectorCases(vectorI32Range(2), sparseI32Range(), i32_subtract);\n  },\n  subtraction_vector3_scalar: () => {\n    return generateVectorI32BinaryToVectorCases(vectorI32Range(3), sparseI32Range(), i32_subtract);\n  },\n  subtraction_vector4_scalar: () => {\n    return generateVectorI32BinaryToVectorCases(vectorI32Range(4), sparseI32Range(), i32_subtract);\n  },\n  multiplication_scalar_vector2: () => {\n    return generateI32VectorBinaryToVectorCases(sparseI32Range(), vectorI32Range(2), i32_multiply);\n  },\n  multiplication_scalar_vector3: () => {\n    return generateI32VectorBinaryToVectorCases(sparseI32Range(), vectorI32Range(3), i32_multiply);\n  },\n  multiplication_scalar_vector4: () => {\n    return generateI32VectorBinaryToVectorCases(sparseI32Range(), vectorI32Range(4), i32_multiply);\n  },\n  multiplication_vector2_scalar: () => {\n    return generateVectorI32BinaryToVectorCases(vectorI32Range(2), sparseI32Range(), i32_multiply);\n  },\n  multiplication_vector3_scalar: () => {\n    return generateVectorI32BinaryToVectorCases(vectorI32Range(3), sparseI32Range(), i32_multiply);\n  },\n  multiplication_vector4_scalar: () => {\n    return generateVectorI32BinaryToVectorCases(vectorI32Range(4), sparseI32Range(), i32_multiply);\n  },\n  division_scalar_vector2_non_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(2),\n      i32_divide_non_const\n    );\n  },\n  division_scalar_vector3_non_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(3),\n      i32_divide_non_const\n    );\n  },\n  division_scalar_vector4_non_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(4),\n      i32_divide_non_const\n    );\n  },\n  division_vector2_scalar_non_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(2),\n      sparseI32Range(),\n      i32_divide_non_const\n    );\n  },\n  division_vector3_scalar_non_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(3),\n      sparseI32Range(),\n      i32_divide_non_const\n    );\n  },\n  division_vector4_scalar_non_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(4),\n      sparseI32Range(),\n      i32_divide_non_const\n    );\n  },\n  division_scalar_vector2_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(2),\n      i32_divide_const\n    );\n  },\n  division_scalar_vector3_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(3),\n      i32_divide_const\n    );\n  },\n  division_scalar_vector4_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(4),\n      i32_divide_const\n    );\n  },\n  division_vector2_scalar_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(2),\n      sparseI32Range(),\n      i32_divide_const\n    );\n  },\n  division_vector3_scalar_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(3),\n      sparseI32Range(),\n      i32_divide_const\n    );\n  },\n  division_vector4_scalar_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(4),\n      sparseI32Range(),\n      i32_divide_const\n    );\n  },\n  remainder_scalar_vector2_non_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(2),\n      i32_remainder_non_const\n    );\n  },\n  remainder_scalar_vector3_non_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(3),\n      i32_remainder_non_const\n    );\n  },\n  remainder_scalar_vector4_non_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(4),\n      i32_remainder_non_const\n    );\n  },\n  remainder_vector2_scalar_non_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(2),\n      sparseI32Range(),\n      i32_remainder_non_const\n    );\n  },\n  remainder_vector3_scalar_non_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(3),\n      sparseI32Range(),\n      i32_remainder_non_const\n    );\n  },\n  remainder_vector4_scalar_non_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(4),\n      sparseI32Range(),\n      i32_remainder_non_const\n    );\n  },\n  remainder_scalar_vector2_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(2),\n      i32_remainder_const\n    );\n  },\n  remainder_scalar_vector3_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(3),\n      i32_remainder_const\n    );\n  },\n  remainder_scalar_vector4_const: () => {\n    return generateI32VectorBinaryToVectorCases(\n      sparseI32Range(),\n      vectorI32Range(4),\n      i32_remainder_const\n    );\n  },\n  remainder_vector2_scalar_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(2),\n      sparseI32Range(),\n      i32_remainder_const\n    );\n  },\n  remainder_vector3_scalar_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(3),\n      sparseI32Range(),\n      i32_remainder_const\n    );\n  },\n  remainder_vector4_scalar_const: () => {\n    return generateVectorI32BinaryToVectorCases(\n      vectorI32Range(4),\n      sparseI32Range(),\n      i32_remainder_const\n    );\n  },\n});\n\ng.test('addition')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('addition');\n    await run(t, binary('+'), [TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('subtraction')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x - y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('subtraction');\n    await run(t, binary('-'), [TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('multiplication')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get('multiplication');\n    await run(t, binary('*'), [TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('division')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x / y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'division_const' : 'division_non_const'\n    );\n    await run(t, binary('/'), [TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('remainder')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x % y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'remainder_const' : 'remainder_non_const'\n    );\n    await run(t, binary('%'), [TypeI32, TypeI32], TypeI32, t.params, cases);\n  });\n\ng.test('addition_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x + y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const cases = await d.get(`addition_scalar_vector${vec_size}`);\n    await run(t, binary('+'), [TypeI32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('addition_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x + y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const cases = await d.get(`addition_vector${vec_size}_scalar`);\n    await run(t, binary('+'), [vec_type, TypeI32], vec_type, t.params, cases);\n  });\n\ng.test('subtraction_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x - y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const cases = await d.get(`subtraction_scalar_vector${vec_size}`);\n    await run(t, binary('-'), [TypeI32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('subtraction_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x - y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const cases = await d.get(`subtraction_vector${vec_size}_scalar`);\n    await run(t, binary('-'), [vec_type, TypeI32], vec_type, t.params, cases);\n  });\n\ng.test('multiplication_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x * y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const cases = await d.get(`multiplication_scalar_vector${vec_size}`);\n    await run(t, binary('*'), [TypeI32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('multiplication_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x * y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const cases = await d.get(`multiplication_vector${vec_size}_scalar`);\n    await run(t, binary('*'), [vec_type, TypeI32], vec_type, t.params, cases);\n  });\n\ng.test('division_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x / y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`division_scalar_vector${vec_size}_${source}`);\n    await run(t, binary('/'), [TypeI32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('division_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x / y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`division_vector${vec_size}_scalar_${source}`);\n    await run(t, binary('/'), [vec_type, TypeI32], vec_type, t.params, cases);\n  });\n\ng.test('remainder_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x % y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_rhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_rhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`remainder_scalar_vector${vec_size}_${source}`);\n    await run(t, binary('%'), [TypeI32, vec_type], vec_type, t.params, cases);\n  });\n\ng.test('remainder_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#arithmetic-expr')\n  .desc(\n    `\nExpression: x % y\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize_lhs', [2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const vec_size = t.params.vectorize_lhs;\n    const vec_type = TypeVec(vec_size, TypeI32);\n    const source = t.params.inputSource === 'const' ? 'const' : 'non_const';\n    const cases = await d.get(`remainder_vector${vec_size}_scalar_${source}`);\n    await run(t, binary('%'), [vec_type, TypeI32], vec_type, t.params, cases);\n  });\n"],"mappings":"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"}