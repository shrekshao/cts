{"version":3,"file":"f32_arithmetic.spec.js","names":["description","makeTestGroup","GPUTest","TypeF32","TypeVec","FP","fullF32Range","sparseVectorF32Range","makeCaseCache","allInputSources","run","binary","compoundBinary","additionVectorScalarInterval","v","s","f32","toVector","map","e","additionInterval","additionScalarVectorInterval","subtractionVectorScalarInterval","subtractionInterval","subtractionScalarVectorInterval","multiplicationVectorScalarInterval","multiplicationInterval","multiplicationScalarVectorInterval","divisionVectorScalarInterval","divisionInterval","divisionScalarVectorInterval","remainderVectorScalarInterval","remainderInterval","remainderScalarVectorInterval","g","d","addition_const","generateScalarPairToIntervalCases","addition_non_const","addition_vec2_scalar_const","generateVectorScalarToVectorCases","addition_vec2_scalar_non_const","addition_vec3_scalar_const","addition_vec3_scalar_non_const","addition_vec4_scalar_const","addition_vec4_scalar_non_const","addition_scalar_vec2_const","generateScalarVectorToVectorCases","addition_scalar_vec2_non_const","addition_scalar_vec3_const","addition_scalar_vec3_non_const","addition_scalar_vec4_const","addition_scalar_vec4_non_const","subtraction_const","subtraction_non_const","subtraction_vec2_scalar_const","subtraction_vec2_scalar_non_const","subtraction_vec3_scalar_const","subtraction_vec3_scalar_non_const","subtraction_vec4_scalar_const","subtraction_vec4_scalar_non_const","subtraction_scalar_vec2_const","subtraction_scalar_vec2_non_const","subtraction_scalar_vec3_const","subtraction_scalar_vec3_non_const","subtraction_scalar_vec4_const","subtraction_scalar_vec4_non_const","multiplication_const","multiplication_non_const","multiplication_vec2_scalar_const","multiplication_vec2_scalar_non_const","multiplication_vec3_scalar_const","multiplication_vec3_scalar_non_const","multiplication_vec4_scalar_const","multiplication_vec4_scalar_non_const","multiplication_scalar_vec2_const","multiplication_scalar_vec2_non_const","multiplication_scalar_vec3_const","multiplication_scalar_vec3_non_const","multiplication_scalar_vec4_const","multiplication_scalar_vec4_non_const","division_const","division_non_const","division_vec2_scalar_const","division_vec2_scalar_non_const","division_vec3_scalar_const","division_vec3_scalar_non_const","division_vec4_scalar_const","division_vec4_scalar_non_const","division_scalar_vec2_const","division_scalar_vec2_non_const","division_scalar_vec3_const","division_scalar_vec3_non_const","division_scalar_vec4_const","division_scalar_vec4_non_const","remainder_const","remainder_non_const","remainder_vec2_scalar_const","remainder_vec2_scalar_non_const","remainder_vec3_scalar_const","remainder_vec3_scalar_non_const","remainder_vec4_scalar_const","remainder_vec4_scalar_non_const","remainder_scalar_vec2_const","remainder_scalar_vec2_non_const","remainder_scalar_vec3_const","remainder_scalar_vec3_non_const","remainder_scalar_vec4_const","remainder_scalar_vec4_non_const","test","specURL","desc","params","u","combine","undefined","fn","t","cases","get","inputSource","dim"],"sources":["../../../../../../src/webgpu/shader/execution/expression/binary/f32_arithmetic.spec.ts"],"sourcesContent":["export const description = `\nExecution Tests for the f32 arithmetic binary expression operations\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../../gpu_test.js';\nimport { TypeF32, TypeVec } from '../../../../util/conversion.js';\nimport { FP, FPVector } from '../../../../util/floating_point.js';\nimport { fullF32Range, sparseVectorF32Range } from '../../../../util/math.js';\nimport { makeCaseCache } from '../case_cache.js';\nimport { allInputSources, run } from '../expression.js';\n\nimport { binary, compoundBinary } from './binary.js';\n\n// Utility wrappers around the interval generators for the scalar-vector and\n// vector-scalar tests.\nconst additionVectorScalarInterval = (v: number[], s: number): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.additionInterval(e, s)));\n};\n\nconst additionScalarVectorInterval = (s: number, v: number[]): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.additionInterval(s, e)));\n};\n\nconst subtractionVectorScalarInterval = (v: number[], s: number): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.subtractionInterval(e, s)));\n};\n\nconst subtractionScalarVectorInterval = (s: number, v: number[]): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.subtractionInterval(s, e)));\n};\n\nconst multiplicationVectorScalarInterval = (v: number[], s: number): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.multiplicationInterval(e, s)));\n};\n\nconst multiplicationScalarVectorInterval = (s: number, v: number[]): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.multiplicationInterval(s, e)));\n};\n\nconst divisionVectorScalarInterval = (v: number[], s: number): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.divisionInterval(e, s)));\n};\n\nconst divisionScalarVectorInterval = (s: number, v: number[]): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.divisionInterval(s, e)));\n};\n\nconst remainderVectorScalarInterval = (v: number[], s: number): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.remainderInterval(e, s)));\n};\n\nconst remainderScalarVectorInterval = (s: number, v: number[]): FPVector => {\n  return FP.f32.toVector(v.map(e => FP.f32.remainderInterval(s, e)));\n};\n\nexport const g = makeTestGroup(GPUTest);\n\nexport const d = makeCaseCache('binary/f32_arithmetic', {\n  addition_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'finite',\n      FP.f32.additionInterval\n    );\n  },\n  addition_non_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      FP.f32.additionInterval\n    );\n  },\n  addition_vec2_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'finite',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec2_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec3_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'finite',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec3_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec4_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'finite',\n      additionVectorScalarInterval\n    );\n  },\n  addition_vec4_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      additionVectorScalarInterval\n    );\n  },\n  addition_scalar_vec2_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'finite',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec2_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec3_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'finite',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec3_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec4_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'finite',\n      additionScalarVectorInterval\n    );\n  },\n  addition_scalar_vec4_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      additionScalarVectorInterval\n    );\n  },\n  subtraction_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'finite',\n      FP.f32.subtractionInterval\n    );\n  },\n  subtraction_non_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      FP.f32.subtractionInterval\n    );\n  },\n  subtraction_vec2_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'finite',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec2_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec3_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'finite',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec3_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec4_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'finite',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_vec4_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      subtractionVectorScalarInterval\n    );\n  },\n  subtraction_scalar_vec2_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'finite',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec2_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec3_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'finite',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec3_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec4_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'finite',\n      subtractionScalarVectorInterval\n    );\n  },\n  subtraction_scalar_vec4_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      subtractionScalarVectorInterval\n    );\n  },\n  multiplication_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'finite',\n      FP.f32.multiplicationInterval\n    );\n  },\n  multiplication_non_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      FP.f32.multiplicationInterval\n    );\n  },\n  multiplication_vec2_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'finite',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec2_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec3_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'finite',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec3_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec4_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'finite',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_vec4_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      multiplicationVectorScalarInterval\n    );\n  },\n  multiplication_scalar_vec2_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'finite',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec2_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec3_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'finite',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec3_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec4_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'finite',\n      multiplicationScalarVectorInterval\n    );\n  },\n  multiplication_scalar_vec4_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      multiplicationScalarVectorInterval\n    );\n  },\n  division_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'finite',\n      FP.f32.divisionInterval\n    );\n  },\n  division_non_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      FP.f32.divisionInterval\n    );\n  },\n  division_vec2_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'finite',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec2_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec3_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'finite',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec3_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec4_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'finite',\n      divisionVectorScalarInterval\n    );\n  },\n  division_vec4_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      divisionVectorScalarInterval\n    );\n  },\n  division_scalar_vec2_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'finite',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec2_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec3_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'finite',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec3_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec4_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'finite',\n      divisionScalarVectorInterval\n    );\n  },\n  division_scalar_vec4_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      divisionScalarVectorInterval\n    );\n  },\n  remainder_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'finite',\n      FP.f32.remainderInterval\n    );\n  },\n  remainder_non_const: () => {\n    return FP.f32.generateScalarPairToIntervalCases(\n      fullF32Range(),\n      fullF32Range(),\n      'unfiltered',\n      FP.f32.remainderInterval\n    );\n  },\n  remainder_vec2_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'finite',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec2_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(2),\n      fullF32Range(),\n      'unfiltered',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec3_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'finite',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec3_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(3),\n      fullF32Range(),\n      'unfiltered',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec4_scalar_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'finite',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_vec4_scalar_non_const: () => {\n    return FP.f32.generateVectorScalarToVectorCases(\n      sparseVectorF32Range(4),\n      fullF32Range(),\n      'unfiltered',\n      remainderVectorScalarInterval\n    );\n  },\n  remainder_scalar_vec2_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'finite',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec2_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(2),\n      'unfiltered',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec3_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'finite',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec3_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(3),\n      'unfiltered',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec4_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'finite',\n      remainderScalarVectorInterval\n    );\n  },\n  remainder_scalar_vec4_non_const: () => {\n    return FP.f32.generateScalarVectorToVectorCases(\n      fullF32Range(),\n      sparseVectorF32Range(4),\n      'unfiltered',\n      remainderScalarVectorInterval\n    );\n  },\n});\n\ng.test('addition')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'addition_const' : 'addition_non_const'\n    );\n    await run(t, binary('+'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('addition_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'addition_const' : 'addition_non_const'\n    );\n    await run(t, compoundBinary('+='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('addition_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `addition_vec${dim}_scalar_const`\n        : `addition_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('+'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('addition_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x += y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `addition_vec${dim}_scalar_const`\n        : `addition_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('+='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('addition_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x + y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `addition_scalar_vec${dim}_const`\n        : `addition_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('+'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('subtraction')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x - y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'subtraction_const' : 'subtraction_non_const'\n    );\n    await run(t, binary('-'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('subtraction_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x -= y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'subtraction_const' : 'subtraction_non_const'\n    );\n    await run(t, compoundBinary('-='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('subtraction_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x - y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `subtraction_vec${dim}_scalar_const`\n        : `subtraction_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('-'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('subtraction_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x -= y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `subtraction_vec${dim}_scalar_const`\n        : `subtraction_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('-='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('subtraction_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x - y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `subtraction_scalar_vec${dim}_const`\n        : `subtraction_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('-'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'multiplication_const' : 'multiplication_non_const'\n    );\n    await run(t, binary('*'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('multiplication_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y\nAccuracy: Correctly rounded\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'multiplication_const' : 'multiplication_non_const'\n    );\n    await run(t, compoundBinary('*='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('multiplication_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_vec${dim}_scalar_const`\n        : `multiplication_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x *= y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_vec${dim}_scalar_const`\n        : `multiplication_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('*='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('multiplication_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x * y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `multiplication_scalar_vec${dim}_const`\n        : `multiplication_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('*'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('division')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x / y\nAccuracy: 2.5 ULP for |y| in the range [2^-126, 2^126]\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'division_const' : 'division_non_const'\n    );\n    await run(t, binary('/'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('division_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x /= y\nAccuracy: 2.5 ULP for |y| in the range [2^-126, 2^126]\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'division_const' : 'division_non_const'\n    );\n    await run(t, compoundBinary('/='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('division_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x / y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `division_vec${dim}_scalar_const`\n        : `division_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('/'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('division_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x /= y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `division_vec${dim}_scalar_const`\n        : `division_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('/='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('division_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x / y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `division_scalar_vec${dim}_const`\n        : `division_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('/'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('remainder')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x % y\nAccuracy: Derived from x - y * trunc(x/y)\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'remainder_const' : 'remainder_non_const'\n    );\n    await run(t, binary('%'), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('remainder_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x %= y\nAccuracy: Derived from x - y * trunc(x/y)\n`\n  )\n  .params(u =>\n    u.combine('inputSource', allInputSources).combine('vectorize', [undefined, 2, 3, 4] as const)\n  )\n  .fn(async t => {\n    const cases = await d.get(\n      t.params.inputSource === 'const' ? 'remainder_const' : 'remainder_non_const'\n    );\n    await run(t, compoundBinary('%='), [TypeF32, TypeF32], TypeF32, t.params, cases);\n  });\n\ng.test('remainder_vector_scalar')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x % y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `remainder_vec${dim}_scalar_const`\n        : `remainder_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      binary('%'),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('remainder_vector_scalar_compound')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x %= y, where x is a vector and y is a scalar\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `remainder_vec${dim}_scalar_const`\n        : `remainder_vec${dim}_scalar_non_const`\n    );\n    await run(\n      t,\n      compoundBinary('%='),\n      [TypeVec(dim, TypeF32), TypeF32],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n\ng.test('remainder_scalar_vector')\n  .specURL('https://www.w3.org/TR/WGSL/#floating-point-evaluation')\n  .desc(\n    `\nExpression: x % y, where x is a scalar and y is a vector\nAccuracy: Correctly rounded\n`\n  )\n  .params(u => u.combine('inputSource', allInputSources).combine('dim', [2, 3, 4] as const))\n  .fn(async t => {\n    const dim = t.params.dim;\n    const cases = await d.get(\n      t.params.inputSource === 'const'\n        ? `remainder_scalar_vec${dim}_const`\n        : `remainder_scalar_vec${dim}_non_const`\n    );\n    await run(\n      t,\n      binary('%'),\n      [TypeF32, TypeVec(dim, TypeF32)],\n      TypeVec(dim, TypeF32),\n      t.params,\n      cases\n    );\n  });\n"],"mappings":"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"}