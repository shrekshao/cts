{"version":3,"file":"static_assert.spec.js","names":["description","makeTestGroup","ShaderValidationTest","g","kCases","no_parentheses","code","pass","left_parenthesis_only","right_parenthesis_only","both_parentheses","condition_on_newline","multiline_with_parentheses","invalid_expression","no_condition_no_parentheses","no_condition_with_parentheses","not_a_boolean","test","desc","params","u","combine","Object","keys","beginSubcases","fn","t","c","case","expectCompileResult"],"sources":["../../../../../src/webgpu/shader/validation/parse/static_assert.spec.ts"],"sourcesContent":["export const description = `Parser validation tests for static_assert`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\nconst kCases = {\n  no_parentheses: { code: `static_assert true;`, pass: true },\n  left_parenthesis_only: { code: `static_assert(true;`, pass: false },\n  right_parenthesis_only: { code: `static_assert true);`, pass: false },\n  both_parentheses: { code: `static_assert(true);`, pass: true },\n  condition_on_newline: {\n    code: `static_assert\ntrue;`,\n    pass: true,\n  },\n  multiline_with_parentheses: {\n    code: `static_assert\n(\n  true\n);`,\n    pass: true,\n  },\n  invalid_expression: { code: `static_assert(1!2);`, pass: false },\n  no_condition_no_parentheses: { code: `static_assert;`, pass: false },\n  no_condition_with_parentheses: { code: `static_assert();`, pass: false },\n  not_a_boolean: { code: `static_assert 42;`, pass: false },\n};\n\ng.test('parse')\n  .desc(`Tests that the static_assert statement parses correctly.`)\n  .params(u => u.combine('case', Object.keys(kCases) as Array<keyof typeof kCases>).beginSubcases())\n  .fn(t => {\n    const c = kCases[t.params.case];\n    t.expectCompileResult(c.pass, c.code);\n  });\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI,2CAA0C,CAEtE,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,oBAAoB,QAAQ,8BAA8B;;AAEnE,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,oBAAoB,CAAC;;AAEpD,MAAME,MAAM,GAAG;EACbC,cAAc,EAAE,EAAEC,IAAI,EAAG,qBAAoB,EAAEC,IAAI,EAAE,IAAI,CAAC,CAAC;EAC3DC,qBAAqB,EAAE,EAAEF,IAAI,EAAG,qBAAoB,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACnEE,sBAAsB,EAAE,EAAEH,IAAI,EAAG,sBAAqB,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACrEG,gBAAgB,EAAE,EAAEJ,IAAI,EAAG,sBAAqB,EAAEC,IAAI,EAAE,IAAI,CAAC,CAAC;EAC9DI,oBAAoB,EAAE;IACpBL,IAAI,EAAG;AACX,MAAM;IACFC,IAAI,EAAE;EACR,CAAC;EACDK,0BAA0B,EAAE;IAC1BN,IAAI,EAAG;AACX;AACA;AACA,GAAG;IACCC,IAAI,EAAE;EACR,CAAC;EACDM,kBAAkB,EAAE,EAAEP,IAAI,EAAG,qBAAoB,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EAChEO,2BAA2B,EAAE,EAAER,IAAI,EAAG,gBAAe,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACpEQ,6BAA6B,EAAE,EAAET,IAAI,EAAG,kBAAiB,EAAEC,IAAI,EAAE,KAAK,CAAC,CAAC;EACxES,aAAa,EAAE,EAAEV,IAAI,EAAG,mBAAkB,EAAEC,IAAI,EAAE,KAAK,CAAC;AAC1D,CAAC;;AAEDJ,CAAC,CAACc,IAAI,CAAC,OAAO,CAAC;AACZC,IAAI,CAAE,0DAAyD,CAAC;AAChEC,MAAM,CAAC,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAO,CAAC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACnB,MAAM,CAAC,CAA+B,CAACoB,aAAa,EAAE,CAAC;AACjGC,EAAE,CAAC,CAAAC,CAAC,KAAI;EACP,MAAMC,CAAC,GAAGvB,MAAM,CAACsB,CAAC,CAACP,MAAM,CAACS,IAAI,CAAC;EAC/BF,CAAC,CAACG,mBAAmB,CAACF,CAAC,CAACpB,IAAI,EAAEoB,CAAC,CAACrB,IAAI,CAAC;AACvC,CAAC,CAAC"}