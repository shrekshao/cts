{"version":3,"sources":["../../../../../src/webgpu/shader/validation/parse/source.spec.ts"],"names":["description","makeTestGroup","ShaderValidationTest","g","test","desc","fn","t","code","expectCompileResult"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI,qCAArB,CAEP,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,oBAAT,QAAqC,8BAArC;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,oBAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,cAAP;AACGC,IADH,CACS,qDADT;AAEGC,EAFH,CAEM,CAAAC,CAAC,KAAI;AACP,QAAMC,IAAI,GAAI;AAClB;AACA;AACA;AACA,MAJI;AAKAD,EAAAA,CAAC,CAACE,mBAAF,CAAsB,IAAtB,EAA4BD,IAA5B;AACD,CATH;;AAWAL,CAAC,CAACC,IAAF,CAAO,OAAP;AACGC,IADH,CACS,qDADT;AAEGC,EAFH,CAEM,CAAAC,CAAC,KAAI;AACPA,EAAAA,CAAC,CAACE,mBAAF,CAAsB,IAAtB,EAA4B,EAA5B;AACD,CAJH;;AAMAN,CAAC,CAACC,IAAF,CAAO,gBAAP;AACGC,IADH,CACS,6DADT;AAEGC,EAFH,CAEM,CAAAC,CAAC,KAAI;AACPA,EAAAA,CAAC,CAACE,mBAAF,CAAsB,KAAtB,EAA6B,gBAA7B;AACD,CAJH","sourcesContent":["export const description = `Validation tests for source parsing`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('valid_source')\n  .desc(`Tests that a valid source is consumed successfully.`)\n  .fn(t => {\n    const code = `\n    @fragment\n    fn main() -> @location(0) vec4<f32> {\n      return vec4<f32>(.4, .2, .3, .1);\n    }`;\n    t.expectCompileResult(true, code);\n  });\n\ng.test('empty')\n  .desc(`Test that an empty source is consumed successfully.`)\n  .fn(t => {\n    t.expectCompileResult(true, '');\n  });\n\ng.test('invalid_source')\n  .desc(`Tests that a source which does not match the grammar fails.`)\n  .fn(t => {\n    t.expectCompileResult(false, 'invalid_source');\n  });\n"],"file":"source.spec.js"}