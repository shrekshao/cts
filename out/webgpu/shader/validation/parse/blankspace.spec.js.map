{"version":3,"sources":["../../../../../src/webgpu/shader/validation/parse/blankspace.spec.ts"],"names":["description","makeTestGroup","ShaderValidationTest","g","test","desc","params","u","combine","beginSubcases","fn","t","code","placement","contains_null","expectCompileResult","blankspace"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI,0CAArB,CAEP,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,oBAAT,QAAqC,8BAArC;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,oBAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,iBAAP;AACGC,IADH,CACS,gEADT;AAEGC,MAFH,CAEU,CAAAC,CAAC;AACPA,CAAC;AACEC,OADH,CACW,eADX,EAC4B,CAAC,IAAD,EAAO,KAAP,CAD5B;AAEGA,OAFH,CAEW,WAFX,EAEwB,CAAC,SAAD,EAAY,WAAZ,EAAyB,KAAzB,CAFxB;AAGGC,aAHH,EAHJ;;AAQGC,EARH,CAQM,CAAAC,CAAC,KAAI;AACP,MAAIC,IAAI,GAAG,EAAX;AACA,MAAID,CAAC,CAACL,MAAF,CAASO,SAAT,KAAuB,SAA3B,EAAsC;AACpCD,IAAAA,IAAI,GAAI,gBAAeD,CAAC,CAACL,MAAF,CAASQ,aAAT,GAAyB,IAAzB,GAAgC,GAAI,YAA3D;AACD,GAFD,MAEO,IAAIH,CAAC,CAACL,MAAF,CAASO,SAAT,KAAuB,WAA3B,EAAwC;AAC7CD,IAAAA,IAAI,GAAI,MAAKD,CAAC,CAACL,MAAF,CAASQ,aAAT,GAAyB,IAAzB,GAAgC,GAAI,iBAAjD;AACD,GAFM,MAEA,IAAIH,CAAC,CAACL,MAAF,CAASO,SAAT,KAAuB,KAA3B,EAAkC;AACvCD,IAAAA,IAAI,GAAI,sBAAqBD,CAAC,CAACL,MAAF,CAASQ,aAAT,GAAyB,IAAzB,GAAgC,EAAG,EAAhE;AACD;AACDH,EAAAA,CAAC,CAACI,mBAAF,CAAsB,CAACJ,CAAC,CAACL,MAAF,CAASQ,aAAhC,EAA+CF,IAA/C;AACD,CAlBH;;AAoBAT,CAAC,CAACC,IAAF,CAAO,YAAP;AACGC,IADH,CACS,wDADT;AAEGC,MAFH,CAEU,CAAAC,CAAC;AACPA,CAAC;AACEC,OADH,CACW,YADX,EACyB;AACrB,CAAC,QAAD,EAAW,OAAX,CADqB;AAErB,CAAC,QAAD,EAAW,gBAAX,CAFqB;AAGrB,CAAC,QAAD,EAAW,WAAX,CAHqB;AAIrB,CAAC,QAAD,EAAW,cAAX,CAJqB;AAKrB,CAAC,QAAD,EAAW,WAAX,CALqB;AAMrB,CAAC,QAAD,EAAW,iBAAX,CANqB;AAOrB,CAAC,QAAD,EAAW,WAAX,CAPqB;AAQrB,CAAC,QAAD,EAAW,oBAAX,CARqB;AASrB,CAAC,QAAD,EAAW,oBAAX,CATqB;AAUrB,CAAC,QAAD,EAAW,gBAAX,CAVqB;AAWrB,CAAC,QAAD,EAAW,qBAAX,CAXqB,CADzB;;AAcGC,aAdH,EAHJ;;AAmBGC,EAnBH,CAmBM,CAAAC,CAAC,KAAI;AACP,QAAMC,IAAI,GAAI,MAAKD,CAAC,CAACL,MAAF,CAASU,UAAT,CAAoB,CAApB,CAAuB,kBAA1C;AACAL,EAAAA,CAAC,CAACI,mBAAF,CAAsB,IAAtB,EAA4BH,IAA5B;AACD,CAtBH","sourcesContent":["export const description = `Validation tests for blankspace handling`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { ShaderValidationTest } from '../shader_validation_test.js';\n\nexport const g = makeTestGroup(ShaderValidationTest);\n\ng.test('null_characters')\n  .desc(`Test that WGSL source containing a null character is rejected.`)\n  .params(u =>\n    u\n      .combine('contains_null', [true, false])\n      .combine('placement', ['comment', 'delimiter', 'eol'])\n      .beginSubcases()\n  )\n  .fn(t => {\n    let code = '';\n    if (t.params.placement === 'comment') {\n      code = `// Here is a ${t.params.contains_null ? '\\0' : 'Z'} character`;\n    } else if (t.params.placement === 'delimiter') {\n      code = `let${t.params.contains_null ? '\\0' : ' '}name : i32 = 0;`;\n    } else if (t.params.placement === 'eol') {\n      code = `let name : i32 = 0;${t.params.contains_null ? '\\0' : ''}`;\n    }\n    t.expectCompileResult(!t.params.contains_null, code);\n  });\n\ng.test('blankspace')\n  .desc(`Test that all blankspace characters act as delimiters.`)\n  .params(u =>\n    u\n      .combine('blankspace', [\n        ['\\u0020', 'space'],\n        ['\\u0009', 'horizontal_tab'],\n        ['\\u000a', 'line_feed'],\n        ['\\u000b', 'vertical_tab'],\n        ['\\u000c', 'form_feed'],\n        ['\\u000d', 'carriage_return'],\n        ['\\u0085', 'next_line'],\n        ['\\u200e', 'left_to_right_mark'],\n        ['\\u200f', 'right_to_left_mark'],\n        ['\\u2028', 'line_separator'],\n        ['\\u2029', 'paragraph_separator'],\n      ])\n      .beginSubcases()\n  )\n  .fn(t => {\n    const code = `let${t.params.blankspace[0]}ident : i32 = 0;`;\n    t.expectCompileResult(true, code);\n  });\n"],"file":"blankspace.spec.js"}