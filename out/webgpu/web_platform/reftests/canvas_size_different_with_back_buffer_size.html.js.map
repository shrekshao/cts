{"version":3,"file":"canvas_size_different_with_back_buffer_size.html.js","names":["assert","runRefTest","run","t","red","Uint8Array","green","blue","yellow","pixelBytes","setRowColors","data","offset","colors","i","length","set","updateWebGPUBackBuffer","canvas","ctx","configureSize","pixels","backBufferSize","width","height","configure","device","format","usage","GPUTextureUsage","COPY_DST","size","rows","bytesPerRow","buffer","createBuffer","mappedAtCreation","GPUBufferUsage","COPY_SRC","mapping","getMappedRange","unmap","texture","getCurrentTexture","encoder","createCommandEncoder","copyBufferToTexture","queue","submit","finish","destroy","back_buffer_width","cvs_larger_than_back_buffer","back_buffer_height","getContext","cvs_same_as_back_buffer","undefined","cvs_smaller_than_back_buffer","cvs_change_size_after_configure","cvs_change_size_and_reconfigure","back_buffer_smaller_than_cvs_and_css","cvs_smaller_than_back_buffer_and_css"],"sources":["../../../../src/webgpu/web_platform/reftests/canvas_size_different_with_back_buffer_size.html.ts"],"sourcesContent":["import { assert } from '../../../common/util/util.js';\n\nimport { runRefTest } from './gpu_ref_test.js';\n\n// <canvas> element from html page\ndeclare const cvs_larger_than_back_buffer: HTMLCanvasElement;\ndeclare const cvs_same_as_back_buffer: HTMLCanvasElement;\ndeclare const cvs_smaller_than_back_buffer: HTMLCanvasElement;\ndeclare const cvs_change_size_after_configure: HTMLCanvasElement;\ndeclare const cvs_change_size_and_reconfigure: HTMLCanvasElement;\ndeclare const back_buffer_smaller_than_cvs_and_css: HTMLCanvasElement;\ndeclare const cvs_smaller_than_back_buffer_and_css: HTMLCanvasElement;\n\nexport function run() {\n  runRefTest(async t => {\n    const red = new Uint8Array([0x00, 0x00, 0xff, 0xff]);\n    const green = new Uint8Array([0x00, 0xff, 0x00, 0xff]);\n    const blue = new Uint8Array([0xff, 0x00, 0x00, 0xff]);\n    const yellow = new Uint8Array([0x00, 0xff, 0xff, 0xff]);\n    const pixelBytes = 4;\n\n    function setRowColors(data: Uint8Array, offset: number, colors: Array<Uint8Array>) {\n      for (let i = 0; i < colors.length; ++i) {\n        data.set(colors[i], offset + i * pixelBytes);\n      }\n    }\n\n    function updateWebGPUBackBuffer(\n      canvas: HTMLCanvasElement,\n      ctx: GPUCanvasContext,\n      configureSize: [number, number] | undefined,\n      pixels: Array<Array<Uint8Array>>\n    ) {\n      const backBufferSize = configureSize ?? [canvas.width, canvas.height];\n      ctx.configure({\n        device: t.device,\n        format: 'bgra8unorm',\n        usage: GPUTextureUsage.COPY_DST,\n        size: configureSize,\n      });\n\n      const rows = pixels.length;\n      const bytesPerRow = 256;\n      const buffer = t.device.createBuffer({\n        mappedAtCreation: true,\n        size: rows * bytesPerRow,\n        usage: GPUBufferUsage.COPY_SRC,\n      });\n      const mapping = buffer.getMappedRange();\n      const data = new Uint8Array(mapping);\n\n      for (let i = 0; i < pixels.length; ++i) {\n        setRowColors(data, bytesPerRow * i, pixels[i]);\n      }\n\n      buffer.unmap();\n      const texture = ctx.getCurrentTexture();\n\n      const encoder = t.device.createCommandEncoder();\n      encoder.copyBufferToTexture({ buffer, bytesPerRow }, { texture }, backBufferSize);\n      t.device.queue.submit([encoder.finish()]);\n      buffer.destroy();\n    }\n\n    // Test back buffer smaller than canvas size\n    {\n      const back_buffer_width = cvs_larger_than_back_buffer.width / 2;\n      const back_buffer_height = cvs_larger_than_back_buffer.height / 2;\n      const ctx = cvs_larger_than_back_buffer.getContext('webgpu');\n      assert(ctx !== null);\n\n      updateWebGPUBackBuffer(\n        cvs_larger_than_back_buffer,\n        ctx,\n        [back_buffer_width, back_buffer_height],\n        [\n          [red, red, green],\n          [red, red, green],\n          [blue, blue, yellow],\n          [blue, blue, yellow],\n        ]\n      );\n    }\n\n    // Test back buffer is same as canvas size\n    {\n      const ctx = cvs_same_as_back_buffer.getContext('webgpu');\n      assert(ctx !== null);\n\n      updateWebGPUBackBuffer(cvs_same_as_back_buffer, ctx, undefined, [\n        [red, red, green],\n        [red, red, green],\n        [blue, blue, yellow],\n        [blue, blue, yellow],\n      ]);\n    }\n\n    // Test back buffer is larger than canvas size.\n    {\n      const back_buffer_width = cvs_smaller_than_back_buffer.width * 2;\n      const back_buffer_height = cvs_smaller_than_back_buffer.height * 2;\n      const ctx = cvs_smaller_than_back_buffer.getContext('webgpu');\n      assert(ctx !== null);\n\n      updateWebGPUBackBuffer(\n        cvs_smaller_than_back_buffer,\n        ctx,\n        [back_buffer_width, back_buffer_height],\n        [\n          [red, red, red, red, green, green],\n          [red, red, red, red, green, green],\n          [red, red, red, red, green, green],\n          [red, red, red, red, green, green],\n          [blue, blue, blue, blue, yellow, yellow],\n          [blue, blue, blue, blue, yellow, yellow],\n          [blue, blue, blue, blue, yellow, yellow],\n          [blue, blue, blue, blue, yellow, yellow],\n        ]\n      );\n    }\n\n    // Test js change canvas size after back buffer has been configured\n    {\n      const back_buffer_width = cvs_change_size_after_configure.width;\n      const back_buffer_height = cvs_change_size_after_configure.height;\n      const ctx = cvs_change_size_after_configure.getContext('webgpu');\n      assert(ctx !== null);\n\n      updateWebGPUBackBuffer(\n        cvs_change_size_after_configure,\n        ctx,\n        [back_buffer_width, back_buffer_height],\n        [\n          [red, red, green],\n          [red, red, green],\n          [blue, blue, yellow],\n          [blue, blue, yellow],\n        ]\n      );\n\n      cvs_change_size_after_configure.width = 6;\n      cvs_change_size_after_configure.height = 8;\n    }\n\n    // Test js change canvas size after back buffer has been configured\n    // and back buffer configure again.\n    {\n      const ctx = cvs_change_size_and_reconfigure.getContext('webgpu');\n      assert(ctx !== null);\n\n      updateWebGPUBackBuffer(cvs_change_size_and_reconfigure, ctx, undefined, [\n        [red, red, green],\n        [red, red, green],\n        [blue, blue, yellow],\n        [blue, blue, yellow],\n      ]);\n\n      cvs_change_size_and_reconfigure.width = 6;\n      cvs_change_size_and_reconfigure.height = 8;\n\n      updateWebGPUBackBuffer(cvs_change_size_and_reconfigure, ctx, undefined, [\n        [red, red, red, red, green, green],\n        [red, red, red, red, green, green],\n        [red, red, red, red, green, green],\n        [red, red, red, red, green, green],\n        [blue, blue, blue, blue, yellow, yellow],\n        [blue, blue, blue, blue, yellow, yellow],\n        [blue, blue, blue, blue, yellow, yellow],\n        [blue, blue, blue, blue, yellow, yellow],\n      ]);\n    }\n\n    // Test back buffer size < canvas size < CSS size\n    {\n      const back_buffer_width = back_buffer_smaller_than_cvs_and_css.width / 2;\n      const back_buffer_height = back_buffer_smaller_than_cvs_and_css.height / 2;\n      const ctx = back_buffer_smaller_than_cvs_and_css.getContext('webgpu');\n      assert(ctx !== null);\n\n      updateWebGPUBackBuffer(\n        back_buffer_smaller_than_cvs_and_css,\n        ctx,\n        [back_buffer_width, back_buffer_height],\n        [\n          [red, red, green],\n          [red, red, green],\n          [blue, blue, yellow],\n          [blue, blue, yellow],\n        ]\n      );\n    }\n\n    // Test canvas size < back buffer size < CSS size\n    {\n      const back_buffer_width = cvs_smaller_than_back_buffer_and_css.width * 2;\n      const back_buffer_height = cvs_smaller_than_back_buffer_and_css.height * 2;\n      const ctx = cvs_smaller_than_back_buffer_and_css.getContext('webgpu');\n      assert(ctx !== null);\n\n      updateWebGPUBackBuffer(\n        cvs_smaller_than_back_buffer_and_css,\n        ctx,\n        [back_buffer_width, back_buffer_height],\n        [\n          [red, red, red, red, green, green],\n          [red, red, green, red, green, green],\n          [red, red, red, red, green, green],\n          [red, red, red, red, green, green],\n          [blue, blue, blue, blue, yellow, yellow],\n          [blue, blue, blue, blue, yellow, yellow],\n          [blue, blue, blue, blue, yellow, yellow],\n          [blue, blue, blue, blue, yellow, yellow],\n        ]\n      );\n    }\n  });\n}\n"],"mappings":"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"}