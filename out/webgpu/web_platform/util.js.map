{"version":3,"sources":["../../../src/webgpu/web_platform/util.ts"],"names":["ErrorWithExtra","raceWithRejectOnTimeout","startPlayingAndWaitForVideo","video","callback","Promise","resolve","reject","callbackAndResolve","ex","error","message","addEventListener","event","requestVideoFrameCallback","timeWatcher","currentTime","requestAnimationFrame","loop","muted","preload","play","catch"],"mappings":";AAAA;AACA,GADA,SAASA,cAAT,EAAyBC,uBAAzB,QAAwD,2BAAxD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,2BAAT;AACLC,KADK;AAELC,QAFK;AAGU;AACf,SAAOH,uBAAuB;AAC5B,MAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,UAAMC,kBAAkB,GAAG,YAAY;AACrC,UAAI;AACF,cAAMJ,QAAQ,EAAd;AACAE,QAAAA,OAAO;AACR,OAHD,CAGE,OAAOG,EAAP,EAAW;AACXF,QAAAA,MAAM;AACP;AACF,KAPD;;AASA,QAAIJ,KAAK,CAACO,KAAV,EAAiB;AACfH,MAAAA,MAAM;AACJ,UAAIP,cAAJ,CAAmB,kBAAkBG,KAAK,CAACO,KAAN,CAAYC,OAAjD,EAA0D,OAAO,EAAED,KAAK,EAAEP,KAAK,CAACO,KAAf,EAAP,CAA1D,CADI,CAAN;;AAGA;AACD;;AAEDP,IAAAA,KAAK,CAACS,gBAAN;AACE,WADF;AAEEC,IAAAA,KAAK,IAAIN,MAAM,CAAC,IAAIP,cAAJ,CAAmB,8BAAnB,EAAmD,OAAO,EAAEa,KAAF,EAAP,CAAnD,CAAD,CAFjB;AAGE,QAHF;;;AAMA,QAAI,+BAA+BV,KAAnC,EAA0C;;AAEvCA,MAAAA,KAAD,CAAeW,yBAAf,CAAyC,MAAM;AAC7CN,QAAAA,kBAAkB;AACnB,OAFD;AAGD,KALD,MAKO;AACL;AACA,YAAMO,WAAW,GAAG,MAAM;AACxB,YAAIZ,KAAK,CAACa,WAAN,GAAoB,CAAxB,EAA2B;AACzBR,UAAAA,kBAAkB;AACnB,SAFD,MAEO;AACLS,UAAAA,qBAAqB,CAACF,WAAD,CAArB;AACD;AACF,OAND;AAOAA,MAAAA,WAAW;AACZ;;AAEDZ,IAAAA,KAAK,CAACe,IAAN,GAAa,IAAb;AACAf,IAAAA,KAAK,CAACgB,KAAN,GAAc,IAAd;AACAhB,IAAAA,KAAK,CAACiB,OAAN,GAAgB,MAAhB;AACAjB,IAAAA,KAAK,CAACkB,IAAN,GAAaC,KAAb,CAAmBf,MAAnB;AACD,GA5CD,CAD4B;AA8C5B,MA9C4B;AA+C5B,4BA/C4B,CAA9B;;AAiDD","sourcesContent":["import { ErrorWithExtra, raceWithRejectOnTimeout } from '../../common/util/util.js';\n\n/**\n * Starts playing a video and waits for it to be consumable.\n * Promise resolves after the callback has been called.\n *\n * @param video An HTML5 Video element.\n * @param callback Function to call when video is ready.\n *\n * Copied from https://github.com/KhronosGroup/WebGL/blob/main/sdk/tests/js/webgl-test-utils.js\n */\nexport function startPlayingAndWaitForVideo(\n  video: HTMLVideoElement,\n  callback: () => unknown\n): Promise<void> {\n  return raceWithRejectOnTimeout(\n    new Promise((resolve, reject) => {\n      const callbackAndResolve = async () => {\n        try {\n          await callback();\n          resolve();\n        } catch (ex) {\n          reject();\n        }\n      };\n\n      if (video.error) {\n        reject(\n          new ErrorWithExtra('Video.error: ' + video.error.message, () => ({ error: video.error }))\n        );\n        return;\n      }\n\n      video.addEventListener(\n        'error',\n        event => reject(new ErrorWithExtra('Video received \"error\" event', () => ({ event }))),\n        true\n      );\n\n      if ('requestVideoFrameCallback' in video) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        (video as any).requestVideoFrameCallback(() => {\n          callbackAndResolve();\n        });\n      } else {\n        // If requestVideoFrameCallback isn't available, check each frame if the video has advanced.\n        const timeWatcher = () => {\n          if (video.currentTime > 0) {\n            callbackAndResolve();\n          } else {\n            requestAnimationFrame(timeWatcher);\n          }\n        };\n        timeWatcher();\n      }\n\n      video.loop = true;\n      video.muted = true;\n      video.preload = 'auto';\n      video.play().catch(reject);\n    }),\n    2000,\n    'Video never became ready'\n  );\n}\n"],"file":"util.js"}