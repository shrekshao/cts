{"version":3,"sources":["../../../../../src/webgpu/api/validation/queue/submit.spec.ts"],"names":["description","makeTestGroup","ValidationTest","g","test","desc","paramsSubcasesOnly","cb0Mismatched","cb1Mismatched","beforeAllSubcases","t","selectMismatchedDeviceOrSkipTestCase","undefined","fn","params","mismatched","encoder0","mismatchedDevice","createCommandEncoder","device","cb0","finish","encoder1","cb1","expectValidationError","queue","submit"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA,CALO,CAOP,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,cAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,gCAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA,KAPA;;AASGC,kBATH,CASsB;AAClB,EAAEC,aAAa,EAAE,KAAjB,EAAwBC,aAAa,EAAE,KAAvC,EADkB,EAC8B;AAChD,EAAED,aAAa,EAAE,IAAjB,EAAuBC,aAAa,EAAE,KAAtC,EAFkB;AAGlB,EAAED,aAAa,EAAE,KAAjB,EAAwBC,aAAa,EAAE,IAAvC,EAHkB,CATtB;;AAcGC,iBAdH,CAcqB,CAAAC,CAAC,KAAI;AACtBA,EAAAA,CAAC,CAACC,oCAAF,CAAuCC,SAAvC;AACD,CAhBH;AAiBGC,EAjBH,CAiBM,OAAMH,CAAN,KAAW;AACb,QAAM,EAAEH,aAAF,EAAiBC,aAAjB,KAAmCE,CAAC,CAACI,MAA3C;AACA,QAAMC,UAAU,GAAGR,aAAa,IAAIC,aAApC;;AAEA,QAAMQ,QAAQ,GAAGT,aAAa;AAC1BG,EAAAA,CAAC,CAACO,gBAAF,CAAmBC,oBAAnB,EAD0B;AAE1BR,EAAAA,CAAC,CAACS,MAAF,CAASD,oBAAT,EAFJ;AAGA,QAAME,GAAG,GAAGJ,QAAQ,CAACK,MAAT,EAAZ;;AAEA,QAAMC,QAAQ,GAAGd,aAAa;AAC1BE,EAAAA,CAAC,CAACO,gBAAF,CAAmBC,oBAAnB,EAD0B;AAE1BR,EAAAA,CAAC,CAACS,MAAF,CAASD,oBAAT,EAFJ;AAGA,QAAMK,GAAG,GAAGD,QAAQ,CAACD,MAAT,EAAZ;;AAEAX,EAAAA,CAAC,CAACc,qBAAF,CAAwB,MAAM;AAC5Bd,IAAAA,CAAC,CAACS,MAAF,CAASM,KAAT,CAAeC,MAAf,CAAsB,CAACN,GAAD,EAAMG,GAAN,CAAtB;AACD,GAFD,EAEGR,UAFH;AAGD,CAlCH","sourcesContent":["export const description = `\nTests submit validation.\n\nNote: destroyed buffer/texture/querySet are tested in destroyed/. (unless it gets moved here)\nNote: buffer map state is tested in ./buffer_mapped.spec.ts.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('command_buffer,device_mismatch')\n  .desc(\n    `\n    Tests submit cannot be called with command buffers created from another device\n    Test with two command buffers to make sure all command buffers can be validated:\n    - cb0 and cb1 from same device\n    - cb0 and cb1 from different device\n    `\n  )\n  .paramsSubcasesOnly([\n    { cb0Mismatched: false, cb1Mismatched: false }, // control case\n    { cb0Mismatched: true, cb1Mismatched: false },\n    { cb0Mismatched: false, cb1Mismatched: true },\n  ])\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(async t => {\n    const { cb0Mismatched, cb1Mismatched } = t.params;\n    const mismatched = cb0Mismatched || cb1Mismatched;\n\n    const encoder0 = cb0Mismatched\n      ? t.mismatchedDevice.createCommandEncoder()\n      : t.device.createCommandEncoder();\n    const cb0 = encoder0.finish();\n\n    const encoder1 = cb1Mismatched\n      ? t.mismatchedDevice.createCommandEncoder()\n      : t.device.createCommandEncoder();\n    const cb1 = encoder1.finish();\n\n    t.expectValidationError(() => {\n      t.device.queue.submit([cb0, cb1]);\n    }, mismatched);\n  });\n"],"file":"submit.spec.js"}