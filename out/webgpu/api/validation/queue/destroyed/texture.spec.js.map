{"version":3,"file":"texture.spec.js","names":["description","makeTestGroup","ValidationTest","g","test","desc","paramsSubcasesOnly","u","combine","fn","t","destroyed","params","texture","trackForCleanup","device","createTexture","size","format","usage","GPUTextureUsage","COPY_DST","destroy","expectValidationError","queue","writeTexture","Uint8Array","bytesPerRow","src","COPY_SRC","dst","encoder","createCommandEncoder","copyTextureToTexture","commandBuffer","finish","shouldError","submit","buffer","createBuffer","GPUBufferUsage","copyBufferToTexture","copyTextureToBuffer"],"sources":["../../../../../../src/webgpu/api/validation/queue/destroyed/texture.spec.ts"],"sourcesContent":["export const description = `\nTests using a destroyed texture on a queue.\n\nTODO:\n- test renderPass/computePass (setBindGroup)\n- test beginRenderPass target\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('writeTexture')\n  .desc(\n    `\nTests that using a destroyed texture in writeTexture fails.\n- x= {destroyed, not destroyed (control case)}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const texture = t.trackForCleanup(\n      t.device.createTexture({\n        size: [1, 1, 1],\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.COPY_DST,\n      })\n    );\n\n    if (destroyed) {\n      texture.destroy();\n    }\n\n    t.expectValidationError(\n      () => t.queue.writeTexture({ texture }, new Uint8Array(4), { bytesPerRow: 4 }, [1, 1, 1]),\n      destroyed\n    );\n  });\n\ng.test('copyTextureToTexture')\n  .desc(\n    `\nTests that using a destroyed texture in copyTextureToTexture fails.\n- x= {not destroyed (control case), src destroyed, dst destroyed}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', ['none', 'src', 'dst', 'both'] as const))\n  .fn(t => {\n    const src = t.trackForCleanup(\n      t.device.createTexture({\n        size: [1, 1, 1],\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.COPY_SRC,\n      })\n    );\n    const dst = t.trackForCleanup(\n      t.device.createTexture({\n        size: [1, 1, 1],\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.COPY_DST,\n      })\n    );\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyTextureToTexture({ texture: src }, { texture: dst }, [1, 1, 1]);\n    const commandBuffer = encoder.finish();\n\n    let shouldError = true;\n    switch (t.params.destroyed) {\n      case 'none':\n        shouldError = false;\n        break;\n      case 'src':\n        src.destroy();\n        break;\n      case 'dst':\n        dst.destroy();\n        break;\n      case 'both':\n        src.destroy();\n        dst.destroy();\n        break;\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, shouldError);\n  });\n\ng.test('copyBufferToTexture')\n  .desc(\n    `\nTests that using a destroyed texture in copyBufferToTexture fails.\n- x= {not destroyed (control case), dst destroyed}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const buffer = t.trackForCleanup(\n      t.device.createBuffer({ size: 4, usage: GPUBufferUsage.COPY_SRC })\n    );\n    const texture = t.trackForCleanup(\n      t.device.createTexture({\n        size: [1, 1, 1],\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.COPY_DST,\n      })\n    );\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyBufferToTexture({ buffer }, { texture }, [1, 1, 1]);\n    const commandBuffer = encoder.finish();\n\n    if (destroyed) {\n      texture.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n\ng.test('copyTextureToBuffer')\n  .desc(\n    `\nTests that using a destroyed texture in copyTextureToBuffer fails.\n- x= {not destroyed (control case), src destroyed}\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('destroyed', [false, true] as const))\n  .fn(t => {\n    const { destroyed } = t.params;\n    const texture = t.trackForCleanup(\n      t.device.createTexture({\n        size: [1, 1, 1],\n        format: 'rgba8unorm',\n        usage: GPUTextureUsage.COPY_SRC,\n      })\n    );\n    const buffer = t.trackForCleanup(\n      t.device.createBuffer({ size: 4, usage: GPUBufferUsage.COPY_DST })\n    );\n\n    const encoder = t.device.createCommandEncoder();\n    encoder.copyTextureToBuffer({ texture }, { buffer }, [1, 1, 1]);\n    const commandBuffer = encoder.finish();\n\n    if (destroyed) {\n      texture.destroy();\n    }\n\n    t.expectValidationError(() => {\n      t.queue.submit([commandBuffer]);\n    }, destroyed);\n  });\n"],"mappings":"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"}