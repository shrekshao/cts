{"version":3,"sources":["../../../../src/webgpu/api/validation/createSampler.spec.ts"],"names":["description","makeTestGroup","ValidationTest","g","test","desc","paramsSubcasesOnly","u","combine","fn","t","expectValidationError","device","createSampler","lodMinClamp","params","lodMaxClamp","beginSubcases","combineWithParams","undefined","minFilter","magFilter","mipmapFilter","maxAnisotropy"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,yCAA9B;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,cAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,mBAAP;AACGC,IADH,CACQ,yDADR;AAEGC,kBAFH,CAEsB,CAAAC,CAAC;AACnBA,CAAC,CAAC;AAAD,CACEC,OADH,CACW,aADX,EAC0B,CAAC,CAAC,KAAF,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,CAArB,EAAwB,EAAxB,EAA4B,IAA5B,CAD1B;AAEGA,OAFH,CAEW,aAFX,EAE0B,CAAC,CAAC,KAAF,EAAS,CAAC,CAAV,EAAa,CAAb,EAAgB,GAAhB,EAAqB,CAArB,EAAwB,EAAxB,EAA4B,IAA5B,CAF1B,CAHJ;;AAOGC,EAPH,CAOM,MAAMC,CAAN,IAAW;AACbA,EAAAA,CAAC,CAACC,qBAAF,CAAwB,MAAM;AAC5BD,IAAAA,CAAC,CAACE,MAAF,CAASC,aAAT,CAAuB;AACrBC,MAAAA,WAAW,EAAEJ,CAAC,CAACK,MAAF,CAASD,WADD;AAErBE,MAAAA,WAAW,EAAEN,CAAC,CAACK,MAAF,CAASC,WAFD,EAAvB;;AAID,GALD,EAKGN,CAAC,CAACK,MAAF,CAASD,WAAT,GAAuBJ,CAAC,CAACK,MAAF,CAASC,WAAhC,IAA+CN,CAAC,CAACK,MAAF,CAASD,WAAT,GAAuB,CAAtE,IAA2EJ,CAAC,CAACK,MAAF,CAASC,WAAT,GAAuB,CALrG;AAMD,CAdH;;AAgBAb,CAAC,CAACC,IAAF,CAAO,eAAP;AACGC,IADH,CACQ,gFADR;AAEGU,MAFH,CAEU,CAAAR,CAAC;AACPA,CAAC,CAAC;AAAD,CACEU,aADH;AAEGC,iBAFH,CAEqB;AACjB,GAAGX,CAAC,CAACC,OAAF,CAAU,eAAV,EAA2B,CAAC,CAAC,CAAF,EAAKW,SAAL,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,IAA3C,CAA3B,CADc;AAEjB,EAAEC,SAAS,EAAE,SAAb,EAFiB;AAGjB,EAAEC,SAAS,EAAE,SAAb,EAHiB;AAIjB,EAAEC,YAAY,EAAE,SAAhB,EAJiB,CAFrB,CAHJ;;;AAYGb,EAZH,CAYM,MAAMC,CAAN,IAAW;AACb,QAAM;AACJa,IAAAA,aAAa,GAAG,CADZ;AAEJH,IAAAA,SAAS,GAAG,QAFR;AAGJC,IAAAA,SAAS,GAAG,QAHR;AAIJC,IAAAA,YAAY,GAAG,QAJX;AAKFZ,EAAAA,CAAC,CAACK,MALN;;;;;;AAWAL,EAAAA,CAAC,CAACC,qBAAF,CAAwB,MAAM;AAC5BD,IAAAA,CAAC,CAACE,MAAF,CAASC,aAAT,CAAuB;AACrBO,MAAAA,SADqB;AAErBC,MAAAA,SAFqB;AAGrBC,MAAAA,YAHqB;AAIrBC,MAAAA,aAJqB,EAAvB;;AAMD,GAPD,EAOGA,aAAa,GAAG,CAAhB,IAAsBA,aAAa,GAAG,CAAhB,IAAqB,EAAEH,SAAS,KAAK,QAAd,IAA0BC,SAAS,KAAK,QAAxC,IAAoDC,YAAY,KAAK,QAAvE,CAP9C;AAQD,CAhCH","sourcesContent":["export const description = `\ncreateSampler validation tests.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('lodMinAndMaxClamp')\n  .desc('test different combinations of min and max clamp values')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('lodMinClamp', [-4e-30, -1, 0, 0.5, 1, 10, 4e30])\n      .combine('lodMaxClamp', [-4e-30, -1, 0, 0.5, 1, 10, 4e30])\n  )\n  .fn(async t => {\n    t.expectValidationError(() => {\n      t.device.createSampler({\n        lodMinClamp: t.params.lodMinClamp,\n        lodMaxClamp: t.params.lodMaxClamp,\n      });\n    }, t.params.lodMinClamp > t.params.lodMaxClamp || t.params.lodMinClamp < 0 || t.params.lodMaxClamp < 0);\n  });\n\ng.test('maxAnisotropy')\n  .desc('test different maxAnisotropy values and combinations with min/mag/mipmapFilter')\n  .params(u =>\n    u //\n      .beginSubcases()\n      .combineWithParams([\n        ...u.combine('maxAnisotropy', [-1, undefined, 0, 1, 2, 4, 7, 16, 32, 33, 1024]),\n        { minFilter: 'nearest' as const },\n        { magFilter: 'nearest' as const },\n        { mipmapFilter: 'nearest' as const },\n      ])\n  )\n  .fn(async t => {\n    const {\n      maxAnisotropy = 1,\n      minFilter = 'linear',\n      magFilter = 'linear',\n      mipmapFilter = 'linear',\n    } = t.params as {\n      maxAnisotropy?: number;\n      minFilter?: GPUFilterMode;\n      magFilter?: GPUFilterMode;\n      mipmapFilter?: GPUFilterMode;\n    };\n    t.expectValidationError(() => {\n      t.device.createSampler({\n        minFilter,\n        magFilter,\n        mipmapFilter,\n        maxAnisotropy,\n      });\n    }, maxAnisotropy < 1 || (maxAnisotropy > 1 && !(minFilter === 'linear' && magFilter === 'linear' && mipmapFilter === 'linear')));\n  });\n"],"file":"createSampler.spec.js"}