{"version":3,"file":"destroy.spec.js","names":["description","makeTestGroup","kTextureAspects","kTextureFormatInfo","ValidationTest","g","test","desc","fn","t","texture","getSampledTexture","destroy","params","u","combine","colorTextureState","depthStencilTextureAspect","depthStencilTextureState","isSubmitSuccess","colorTextureFormat","depthStencilTextureFormat","colorTextureDesc","size","width","height","depthOrArrayLayers","format","usage","GPUTextureUsage","COPY_DST","RENDER_ATTACHMENT","depthStencilTextureDesc","colorTexture","device","createTexture","depthStencilTexture","commandEncoder","createCommandEncoder","depthStencilAttachment","view","createView","aspect","depth","depthClearValue","depthLoadOp","depthStoreOp","stencil","stencilClearValue","stencilLoadOp","stencilStoreOp","renderPass","beginRenderPass","colorAttachments","clearValue","loadOp","storeOp","end","cmd","finish","expectValidationError","queue","submit"],"sources":["../../../../../src/webgpu/api/validation/texture/destroy.spec.ts"],"sourcesContent":["export const description = `\nDestroying a texture more than once is allowed.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { kTextureAspects, kTextureFormatInfo } from '../../../capability_info.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('base')\n  .desc(`Test that it is valid to destroy a texture.`)\n  .fn(t => {\n    const texture = t.getSampledTexture();\n    texture.destroy();\n  });\n\ng.test('twice')\n  .desc(`Test that it is valid to destroy a destroyed texture.`)\n  .fn(t => {\n    const texture = t.getSampledTexture();\n    texture.destroy();\n    texture.destroy();\n  });\n\ng.test('submit_a_destroyed_texture_as_attachment')\n  .desc(\n    `\nTest that it is invalid to submit with a texture as {color, depth, stencil, depth-stencil} attachment\nthat was destroyed {before, after} encoding finishes.\n`\n  )\n  .params(u =>\n    u //\n      .combine('depthStencilTextureAspect', kTextureAspects)\n      .combine('colorTextureState', [\n        'valid',\n        'destroyedBeforeEncode',\n        'destroyedAfterEncode',\n      ] as const)\n      .combine('depthStencilTextureState', [\n        'valid',\n        'destroyedBeforeEncode',\n        'destroyedAfterEncode',\n      ] as const)\n  )\n  .fn(async t => {\n    const { colorTextureState, depthStencilTextureAspect, depthStencilTextureState } = t.params;\n\n    const isSubmitSuccess = colorTextureState === 'valid' && depthStencilTextureState === 'valid';\n\n    const colorTextureFormat: GPUTextureFormat = 'rgba32float';\n    const depthStencilTextureFormat: GPUTextureFormat =\n      depthStencilTextureAspect === 'all'\n        ? 'depth24plus-stencil8'\n        : depthStencilTextureAspect === 'depth-only'\n        ? 'depth32float'\n        : 'stencil8';\n\n    const colorTextureDesc: GPUTextureDescriptor = {\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: colorTextureFormat,\n      usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,\n    };\n\n    const depthStencilTextureDesc: GPUTextureDescriptor = {\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      format: depthStencilTextureFormat,\n      usage: GPUTextureUsage.COPY_DST | GPUTextureUsage.RENDER_ATTACHMENT,\n    };\n\n    const colorTexture = t.device.createTexture(colorTextureDesc);\n    const depthStencilTexture = t.device.createTexture(depthStencilTextureDesc);\n\n    if (colorTextureState === 'destroyedBeforeEncode') {\n      colorTexture.destroy();\n    }\n    if (depthStencilTextureState === 'destroyedBeforeEncode') {\n      depthStencilTexture.destroy();\n    }\n\n    const commandEncoder = t.device.createCommandEncoder();\n    const depthStencilAttachment: GPURenderPassDepthStencilAttachment = {\n      view: depthStencilTexture.createView({ aspect: depthStencilTextureAspect }),\n    };\n    if (kTextureFormatInfo[depthStencilTextureFormat].depth) {\n      depthStencilAttachment.depthClearValue = 0;\n      depthStencilAttachment.depthLoadOp = 'clear';\n      depthStencilAttachment.depthStoreOp = 'discard';\n    }\n    if (kTextureFormatInfo[depthStencilTextureFormat].stencil) {\n      depthStencilAttachment.stencilClearValue = 0;\n      depthStencilAttachment.stencilLoadOp = 'clear';\n      depthStencilAttachment.stencilStoreOp = 'discard';\n    }\n    const renderPass = commandEncoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: colorTexture.createView(),\n          clearValue: [0, 0, 0, 0],\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n      depthStencilAttachment,\n    });\n    renderPass.end();\n\n    const cmd = commandEncoder.finish();\n\n    if (colorTextureState === 'destroyedAfterEncode') {\n      colorTexture.destroy();\n    }\n    if (depthStencilTextureState === 'destroyedAfterEncode') {\n      depthStencilTexture.destroy();\n    }\n\n    t.expectValidationError(() => t.queue.submit([cmd]), !isSubmitSuccess);\n  });\n"],"mappings":"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"}