{"version":3,"file":"maxStorageBufferBindingSize.spec.js","names":["keysOf","align","roundDown","kLimitBaseParams","makeLimitTestGroup","kLimitValueTestKeys","BufferParts","wholeBuffer","biggerBufferWithOffset","kBufferPartsKeys","getSizeAndOffsetForBufferPart","device","bufferPart","size","limits","minUniformBufferOffsetAlignment","offset","kStorageBufferRequiredSizeAlignment","getDeviceLimitToRequest","limitValueTest","defaultLimit","maximumLimit","Math","floor","getTestValue","testValueName","requestedLimit","getDeviceLimitToRequestAndValueToTest","testValue","limit","g","description","test","desc","params","combine","fn","t","limitTest","adapter","getAdapterAndLimits","testDeviceWithSpecificLimits","shouldError","bindGroupLayout","createBindGroupLayout","entries","binding","visibility","GPUShaderStage","COMPUTE","buffer","type","pushErrorScope","storageBuffer","trackForCleanup","createBuffer","usage","GPUBufferUsage","STORAGE","outOfMemoryError","popErrorScope","expectValidationError","createBindGroup","layout","resource","u","actualLimit","expect","maxBufferSize"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/limits/maxStorageBufferBindingSize.spec.ts"],"sourcesContent":["import { keysOf } from '../../../../../common/util/data_tables.js';\nimport { align, roundDown } from '../../../../util/math.js';\n\nimport {\n  kLimitBaseParams,\n  makeLimitTestGroup,\n  LimitValueTest,\n  TestValue,\n  kLimitValueTestKeys,\n} from './limit_utils.js';\n\nconst BufferParts = {\n  wholeBuffer: true,\n  biggerBufferWithOffset: true,\n};\ntype BufferPart = keyof typeof BufferParts;\nconst kBufferPartsKeys = keysOf(BufferParts);\n\nfunction getSizeAndOffsetForBufferPart(device: GPUDevice, bufferPart: BufferPart, size: number) {\n  const align = device.limits.minUniformBufferOffsetAlignment;\n  switch (bufferPart) {\n    case 'wholeBuffer':\n      return { size, offset: 0 };\n    case 'biggerBufferWithOffset':\n      return { size: size + align, offset: align };\n  }\n}\n\nconst kStorageBufferRequiredSizeAlignment = 4;\n\nfunction getDeviceLimitToRequest(\n  limitValueTest: LimitValueTest,\n  defaultLimit: number,\n  maximumLimit: number\n) {\n  switch (limitValueTest) {\n    case 'atDefault':\n      return defaultLimit;\n    case 'underDefault':\n      return defaultLimit - kStorageBufferRequiredSizeAlignment;\n    case 'betweenDefaultAndMaximum':\n      return Math.floor((defaultLimit + maximumLimit) / 2);\n    case 'atMaximum':\n      return maximumLimit;\n    case 'overMaximum':\n      return maximumLimit + kStorageBufferRequiredSizeAlignment;\n  }\n}\n\nfunction getTestValue(testValueName: TestValue, requestedLimit: number) {\n  switch (testValueName) {\n    case 'atLimit':\n      return roundDown(requestedLimit, kStorageBufferRequiredSizeAlignment);\n    case 'overLimit':\n      // Note: the requestedLimit might not meet alignment requirements.\n      return align(\n        requestedLimit + kStorageBufferRequiredSizeAlignment,\n        kStorageBufferRequiredSizeAlignment\n      );\n  }\n}\n\nfunction getDeviceLimitToRequestAndValueToTest(\n  limitValueTest: LimitValueTest,\n  testValueName: TestValue,\n  defaultLimit: number,\n  maximumLimit: number\n) {\n  const requestedLimit = getDeviceLimitToRequest(limitValueTest, defaultLimit, maximumLimit);\n  return {\n    requestedLimit,\n    testValue: getTestValue(testValueName, requestedLimit),\n  };\n}\n\nconst limit = 'maxStorageBufferBindingSize';\nexport const { g, description } = makeLimitTestGroup(limit);\n\ng.test('createBindGroup,at_over')\n  .desc(`Test using createBindGroup at and over ${limit} limit`)\n  .params(kLimitBaseParams.combine('bufferPart', kBufferPartsKeys))\n  .fn(async t => {\n    const { limitTest, testValueName, bufferPart } = t.params;\n    const { adapter, defaultLimit, maximumLimit } = await t.getAdapterAndLimits();\n    const { requestedLimit, testValue } = getDeviceLimitToRequestAndValueToTest(\n      limitTest,\n      testValueName,\n      defaultLimit,\n      maximumLimit\n    );\n\n    await t.testDeviceWithSpecificLimits(\n      adapter,\n      requestedLimit,\n      testValue,\n      async ({ device, testValue, shouldError }) => {\n        const bindGroupLayout = device.createBindGroupLayout({\n          entries: [\n            {\n              binding: 0,\n              visibility: GPUShaderStage.COMPUTE,\n              buffer: { type: 'storage' },\n            },\n          ],\n        });\n\n        const { size, offset } = getSizeAndOffsetForBufferPart(device, bufferPart, testValue);\n        device.pushErrorScope('out-of-memory');\n        const storageBuffer = t.trackForCleanup(\n          device.createBuffer({\n            usage: GPUBufferUsage.STORAGE,\n            size,\n          })\n        );\n        const outOfMemoryError = await device.popErrorScope();\n\n        if (!outOfMemoryError) {\n          await t.expectValidationError(\n            () => {\n              device.createBindGroup({\n                layout: bindGroupLayout,\n                entries: [\n                  {\n                    binding: 0,\n                    resource: {\n                      buffer: storageBuffer,\n                      offset,\n                      size: testValue,\n                    },\n                  },\n                ],\n              });\n            },\n            shouldError,\n            `size: ${size}, offset: ${offset}, testValue: ${testValue}`\n          );\n        }\n      }\n    );\n  });\n\ng.test('validate,maxBufferSize')\n  .desc(`Test that ${limit} <= maxBufferSize`)\n  .params(u => u.combine('limitTest', kLimitValueTestKeys))\n  .fn(async t => {\n    const { limitTest } = t.params;\n    const { adapter, defaultLimit, maximumLimit } = await t.getAdapterAndLimits();\n    const requestedLimit = getDeviceLimitToRequest(limitTest, defaultLimit, maximumLimit);\n\n    await t.testDeviceWithSpecificLimits(adapter, requestedLimit, 0, ({ device, actualLimit }) => {\n      t.expect(actualLimit <= device.limits.maxBufferSize);\n    });\n  });\n"],"mappings":"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"}