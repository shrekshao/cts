{"version":3,"file":"maxColorAttachments.spec.js","names":["range","kMaximumLimitBaseParams","getDefaultLimit","makeLimitTestGroup","getPipelineDescriptor","device","testValue","code","module","createShaderModule","layout","vertex","entryPoint","fragment","targets","Array","fill","format","writeMask","limit","g","description","test","desc","params","fn","t","limitTest","testValueName","testDeviceWithRequestedMaximumLimits","shouldError","pipelineDescriptor","expectValidationError","createRenderPipeline","shouldRejectConditionally","createRenderPipelineAsync","encoder","createCommandEncoder","textures","_","trackForCleanup","createTexture","size","usage","GPUTextureUsage","RENDER_ATTACHMENT","pass","beginRenderPass","colorAttachments","i","view","createView","loadOp","storeOp","end","finish","createRenderBundleEncoder","colorFormats","adapter","defaultLimit","adapterLimit","maximumLimit","minColorAttachmentBytesPerSample","expect","limits","maxColorAttachmentBytesPerSample"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/limits/maxColorAttachments.spec.ts"],"sourcesContent":["import { range } from '../../../../../common/util/util.js';\n\nimport { kMaximumLimitBaseParams, getDefaultLimit, makeLimitTestGroup } from './limit_utils.js';\n\nfunction getPipelineDescriptor(device: GPUDevice, testValue: number): GPURenderPipelineDescriptor {\n  const code = `\n    @vertex fn vs() -> @builtin(position) vec4f {\n      return vec4f(0);\n    }\n\n    @fragment fn fs() -> @location(0) vec4f {\n      return vec4f(0);\n    }\n  `;\n  const module = device.createShaderModule({ code });\n  return {\n    layout: 'auto',\n    vertex: {\n      module,\n      entryPoint: 'vs',\n    },\n    fragment: {\n      module,\n      entryPoint: 'fs',\n      targets: new Array(testValue).fill({ format: 'r8unorm', writeMask: 0 }),\n    },\n  };\n}\n\nconst limit = 'maxColorAttachments';\nexport const { g, description } = makeLimitTestGroup(limit);\n\ng.test('createRenderPipeline,at_over')\n  .desc(`Test using at and over ${limit} limit in createRenderPipeline`)\n  .params(kMaximumLimitBaseParams)\n  .fn(async t => {\n    const { limitTest, testValueName } = t.params;\n    await t.testDeviceWithRequestedMaximumLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        const pipelineDescriptor = getPipelineDescriptor(device, testValue);\n\n        await t.expectValidationError(() => {\n          device.createRenderPipeline(pipelineDescriptor);\n        }, shouldError);\n      }\n    );\n  });\n\ng.test('createRenderPipelineAsync,at_over')\n  .desc(`Test using at and over ${limit} limit in createRenderPipelineAsync`)\n  .params(kMaximumLimitBaseParams)\n  .fn(async t => {\n    const { limitTest, testValueName } = t.params;\n    await t.testDeviceWithRequestedMaximumLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        const pipelineDescriptor = getPipelineDescriptor(device, testValue);\n        await t.shouldRejectConditionally(\n          'GPUPipelineError',\n          device.createRenderPipelineAsync(pipelineDescriptor),\n          shouldError\n        );\n      }\n    );\n  });\n\ng.test('beginRenderPass,at_over')\n  .desc(`Test using at and over ${limit} limit in beginRenderPass`)\n  .params(kMaximumLimitBaseParams)\n  .fn(async t => {\n    const { limitTest, testValueName } = t.params;\n    await t.testDeviceWithRequestedMaximumLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        const encoder = device.createCommandEncoder();\n\n        const textures = range(testValue, _ =>\n          t.trackForCleanup(\n            device.createTexture({\n              size: [1, 1],\n              format: 'r8unorm',\n              usage: GPUTextureUsage.RENDER_ATTACHMENT,\n            })\n          )\n        );\n\n        const pass = encoder.beginRenderPass({\n          colorAttachments: range(testValue, i => ({\n            view: textures[i].createView(),\n            loadOp: 'clear',\n            storeOp: 'store',\n          })),\n        });\n        pass.end();\n\n        await t.expectValidationError(() => {\n          encoder.finish();\n        }, shouldError);\n      }\n    );\n  });\n\ng.test('createRenderBundle,at_over')\n  .desc(`Test using at and over ${limit} limit in createRenderBundle`)\n  .params(kMaximumLimitBaseParams)\n  .fn(async t => {\n    const { limitTest, testValueName } = t.params;\n    await t.testDeviceWithRequestedMaximumLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        await t.expectValidationError(() => {\n          device.createRenderBundleEncoder({\n            colorFormats: new Array(testValue).fill('r8unorm'),\n          });\n        }, shouldError);\n      }\n    );\n  });\n\ng.test('validate')\n  .desc(`Test ${limit} against maxColorAttachmentBytesPerSample`)\n  .fn(t => {\n    const { adapter, defaultLimit, adapterLimit: maximumLimit } = t;\n    const minColorAttachmentBytesPerSample = getDefaultLimit('maxColorAttachmentBytesPerSample');\n    // The smallest attachment is 1 byte\n    // so make sure maxColorAttachments < maxColorAttachmentBytesPerSample\n    t.expect(defaultLimit <= minColorAttachmentBytesPerSample);\n    t.expect(maximumLimit <= adapter.limits.maxColorAttachmentBytesPerSample);\n  });\n"],"mappings":"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"}