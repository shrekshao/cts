{"version":3,"file":"maxInterStageShaderVariables.spec.js","names":["kLimitBaseParams","makeLimitTestGroup","getPipelineDescriptor","device","testValue","code","module","createShaderModule","layout","vertex","entryPoint","limit","g","description","test","desc","params","fn","t","limitTest","testValueName","testDeviceWithRequestedLimits","shouldError","lastIndex","pipelineDescriptor","expectValidationError","createRenderPipeline","shouldRejectConditionally","createRenderPipelineAsync"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/limits/maxInterStageShaderVariables.spec.ts"],"sourcesContent":["import { kLimitBaseParams, makeLimitTestGroup } from './limit_utils.js';\n\nfunction getPipelineDescriptor(device: GPUDevice, testValue: number): GPURenderPipelineDescriptor {\n  const code = `\n    struct VSOut {\n      @builtin(position) p: vec4f,\n      @location(${testValue}) v: f32,\n    }\n    @vertex fn vs() -> VSOut {\n      var o: VSOut;\n      o.p = vec4f(0);\n      o.v = 1.0;\n      return o;\n    }\n  `;\n  const module = device.createShaderModule({ code });\n  return {\n    layout: 'auto',\n    vertex: {\n      module,\n      entryPoint: 'vs',\n    },\n  };\n}\n\nconst limit = 'maxInterStageShaderVariables';\nexport const { g, description } = makeLimitTestGroup(limit);\n\ng.test('createRenderPipeline,at_over')\n  .desc(`Test using at and over ${limit} limit in createRenderPipeline`)\n  .params(kLimitBaseParams)\n  .fn(async t => {\n    const { limitTest, testValueName } = t.params;\n    await t.testDeviceWithRequestedLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        const lastIndex = testValue - 1;\n        const pipelineDescriptor = getPipelineDescriptor(device, lastIndex);\n\n        await t.expectValidationError(() => {\n          device.createRenderPipeline(pipelineDescriptor);\n        }, shouldError);\n      }\n    );\n  });\n\ng.test('createRenderPipelineAsync,at_over')\n  .desc(`Test using at and over ${limit} limit in createRenderPipelineAsync`)\n  .params(kLimitBaseParams)\n  .fn(async t => {\n    const { limitTest, testValueName } = t.params;\n    await t.testDeviceWithRequestedLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        const lastIndex = testValue - 1;\n        const pipelineDescriptor = getPipelineDescriptor(device, lastIndex);\n        await t.shouldRejectConditionally(\n          'GPUPipelineError',\n          device.createRenderPipelineAsync(pipelineDescriptor),\n          shouldError\n        );\n      }\n    );\n  });\n"],"mappings":";AAAA;AAAA,GAAA,SAASA,gBAAgB,EAAEC,kBAAkB,QAAQ,kBAAkB,CAEvE,SAASC,qBAAqB,CAACC,MAAiB,EAAEC,SAAiB,EAA+B;EAChG,MAAMC,IAAI,GAAI;AAChB;AACA;AACA,kBAAkBD,SAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACD,MAAME,MAAM,GAAGH,MAAM,CAACI,kBAAkB,CAAC,EAAEF,IAAI,CAAC,CAAC,CAAC;EAClD,OAAO;IACLG,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACNH,MAAM;MACNI,UAAU,EAAE;IACd;EACF,CAAC;AACH;;AAEA,MAAMC,KAAK,GAAG,8BAA8B;AAC5C,OAAO,MAAM,EAAEC,CAAC,EAAEC,WAAW,CAAC,CAAC,GAAGZ,kBAAkB,CAACU,KAAK,CAAC;;AAE3DC,CAAC,CAACE,IAAI,CAAC,8BAA8B,CAAC;AACnCC,IAAI,CAAE,0BAAyBJ,KAAM,gCAA+B,CAAC;AACrEK,MAAM,CAAChB,gBAAgB,CAAC;AACxBiB,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAM,EAAEC,SAAS,EAAEC,aAAa,CAAC,CAAC,GAAGF,CAAC,CAACF,MAAM;EAC7C,MAAME,CAAC,CAACG,6BAA6B;EACnCF,SAAS;EACTC,aAAa;EACb,OAAO,EAAEjB,MAAM,EAAEC,SAAS,EAAEkB,WAAW,CAAC,CAAC,KAAK;IAC5C,MAAMC,SAAS,GAAGnB,SAAS,GAAG,CAAC;IAC/B,MAAMoB,kBAAkB,GAAGtB,qBAAqB,CAACC,MAAM,EAAEoB,SAAS,CAAC;;IAEnE,MAAML,CAAC,CAACO,qBAAqB,CAAC,MAAM;MAClCtB,MAAM,CAACuB,oBAAoB,CAACF,kBAAkB,CAAC;IACjD,CAAC,EAAEF,WAAW,CAAC;EACjB,CAAC,CACF;;AACH,CAAC,CAAC;;AAEJV,CAAC,CAACE,IAAI,CAAC,mCAAmC,CAAC;AACxCC,IAAI,CAAE,0BAAyBJ,KAAM,qCAAoC,CAAC;AAC1EK,MAAM,CAAChB,gBAAgB,CAAC;AACxBiB,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAM,EAAEC,SAAS,EAAEC,aAAa,CAAC,CAAC,GAAGF,CAAC,CAACF,MAAM;EAC7C,MAAME,CAAC,CAACG,6BAA6B;EACnCF,SAAS;EACTC,aAAa;EACb,OAAO,EAAEjB,MAAM,EAAEC,SAAS,EAAEkB,WAAW,CAAC,CAAC,KAAK;IAC5C,MAAMC,SAAS,GAAGnB,SAAS,GAAG,CAAC;IAC/B,MAAMoB,kBAAkB,GAAGtB,qBAAqB,CAACC,MAAM,EAAEoB,SAAS,CAAC;IACnE,MAAML,CAAC,CAACS,yBAAyB;IAC/B,kBAAkB;IAClBxB,MAAM,CAACyB,yBAAyB,CAACJ,kBAAkB,CAAC;IACpDF,WAAW,CACZ;;EACH,CAAC,CACF;;AACH,CAAC,CAAC"}