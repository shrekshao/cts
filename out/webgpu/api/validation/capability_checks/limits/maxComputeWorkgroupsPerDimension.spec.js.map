{"version":3,"file":"maxComputeWorkgroupsPerDimension.spec.js","names":["keysOf","kMaximumLimitBaseParams","makeLimitTestGroup","limit","g","description","CreateComputePipelineTypes","createComputePipeline","createComputePipelineAsync","kCreateComputePipelineTypes","device","descriptor","pipelineType","test","desc","params","combine","fn","t","limitTest","testValueName","axis","testDeviceWithRequestedMaximumLimits","testValue","shouldError","counts","buffer","createBuffer","size","usage","GPUBufferUsage","STORAGE","module","createShaderModule","code","pipeline","layout","compute","entryPoint","encoder","createCommandEncoder","pass","beginComputePass","setPipeline","dispatchWorkgroups","end","expectValidationError","finish","destroy"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/limits/maxComputeWorkgroupsPerDimension.spec.ts"],"sourcesContent":["import { keysOf } from '../../../../../common/util/data_tables.js';\n\nimport { kMaximumLimitBaseParams, makeLimitTestGroup } from './limit_utils.js';\n\nconst limit = 'maxComputeWorkgroupsPerDimension';\nexport const { g, description } = makeLimitTestGroup(limit);\n\nconst CreateComputePipelineTypes = {\n  createComputePipeline: true,\n  createComputePipelineAsync: true,\n};\ntype CreateComputePipelineType = keyof typeof CreateComputePipelineTypes;\nconst kCreateComputePipelineTypes = keysOf(CreateComputePipelineTypes);\n\nasync function createComputePipeline(\n  device: GPUDevice,\n  descriptor: GPUComputePipelineDescriptor,\n  pipelineType: CreateComputePipelineType\n) {\n  switch (pipelineType) {\n    case 'createComputePipeline':\n      return device.createComputePipeline(descriptor);\n    case 'createComputePipelineAsync':\n      return await device.createComputePipelineAsync(descriptor);\n  }\n}\n\n// Note: dispatchWorkgroupsIndirect is not tested because it's not a validation error if that exceeds the limits\ng.test('dispatchWorkgroups,at_over')\n  .desc(`Test using dispatchWorkgroups at and over ${limit} limit`)\n  .params(\n    kMaximumLimitBaseParams\n      .combine('pipelineType', kCreateComputePipelineTypes)\n      .combine('axis', [0, 1, 2])\n  )\n  .fn(async t => {\n    const { limitTest, testValueName, pipelineType, axis } = t.params;\n    await t.testDeviceWithRequestedMaximumLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        const counts = [1, 1, 1];\n        counts[axis] = testValue;\n\n        const buffer = device.createBuffer({\n          size: 16,\n          usage: GPUBufferUsage.STORAGE,\n        });\n\n        const module = device.createShaderModule({\n          code: `\n          @compute @workgroup_size(1) fn main() {\n          }\n          `,\n        });\n\n        const pipeline = await createComputePipeline(\n          device,\n          {\n            layout: 'auto',\n            compute: {\n              module,\n              entryPoint: 'main',\n            },\n          },\n          pipelineType\n        );\n\n        const encoder = device.createCommandEncoder();\n        const pass = encoder.beginComputePass();\n        pass.setPipeline(pipeline);\n        pass.dispatchWorkgroups(counts[0], counts[1], counts[2]);\n        pass.end();\n\n        await t.expectValidationError(() => {\n          encoder.finish();\n        }, shouldError);\n\n        buffer.destroy();\n      }\n    );\n  });\n"],"mappings":";AAAA;AAAA,GAAA,SAASA,MAAM,QAAQ,2CAA2C,CAElE,SAASC,uBAAuB,EAAEC,kBAAkB,QAAQ,kBAAkB;;AAE9E,MAAMC,KAAK,GAAG,kCAAkC;AAChD,OAAO,MAAM,EAAEC,CAAC,EAAEC,WAAW,CAAC,CAAC,GAAGH,kBAAkB,CAACC,KAAK,CAAC;;AAE3D,MAAMG,0BAA0B,GAAG;EACjCC,qBAAqB,EAAE,IAAI;EAC3BC,0BAA0B,EAAE;AAC9B,CAAC;;AAED,MAAMC,2BAA2B,GAAGT,MAAM,CAACM,0BAA0B,CAAC;;AAEtE,eAAeC,qBAAqB;AAClCG,MAAiB;AACjBC,UAAwC;AACxCC,YAAuC;AACvC;EACA,QAAQA,YAAY;IAClB,KAAK,uBAAuB;MAC1B,OAAOF,MAAM,CAACH,qBAAqB,CAACI,UAAU,CAAC;IACjD,KAAK,4BAA4B;MAC/B,OAAO,MAAMD,MAAM,CAACF,0BAA0B,CAACG,UAAU,CAAC,CAAC;;AAEjE;;AAEA;AACAP,CAAC,CAACS,IAAI,CAAC,4BAA4B,CAAC;AACjCC,IAAI,CAAE,6CAA4CX,KAAM,QAAO,CAAC;AAChEY,MAAM;AACLd,uBAAuB;AACpBe,OAAO,CAAC,cAAc,EAAEP,2BAA2B,CAAC;AACpDO,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAC9B;;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAM,EAAEC,SAAS,EAAEC,aAAa,EAAER,YAAY,EAAES,IAAI,CAAC,CAAC,GAAGH,CAAC,CAACH,MAAM;EACjE,MAAMG,CAAC,CAACI,oCAAoC;EAC1CH,SAAS;EACTC,aAAa;EACb,OAAO,EAAEV,MAAM,EAAEa,SAAS,EAAEC,WAAW,CAAC,CAAC,KAAK;IAC5C,MAAMC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxBA,MAAM,CAACJ,IAAI,CAAC,GAAGE,SAAS;;IAExB,MAAMG,MAAM,GAAGhB,MAAM,CAACiB,YAAY,CAAC;MACjCC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAEC,cAAc,CAACC;IACxB,CAAC,CAAC;;IAEF,MAAMC,MAAM,GAAGtB,MAAM,CAACuB,kBAAkB,CAAC;MACvCC,IAAI,EAAG;AACjB;AACA;AACA;IACQ,CAAC,CAAC;;IAEF,MAAMC,QAAQ,GAAG,MAAM5B,qBAAqB;IAC1CG,MAAM;IACN;MACE0B,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPL,MAAM;QACNM,UAAU,EAAE;MACd;IACF,CAAC;IACD1B,YAAY,CACb;;;IAED,MAAM2B,OAAO,GAAG7B,MAAM,CAAC8B,oBAAoB,EAAE;IAC7C,MAAMC,IAAI,GAAGF,OAAO,CAACG,gBAAgB,EAAE;IACvCD,IAAI,CAACE,WAAW,CAACR,QAAQ,CAAC;IAC1BM,IAAI,CAACG,kBAAkB,CAACnB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;IACxDgB,IAAI,CAACI,GAAG,EAAE;;IAEV,MAAM3B,CAAC,CAAC4B,qBAAqB,CAAC,MAAM;MAClCP,OAAO,CAACQ,MAAM,EAAE;IAClB,CAAC,EAAEvB,WAAW,CAAC;;IAEfE,MAAM,CAACsB,OAAO,EAAE;EAClB,CAAC,CACF;;AACH,CAAC,CAAC"}