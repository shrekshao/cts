{"version":3,"file":"maxSamplersPerShaderStage.spec.js","names":["range","reorder","kReorderOrderKeys","kShaderStageCombinationsWithStage","kLimitBaseParams","makeLimitTestGroup","kBindGroupTests","kBindingCombinations","getPipelineTypeForBindingCombination","getPipelineAsyncTypeForBindingCombination","getPerStageWGSLForBindingCombination","limit","g","description","createBindGroupLayout","device","visibility","order","numBindings","entries","i","binding","sampler","test","desc","params","combine","fn","t","limitTest","testValueName","testDeviceWithRequestedLimits","testValue","shouldError","expectValidationError","kNumGroups","bindGroupLayouts","minInGroup","Math","floor","numInGroup","createPipelineLayout","bindingCombination","bindGroupTest","pipelineType","actualLimit","code","j","module","createShaderModule","createPipeline","shouldRejectConditionally","createPipelineAsync"],"sources":["../../../../../../src/webgpu/api/validation/capability_checks/limits/maxSamplersPerShaderStage.spec.ts"],"sourcesContent":["import {\n  range,\n  reorder,\n  kReorderOrderKeys,\n  ReorderOrder,\n} from '../../../../../common/util/util.js';\nimport { kShaderStageCombinationsWithStage } from '../../../../capability_info.js';\n\nimport {\n  kLimitBaseParams,\n  makeLimitTestGroup,\n  kBindGroupTests,\n  kBindingCombinations,\n  getPipelineTypeForBindingCombination,\n  getPipelineAsyncTypeForBindingCombination,\n  getPerStageWGSLForBindingCombination,\n} from './limit_utils.js';\n\nconst limit = 'maxSamplersPerShaderStage';\nexport const { g, description } = makeLimitTestGroup(limit);\n\nfunction createBindGroupLayout(\n  device: GPUDevice,\n  visibility: number,\n  order: ReorderOrder,\n  numBindings: number\n) {\n  return device.createBindGroupLayout({\n    entries: reorder(\n      order,\n      range(numBindings, i => ({\n        binding: i,\n        visibility,\n        sampler: {},\n      }))\n    ),\n  });\n}\n\ng.test('createBindGroupLayout,at_over')\n  .desc(\n    `\n  Test using at and over ${limit} limit in createBindGroupLayout\n  \n  Note: We also test order to make sure the implementation isn't just looking\n  at just the last entry.\n  `\n  )\n  .params(\n    kLimitBaseParams\n      .combine('visibility', kShaderStageCombinationsWithStage)\n      .combine('order', kReorderOrderKeys)\n  )\n  .fn(async t => {\n    const { limitTest, testValueName, visibility, order } = t.params;\n    await t.testDeviceWithRequestedLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        await t.expectValidationError(\n          () => createBindGroupLayout(device, visibility, order, testValue),\n          shouldError\n        );\n      }\n    );\n  });\n\ng.test('createPipelineLayout,at_over')\n  .desc(\n    `\n  Test using at and over ${limit} limit in createPipelineLayout\n  \n  Note: We also test order to make sure the implementation isn't just looking\n  at just the last entry.\n  `\n  )\n  .params(\n    kLimitBaseParams\n      .combine('visibility', kShaderStageCombinationsWithStage)\n      .combine('order', kReorderOrderKeys)\n  )\n  .fn(async t => {\n    const { limitTest, testValueName, visibility, order } = t.params;\n    await t.testDeviceWithRequestedLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, shouldError }) => {\n        const kNumGroups = 3;\n        const bindGroupLayouts = range(kNumGroups, i => {\n          const minInGroup = Math.floor(testValue / kNumGroups);\n          const numInGroup = i ? minInGroup : testValue - minInGroup * (kNumGroups - 1);\n          return createBindGroupLayout(device, visibility, order, numInGroup);\n        });\n        await t.expectValidationError(\n          () => device.createPipelineLayout({ bindGroupLayouts }),\n          shouldError\n        );\n      }\n    );\n  });\n\ng.test('createPipeline,at_over')\n  .desc(\n    `\n  Test using createRenderPipeline and createComputePipeline at and over ${limit} limit\n  \n  Note: We also test order to make sure the implementation isn't just looking\n  at just the last entry.\n  `\n  )\n  .params(\n    kLimitBaseParams\n      .combine('bindingCombination', kBindingCombinations)\n      .combine('order', kReorderOrderKeys)\n      .combine('bindGroupTest', kBindGroupTests)\n  )\n  .fn(async t => {\n    const { limitTest, testValueName, bindingCombination, order, bindGroupTest } = t.params;\n    const pipelineType = getPipelineTypeForBindingCombination(bindingCombination);\n\n    await t.testDeviceWithRequestedLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, actualLimit, shouldError }) => {\n        const code = getPerStageWGSLForBindingCombination(\n          bindingCombination,\n          order,\n          bindGroupTest,\n          (i, j) => `var u${j}_${i}: sampler`,\n          (i, j) => `_ = textureGather(0, tex, u${j}_${i}, vec2f(0));`,\n          testValue,\n          '@group(3) @binding(1) var tex: texture_2d<f32>;'\n        );\n        const module = device.createShaderModule({ code });\n\n        await t.expectValidationError(\n          () => {\n            t.createPipeline(pipelineType, module);\n          },\n          shouldError,\n          `actualLimit: ${actualLimit}, testValue: ${testValue}\\n:${code}`\n        );\n      }\n    );\n  });\n\ng.test('createPipelineAsync,at_over')\n  .desc(\n    `\n  Test using createRenderPipelineAsync and createComputePipelineAsync at and over ${limit} limit\n  \n  Note: We also test order to make sure the implementation isn't just looking\n  at just the last entry.\n  `\n  )\n  .params(\n    kLimitBaseParams\n      .combine('bindingCombination', kBindingCombinations)\n      .combine('order', kReorderOrderKeys)\n      .combine('bindGroupTest', kBindGroupTests)\n  )\n  .fn(async t => {\n    const { limitTest, testValueName, bindingCombination, order, bindGroupTest } = t.params;\n    const pipelineType = getPipelineAsyncTypeForBindingCombination(bindingCombination);\n\n    await t.testDeviceWithRequestedLimits(\n      limitTest,\n      testValueName,\n      async ({ device, testValue, actualLimit, shouldError }) => {\n        const code = getPerStageWGSLForBindingCombination(\n          bindingCombination,\n          order,\n          bindGroupTest,\n          (i, j) => `var u${j}_${i}: sampler`,\n          (i, j) => `_ = textureGather(0, tex, u${j}_${i}, vec2f(0));`,\n          testValue,\n          '@group(3) @binding(1) var tex: texture_2d<f32>;'\n        );\n        const module = device.createShaderModule({ code });\n\n        await t.shouldRejectConditionally(\n          'GPUPipelineError',\n          t.createPipelineAsync(pipelineType, module),\n          shouldError,\n          `actualLimit: ${actualLimit}, testValue: ${testValue}\\n:${code}`\n        );\n      }\n    );\n  });\n"],"mappings":"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"}