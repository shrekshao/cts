{"version":3,"sources":["../../../../../../src/webgpu/api/validation/capability_checks/features/query_types.spec.ts"],"names":["description","makeTestGroup","ValidationTest","g","test","desc","params","u","combine","fn","t","type","timestampQueryEnable","requiredFeatures","push","selectDeviceOrSkipTestCase","count","shouldError","expectValidationError","device","createQuerySet"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,+CAA9B;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,cAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,gBAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXA;;AAaGC,MAbH,CAaU,CAAAC,CAAC;AACPA,CAAC;AACEC,OADH,CACW,MADX,EACmB,CAAC,WAAD,EAAc,WAAd,CADnB;AAEGA,OAFH,CAEW,sBAFX,EAEmC,CAAC,KAAD,EAAQ,IAAR,CAFnC,CAdJ;;AAkBGC,EAlBH,CAkBM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAEC,IAAF,EAAQC,oBAAR,KAAiCF,CAAC,CAACJ,MAAzC;;AAEA,QAAMO,gBAAkC,GAAG,EAA3C;AACA,MAAID,oBAAJ,EAA0B;AACxBC,IAAAA,gBAAgB,CAACC,IAAjB,CAAsB,iBAAtB;AACD;;AAED,QAAMJ,CAAC,CAACK,0BAAF,CAA6B,EAAEF,gBAAF,EAA7B,CAAN;;AAEA,QAAMG,KAAK,GAAG,CAAd;AACA,QAAMC,WAAW,GAAGN,IAAI,KAAK,WAAT,IAAwB,CAACC,oBAA7C;;AAEAF,EAAAA,CAAC,CAACQ,qBAAF,CAAwB,MAAM;AAC5BR,IAAAA,CAAC,CAACS,MAAF,CAASC,cAAT,CAAwB,EAAET,IAAF,EAAQK,KAAR,EAAxB;AACD,GAFD,EAEGC,WAFH;AAGD,CAlCH","sourcesContent":["export const description = `\nTests for capability checking for features enabling optional query types.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('createQuerySet')\n  .desc(\n    `\nTests that creating query set shouldn't be valid without the required feature enabled.\n- createQuerySet\n  - type {occlusion, timestamp}\n  - x= {pipeline statistics, timestamp} query {enable, disable}\n\nTODO: This test should expect *synchronous* exceptions, not validation errors, per\n<https://github.com/gpuweb/gpuweb/blob/main/design/ErrorConventions.md>.\nAs of this writing, the spec needs to be fixed as well.\n  `\n  )\n  .params(u =>\n    u\n      .combine('type', ['occlusion', 'timestamp'] as const)\n      .combine('timestampQueryEnable', [false, true])\n  )\n  .fn(async t => {\n    const { type, timestampQueryEnable } = t.params;\n\n    const requiredFeatures: GPUFeatureName[] = [];\n    if (timestampQueryEnable) {\n      requiredFeatures.push('timestamp-query');\n    }\n\n    await t.selectDeviceOrSkipTestCase({ requiredFeatures });\n\n    const count = 1;\n    const shouldError = type === 'timestamp' && !timestampQueryEnable;\n\n    t.expectValidationError(() => {\n      t.device.createQuerySet({ type, count });\n    }, shouldError);\n  });\n"],"file":"query_types.spec.js"}