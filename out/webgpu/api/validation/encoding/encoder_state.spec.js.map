{"version":3,"file":"encoder_state.spec.js","names":["description","makeTestGroup","objectEquals","ValidationTest","F","beginRenderPass","commandEncoder","attachmentTexture","device","createTexture","format","size","width","height","depthOrArrayLayers","usage","GPUTextureUsage","RENDER_ATTACHMENT","trackForCleanup","colorAttachments","view","createView","clearValue","r","g","b","a","loadOp","storeOp","test","desc","params","u","combine","beginSubcases","fn","t","pass0Type","pass1Type","firstPassEnd","endPasses","encoder","createCommandEncoder","firstPass","beginComputePass","end","secondPass","passes","index","valid","expectValidationError","finish","paramsSubcasesOnly","passType","IsEncoderFinished","pass","srcBuffer","createBuffer","GPUBufferUsage","COPY_SRC","dstBuffer","COPY_DST","copyBufferToBuffer","endCount","i","endTwice"],"sources":["../../../../../src/webgpu/api/validation/encoding/encoder_state.spec.ts"],"sourcesContent":["export const description = `\nTODO:\n- createCommandEncoder\n- non-pass command, or beginPass, during {render, compute} pass\n- {before (control case), after} finish()\n    - x= {finish(), ... all non-pass commands}\n- {before (control case), after} end()\n    - x= {render, compute} pass\n    - x= {finish(), ... all relevant pass commands}\n    - x= {\n        - before endPass (control case)\n        - after endPass (no pass open)\n        - after endPass+beginPass (a new pass of the same type is open)\n        - }\n    - should make whole encoder invalid\n- ?\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { objectEquals } from '../../../../common/util/util.js';\nimport { ValidationTest } from '../validation_test.js';\n\nclass F extends ValidationTest {\n  beginRenderPass(commandEncoder: GPUCommandEncoder): GPURenderPassEncoder {\n    const attachmentTexture = this.device.createTexture({\n      format: 'rgba8unorm',\n      size: { width: 16, height: 16, depthOrArrayLayers: 1 },\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    this.trackForCleanup(attachmentTexture);\n    return commandEncoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: attachmentTexture.createView(),\n          clearValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n          loadOp: 'clear',\n          storeOp: 'store',\n        },\n      ],\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('pass_end_invalid_order')\n  .desc(\n    `\n  Test that beginning a {compute,render} pass before ending the previous {compute,render} pass\n  causes an error.\n\n  TODO: Update this test according to https://github.com/gpuweb/gpuweb/issues/2464\n  `\n  )\n  .params(u =>\n    u\n      .combine('pass0Type', ['compute', 'render'])\n      .combine('pass1Type', ['compute', 'render'])\n      .beginSubcases()\n      .combine('firstPassEnd', [true, false])\n      .combine('endPasses', [[], [0], [1], [0, 1], [1, 0]])\n  )\n  .fn(async t => {\n    const { pass0Type, pass1Type, firstPassEnd, endPasses } = t.params;\n\n    const encoder = t.device.createCommandEncoder();\n\n    const firstPass =\n      pass0Type === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder);\n\n    if (firstPassEnd) firstPass.end();\n\n    // Begin a second pass before ending the previous pass.\n    const secondPass =\n      pass1Type === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder);\n\n    const passes = [firstPass, secondPass];\n    for (const index of endPasses) {\n      passes[index].end();\n    }\n\n    // If {endPasses} is '[1]' and {firstPass} ends, it's a control case.\n    const valid = firstPassEnd && objectEquals(endPasses, [1]);\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, !valid);\n  });\n\ng.test('call_after_successful_finish')\n  .desc(`Test that encoding command after a successful finish generates a validation error.`)\n  .paramsSubcasesOnly(u =>\n    u.combine('passType', ['compute', 'render']).combine('IsEncoderFinished', [false, true])\n  )\n  .fn(async t => {\n    const { passType, IsEncoderFinished } = t.params;\n\n    const encoder = t.device.createCommandEncoder();\n\n    const pass = passType === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder);\n    pass.end();\n\n    const srcBuffer = t.device.createBuffer({\n      size: 1024,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n\n    const dstBuffer = t.device.createBuffer({\n      size: 1024,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    if (IsEncoderFinished) {\n      encoder.finish();\n      t.expectValidationError(() => {\n        encoder.copyBufferToBuffer(srcBuffer, 0, dstBuffer, 0, 0);\n      }, IsEncoderFinished);\n    } else {\n      t.expectValidationError(() => {\n        encoder.copyBufferToBuffer(srcBuffer, 0, dstBuffer, 0, 0);\n      }, IsEncoderFinished);\n      encoder.finish();\n    }\n  });\n\ng.test('pass_end_none')\n  .desc(\n    `\n  Test that ending a {compute,render} pass without ending the passes generates a validation error.\n  `\n  )\n  .paramsSubcasesOnly(u => u.combine('passType', ['compute', 'render']).combine('endCount', [0, 1]))\n  .fn(async t => {\n    const { passType, endCount } = t.params;\n\n    const encoder = t.device.createCommandEncoder();\n\n    const pass = passType === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder);\n\n    for (let i = 0; i < endCount; ++i) {\n      pass.end();\n    }\n\n    t.expectValidationError(() => {\n      encoder.finish();\n    }, endCount === 0);\n  });\n\ng.test('pass_end_twice')\n  .desc('Test that ending a {compute,render} pass twice generates a validation error.')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('passType', ['compute', 'render'])\n      .combine('endTwice', [false, true])\n  )\n  .fn(async t => {\n    const { passType, endTwice } = t.params;\n\n    const encoder = t.device.createCommandEncoder();\n\n    const pass = passType === 'compute' ? encoder.beginComputePass() : t.beginRenderPass(encoder);\n\n    pass.end();\n    if (endTwice) {\n      t.expectValidationError(() => {\n        pass.end();\n      });\n    }\n\n    encoder.finish();\n  });\n"],"mappings":"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"}