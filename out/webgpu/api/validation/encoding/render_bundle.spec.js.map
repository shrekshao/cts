{"version":3,"sources":["../../../../../src/webgpu/api/validation/encoding/render_bundle.spec.ts"],"names":["description","makeTestGroup","kDepthStencilFormats","kTextureFormatInfo","ValidationTest","g","test","desc","fn","t","encoder","createEncoder","executeBundles","validateFinish","paramsSubcasesOnly","bundle0Mismatched","bundle1Mismatched","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","params","mismatched","device","mismatchedDevice","descriptor","colorFormats","bundle0Encoder","createRenderBundleEncoder","bundle0","finish","bundle1Encoder","bundle1","u","combineWithParams","bundleFormats","passFormats","_compatible","bundleEncoder","bundle","attachmentInfo","bundleFormat","passFormat","selectDeviceForTextureFormatOrSkipTestCase","compatible","depthStencilFormat","combine","beginSubcases","filter","p","depthStencilInfo","depth","stencil","passDepthReadOnly","passStencilReadOnly","bundleDepthReadOnly","bundleStencilReadOnly","depthReadOnly","stencilReadOnly","bundleSamples","passSamples","sampleCount"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,6BAAzD;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,OAAO,MAAMC,CAAC,GAAGJ,aAAa,CAACG,cAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,mBAAP;AACGC,IADH;AAEK;AACL;AACA,KAJA;;AAMGC,EANH,CAMM,OAAMC,CAAN,KAAW;AACb,QAAMC,OAAO,GAAGD,CAAC,CAACE,aAAF,CAAgB,aAAhB,CAAhB;AACAD,EAAAA,OAAO,CAACA,OAAR,CAAgBE,cAAhB,CAA+B,EAA/B;AACAF,EAAAA,OAAO,CAACG,cAAR,CAAuB,IAAvB;AACD,CAVH;;AAYAR,CAAC,CAACC,IAAF,CAAO,iBAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA,KAPA;;AASGO,kBATH,CASsB;AAClB,EAAEC,iBAAiB,EAAE,KAArB,EAA4BC,iBAAiB,EAAE,KAA/C,EADkB,EACsC;AACxD,EAAED,iBAAiB,EAAE,IAArB,EAA2BC,iBAAiB,EAAE,KAA9C,EAFkB;AAGlB,EAAED,iBAAiB,EAAE,KAArB,EAA4BC,iBAAiB,EAAE,IAA/C,EAHkB,CATtB;;AAcGC,iBAdH,CAcqB,CAAAR,CAAC,KAAI;AACtBA,EAAAA,CAAC,CAACS,oCAAF,CAAuCC,SAAvC;AACD,CAhBH;AAiBGX,EAjBH,CAiBM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAEM,iBAAF,EAAqBC,iBAArB,KAA2CP,CAAC,CAACW,MAAnD;AACA,QAAMC,UAAU,GAAGN,iBAAiB,IAAIC,iBAAxC;;AAEA,QAAMM,MAAM,GAAGD,UAAU,GAAGZ,CAAC,CAACc,gBAAL,GAAwBd,CAAC,CAACa,MAAnD;;AAEA,QAAME,UAA4C,GAAG;AACnDC,IAAAA,YAAY,EAAE,CAAC,YAAD,CADqC,EAArD;;AAGA,QAAMC,cAAc,GAAGJ,MAAM,CAACK,yBAAP,CAAiCH,UAAjC,CAAvB;AACA,QAAMI,OAAO,GAAGF,cAAc,CAACG,MAAf,EAAhB;AACA,QAAMC,cAAc,GAAGR,MAAM,CAACK,yBAAP,CAAiCH,UAAjC,CAAvB;AACA,QAAMO,OAAO,GAAGD,cAAc,CAACD,MAAf,EAAhB;;AAEA,QAAMnB,OAAO,GAAGD,CAAC,CAACE,aAAF,CAAgB,aAAhB,CAAhB;AACAD,EAAAA,OAAO,CAACA,OAAR,CAAgBE,cAAhB,CAA+B,CAACgB,OAAD,EAAUG,OAAV,CAA/B;;AAEArB,EAAAA,OAAO,CAACG,cAAR,CAAuB,CAACQ,UAAxB;AACD,CAnCH;;AAqCAhB,CAAC,CAACC,IAAF,CAAO,wBAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA;AACA,KARA;;AAUGa,MAVH,CAUU,CAAAY,CAAC;AACPA,CAAC,CAACC,iBAAF,CAAoB;AAClB;AACEC,EAAAA,aAAa,EAAE,CAAC,YAAD,EAAe,UAAf,CADjB;AAEEC,EAAAA,WAAW,EAAE,CAAC,YAAD,EAAe,UAAf,CAFf;AAGEC,EAAAA,WAAW,EAAE,IAHf,EADkB;AAKf;AACH;AACEF,EAAAA,aAAa,EAAE,CAAC,YAAD,EAAe,UAAf,CADjB;AAEEC,EAAAA,WAAW,EAAE,CAAC,YAAD,EAAe,YAAf,CAFf;AAGEC,EAAAA,WAAW,EAAE,KAHf,EANkB;;AAWlB;AACEF,EAAAA,aAAa,EAAE,CAAC,YAAD,EAAe,UAAf,CADjB;AAEEC,EAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,YAAb,CAFf;AAGEC,EAAAA,WAAW,EAAE,KAHf,EAXkB;;AAgBlB;AACEF,EAAAA,aAAa,EAAE,CAAC,YAAD,EAAe,UAAf,EAA2B,YAA3B,CADjB;AAEEC,EAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,YAAb,CAFf;AAGEC,EAAAA,WAAW,EAAE,KAHf,EAhBkB;;AAqBlB;AACEF,EAAAA,aAAa,EAAE,CAAC,YAAD,EAAe,UAAf,CADjB;AAEEC,EAAAA,WAAW,EAAE,CAAC,UAAD,EAAa,YAAb,EAA2B,YAA3B,CAFf;AAGEC,EAAAA,WAAW,EAAE,KAHf,EArBkB,CAApB,CAXJ;;;;AAuCG5B,EAvCH,CAuCM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAEyB,aAAF,EAAiBC,WAAjB,EAA8BC,WAA9B,KAA8C3B,CAAC,CAACW,MAAtD;;AAEA,QAAMiB,aAAa,GAAG5B,CAAC,CAACa,MAAF,CAASK,yBAAT,CAAmC;AACvDF,IAAAA,YAAY,EAAES,aADyC,EAAnC,CAAtB;;AAGA,QAAMI,MAAM,GAAGD,aAAa,CAACR,MAAd,EAAf;;AAEA,QAAMnB,OAAO,GAAGD,CAAC,CAACE,aAAF,CAAgB,aAAhB,EAA+B;AAC7C4B,IAAAA,cAAc,EAAE;AACdd,MAAAA,YAAY,EAAEU,WADA,EAD6B,EAA/B,CAAhB;;;AAKAzB,EAAAA,OAAO,CAACA,OAAR,CAAgBE,cAAhB,CAA+B,CAAC0B,MAAD,CAA/B;;AAEA5B,EAAAA,OAAO,CAACG,cAAR,CAAuBuB,WAAvB;AACD,CAvDH;;AAyDA/B,CAAC,CAACC,IAAF,CAAO,gCAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA,KAPA;;AASGa,MATH,CASU,CAAAY,CAAC;AACPA,CAAC,CAACC,iBAAF,CAAoB;AAClB,EAAEO,YAAY,EAAE,aAAhB,EAA+BC,UAAU,EAAE,aAA3C,EADkB,EAC0C;AAC5D,EAAED,YAAY,EAAE,aAAhB,EAA+BC,UAAU,EAAE,cAA3C,EAFkB;AAGlB,EAAED,YAAY,EAAE,aAAhB,EAA+BC,UAAU,EAAE,sBAA3C,EAHkB;AAIlB,EAAED,YAAY,EAAE,UAAhB,EAA4BC,UAAU,EAAE,sBAAxC,EAJkB,CAApB,CAVJ;;;AAiBGxB,iBAjBH,CAiBqB,CAAAR,CAAC,KAAI;AACtB,QAAM,EAAE+B,YAAF,EAAgBC,UAAhB,KAA+BhC,CAAC,CAACW,MAAvC;AACAX,EAAAA,CAAC,CAACiC,0CAAF,CAA6C,CAACF,YAAD,EAAeC,UAAf,CAA7C;AACD,CApBH;AAqBGjC,EArBH,CAqBM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAE+B,YAAF,EAAgBC,UAAhB,KAA+BhC,CAAC,CAACW,MAAvC;AACA,QAAMuB,UAAU,GAAGH,YAAY,KAAKC,UAApC;;AAEA,QAAMJ,aAAa,GAAG5B,CAAC,CAACa,MAAF,CAASK,yBAAT,CAAmC;AACvDF,IAAAA,YAAY,EAAE,EADyC;AAEvDmB,IAAAA,kBAAkB,EAAEJ,YAFmC,EAAnC,CAAtB;;AAIA,QAAMF,MAAM,GAAGD,aAAa,CAACR,MAAd,EAAf;;AAEA,QAAMnB,OAAO,GAAGD,CAAC,CAACE,aAAF,CAAgB,aAAhB,EAA+B;AAC7C4B,IAAAA,cAAc,EAAE;AACdd,MAAAA,YAAY,EAAE,EADA;AAEdmB,MAAAA,kBAAkB,EAAEH,UAFN,EAD6B,EAA/B,CAAhB;;;AAMA/B,EAAAA,OAAO,CAACA,OAAR,CAAgBE,cAAhB,CAA+B,CAAC0B,MAAD,CAA/B;;AAEA5B,EAAAA,OAAO,CAACG,cAAR,CAAuB8B,UAAvB;AACD,CAxCH;;AA0CAtC,CAAC,CAACC,IAAF,CAAO,iCAAP;AACGC,IADH;AAEK;AACL;AACA;AACA,KALA;;AAOGa,MAPH,CAOU,CAAAY,CAAC;AACPA,CAAC;AACEa,OADH,CACW,oBADX,EACiC3C,oBADjC;AAEG4C,aAFH;AAGGD,OAHH,CAGW,qBAHX,EAGkC,CAAC,KAAD,EAAQ,IAAR,CAHlC;AAIGA,OAJH,CAIW,uBAJX,EAIoC,CAAC,KAAD,EAAQ,IAAR,CAJpC;AAKGA,OALH,CAKW,mBALX,EAKgC,CAAC,KAAD,EAAQ,IAAR,CALhC;AAMGA,OANH,CAMW,qBANX,EAMkC,CAAC,KAAD,EAAQ,IAAR,CANlC;AAOGE,MAPH,CAOU,CAAAC,CAAC,KAAI;AACX;AACA;AACA,QAAMC,gBAAgB,GAAG9C,kBAAkB,CAAC6C,CAAC,CAACJ,kBAAH,CAA3C;AACA,MAAIK,gBAAgB,CAACC,KAAjB,IAA0BD,gBAAgB,CAACE,OAA/C,EAAwD;AACtD;AACEH,MAAAA,CAAC,CAACI,iBAAF,KAAwBJ,CAAC,CAACK,mBAA1B;AACAL,MAAAA,CAAC,CAACM,mBAAF,KAA0BN,CAAC,CAACO,qBAF9B;;AAID;AACD,SAAO,IAAP;AACD,CAlBH,CARJ;;AA4BGtC,iBA5BH,CA4BqB,CAAAR,CAAC,KAAI;AACtBA,EAAAA,CAAC,CAACiC,0CAAF,CAA6CjC,CAAC,CAACW,MAAF,CAASwB,kBAAtD;AACD,CA9BH;AA+BGpC,EA/BH,CA+BM,OAAMC,CAAN,KAAW;AACb,QAAM;AACJmC,IAAAA,kBADI;AAEJU,IAAAA,mBAFI;AAGJC,IAAAA,qBAHI;AAIJH,IAAAA,iBAJI;AAKJC,IAAAA,mBALI;AAMF5C,EAAAA,CAAC,CAACW,MANN;;AAQA,QAAMuB,UAAU;AACd,GAAC,CAACS,iBAAD,IAAsBE,mBAAmB,KAAKF,iBAA/C;AACC,GAACC,mBAAD,IAAwBE,qBAAqB,KAAKF,mBADnD,CADF;;AAIA,QAAMhB,aAAa,GAAG5B,CAAC,CAACa,MAAF,CAASK,yBAAT,CAAmC;AACvDF,IAAAA,YAAY,EAAE,EADyC;AAEvDmB,IAAAA,kBAFuD;AAGvDY,IAAAA,aAAa,EAAEF,mBAHwC;AAIvDG,IAAAA,eAAe,EAAEF,qBAJsC,EAAnC,CAAtB;;AAMA,QAAMjB,MAAM,GAAGD,aAAa,CAACR,MAAd,EAAf;;AAEA,QAAMnB,OAAO,GAAGD,CAAC,CAACE,aAAF,CAAgB,aAAhB,EAA+B;AAC7C4B,IAAAA,cAAc,EAAE;AACdd,MAAAA,YAAY,EAAE,EADA;AAEdmB,MAAAA,kBAFc;AAGdY,MAAAA,aAAa,EAAEJ,iBAHD;AAIdK,MAAAA,eAAe,EAAEJ,mBAJH,EAD6B,EAA/B,CAAhB;;;AAQA3C,EAAAA,OAAO,CAACA,OAAR,CAAgBE,cAAhB,CAA+B,CAAC0B,MAAD,CAA/B;;AAEA5B,EAAAA,OAAO,CAACG,cAAR,CAAuB8B,UAAvB;AACD,CA/DH;;AAiEAtC,CAAC,CAACC,IAAF,CAAO,uBAAP;AACGC,IADH;AAEK;AACL;AACA;AACA,KALA;;AAOGa,MAPH,CAOU,CAAAY,CAAC;AACPA,CAAC,CAACC,iBAAF,CAAoB;AAClB,EAAEyB,aAAa,EAAE,CAAjB,EAAoBC,WAAW,EAAE,CAAjC,EADkB,EACoB;AACtC,EAAED,aAAa,EAAE,CAAjB,EAAoBC,WAAW,EAAE,CAAjC,EAFkB,EAEoB;AACtC,EAAEnB,YAAY,EAAE,CAAhB,EAAmBC,UAAU,EAAE,CAA/B,EAHkB;AAIlB,EAAED,YAAY,EAAE,CAAhB,EAAmBC,UAAU,EAAE,CAA/B,EAJkB,CAApB,CARJ;;;AAeGjC,EAfH,CAeM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAEiD,aAAF,EAAiBC,WAAjB,KAAiClD,CAAC,CAACW,MAAzC;;AAEA,QAAMuB,UAAU,GAAGe,aAAa,KAAKC,WAArC;;AAEA,QAAMtB,aAAa,GAAG5B,CAAC,CAACa,MAAF,CAASK,yBAAT,CAAmC;AACvDF,IAAAA,YAAY,EAAE,CAAC,YAAD,CADyC;AAEvDmC,IAAAA,WAAW,EAAEF,aAF0C,EAAnC,CAAtB;;AAIA,QAAMpB,MAAM,GAAGD,aAAa,CAACR,MAAd,EAAf;;AAEA,QAAMnB,OAAO,GAAGD,CAAC,CAACE,aAAF,CAAgB,aAAhB,EAA+B;AAC7C4B,IAAAA,cAAc,EAAE;AACdd,MAAAA,YAAY,EAAE,CAAC,YAAD,CADA;AAEdmC,MAAAA,WAAW,EAAED,WAFC,EAD6B,EAA/B,CAAhB;;;AAMAjD,EAAAA,OAAO,CAACA,OAAR,CAAgBE,cAAhB,CAA+B,CAAC0B,MAAD,CAA/B;;AAEA5B,EAAAA,OAAO,CAACG,cAAR,CAAuB8B,UAAvB;AACD,CAnCH","sourcesContent":["export const description = `\nTests execution of render bundles.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { kDepthStencilFormats, kTextureFormatInfo } from '../../../capability_info.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('empty_bundle_list')\n  .desc(\n    `\n    Test that it is valid to execute an empty list of render bundles\n    `\n  )\n  .fn(async t => {\n    const encoder = t.createEncoder('render pass');\n    encoder.encoder.executeBundles([]);\n    encoder.validateFinish(true);\n  });\n\ng.test('device_mismatch')\n  .desc(\n    `\n    Tests executeBundles cannot be called with render bundles created from another device\n    Test with two bundles to make sure all bundles can be validated:\n    - bundle0 and bundle1 from same device\n    - bundle0 and bundle1 from different device\n    `\n  )\n  .paramsSubcasesOnly([\n    { bundle0Mismatched: false, bundle1Mismatched: false }, // control case\n    { bundle0Mismatched: true, bundle1Mismatched: false },\n    { bundle0Mismatched: false, bundle1Mismatched: true },\n  ])\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(async t => {\n    const { bundle0Mismatched, bundle1Mismatched } = t.params;\n    const mismatched = bundle0Mismatched || bundle1Mismatched;\n\n    const device = mismatched ? t.mismatchedDevice : t.device;\n\n    const descriptor: GPURenderBundleEncoderDescriptor = {\n      colorFormats: ['rgba8unorm'],\n    };\n    const bundle0Encoder = device.createRenderBundleEncoder(descriptor);\n    const bundle0 = bundle0Encoder.finish();\n    const bundle1Encoder = device.createRenderBundleEncoder(descriptor);\n    const bundle1 = bundle1Encoder.finish();\n\n    const encoder = t.createEncoder('render pass');\n    encoder.encoder.executeBundles([bundle0, bundle1]);\n\n    encoder.validateFinish(!mismatched);\n  });\n\ng.test('color_formats_mismatch')\n  .desc(\n    `\n    Tests executeBundles cannot be called with render bundles that do match the colorFormats of the\n    render pass. This includes:\n    - formats don't match\n    - formats match but are in a different order\n    - formats match but there is a different count\n    `\n  )\n  .params(u =>\n    u.combineWithParams([\n      {\n        bundleFormats: ['bgra8unorm', 'rg8unorm'] as const,\n        passFormats: ['bgra8unorm', 'rg8unorm'] as const,\n        _compatible: true,\n      }, // control case\n      {\n        bundleFormats: ['bgra8unorm', 'rg8unorm'] as const,\n        passFormats: ['bgra8unorm', 'bgra8unorm'] as const,\n        _compatible: false,\n      },\n      {\n        bundleFormats: ['bgra8unorm', 'rg8unorm'] as const,\n        passFormats: ['rg8unorm', 'bgra8unorm'] as const,\n        _compatible: false,\n      },\n      {\n        bundleFormats: ['bgra8unorm', 'rg8unorm', 'rgba8unorm'] as const,\n        passFormats: ['rg8unorm', 'bgra8unorm'] as const,\n        _compatible: false,\n      },\n      {\n        bundleFormats: ['bgra8unorm', 'rg8unorm'] as const,\n        passFormats: ['rg8unorm', 'bgra8unorm', 'rgba8unorm'] as const,\n        _compatible: false,\n      },\n    ])\n  )\n  .fn(async t => {\n    const { bundleFormats, passFormats, _compatible } = t.params;\n\n    const bundleEncoder = t.device.createRenderBundleEncoder({\n      colorFormats: bundleFormats,\n    });\n    const bundle = bundleEncoder.finish();\n\n    const encoder = t.createEncoder('render pass', {\n      attachmentInfo: {\n        colorFormats: passFormats,\n      },\n    });\n    encoder.encoder.executeBundles([bundle]);\n\n    encoder.validateFinish(_compatible);\n  });\n\ng.test('depth_stencil_formats_mismatch')\n  .desc(\n    `\n    Tests executeBundles cannot be called with render bundles that do match the depthStencil of the\n    render pass. This includes:\n    - formats don't match\n    - formats have matching depth or stencil aspects, but other aspects are missing\n    `\n  )\n  .params(u =>\n    u.combineWithParams([\n      { bundleFormat: 'depth24plus', passFormat: 'depth24plus' }, // control case\n      { bundleFormat: 'depth24plus', passFormat: 'depth16unorm' },\n      { bundleFormat: 'depth24plus', passFormat: 'depth24plus-stencil8' },\n      { bundleFormat: 'stencil8', passFormat: 'depth24plus-stencil8' },\n    ] as const)\n  )\n  .beforeAllSubcases(t => {\n    const { bundleFormat, passFormat } = t.params;\n    t.selectDeviceForTextureFormatOrSkipTestCase([bundleFormat, passFormat]);\n  })\n  .fn(async t => {\n    const { bundleFormat, passFormat } = t.params;\n    const compatible = bundleFormat === passFormat;\n\n    const bundleEncoder = t.device.createRenderBundleEncoder({\n      colorFormats: [],\n      depthStencilFormat: bundleFormat,\n    });\n    const bundle = bundleEncoder.finish();\n\n    const encoder = t.createEncoder('render pass', {\n      attachmentInfo: {\n        colorFormats: [],\n        depthStencilFormat: passFormat,\n      },\n    });\n    encoder.encoder.executeBundles([bundle]);\n\n    encoder.validateFinish(compatible);\n  });\n\ng.test('depth_stencil_readonly_mismatch')\n  .desc(\n    `\n    Tests executeBundles cannot be called with render bundles that do match the depthStencil\n    readonly state of the render pass.\n    `\n  )\n  .params(u =>\n    u\n      .combine('depthStencilFormat', kDepthStencilFormats)\n      .beginSubcases()\n      .combine('bundleDepthReadOnly', [false, true])\n      .combine('bundleStencilReadOnly', [false, true])\n      .combine('passDepthReadOnly', [false, true])\n      .combine('passStencilReadOnly', [false, true])\n      .filter(p => {\n        // For combined depth/stencil formats the depth and stencil read only state must match\n        // in order to create a valid render bundle or render pass.\n        const depthStencilInfo = kTextureFormatInfo[p.depthStencilFormat];\n        if (depthStencilInfo.depth && depthStencilInfo.stencil) {\n          return (\n            p.passDepthReadOnly === p.passStencilReadOnly &&\n            p.bundleDepthReadOnly === p.bundleStencilReadOnly\n          );\n        }\n        return true;\n      })\n  )\n  .beforeAllSubcases(t => {\n    t.selectDeviceForTextureFormatOrSkipTestCase(t.params.depthStencilFormat);\n  })\n  .fn(async t => {\n    const {\n      depthStencilFormat,\n      bundleDepthReadOnly,\n      bundleStencilReadOnly,\n      passDepthReadOnly,\n      passStencilReadOnly,\n    } = t.params;\n\n    const compatible =\n      (!passDepthReadOnly || bundleDepthReadOnly === passDepthReadOnly) &&\n      (!passStencilReadOnly || bundleStencilReadOnly === passStencilReadOnly);\n\n    const bundleEncoder = t.device.createRenderBundleEncoder({\n      colorFormats: [],\n      depthStencilFormat,\n      depthReadOnly: bundleDepthReadOnly,\n      stencilReadOnly: bundleStencilReadOnly,\n    });\n    const bundle = bundleEncoder.finish();\n\n    const encoder = t.createEncoder('render pass', {\n      attachmentInfo: {\n        colorFormats: [],\n        depthStencilFormat,\n        depthReadOnly: passDepthReadOnly,\n        stencilReadOnly: passStencilReadOnly,\n      },\n    });\n    encoder.encoder.executeBundles([bundle]);\n\n    encoder.validateFinish(compatible);\n  });\n\ng.test('sample_count_mismatch')\n  .desc(\n    `\n    Tests executeBundles cannot be called with render bundles that do match the sampleCount of the\n    render pass.\n    `\n  )\n  .params(u =>\n    u.combineWithParams([\n      { bundleSamples: 1, passSamples: 1 }, // control case\n      { bundleSamples: 4, passSamples: 4 }, // control case\n      { bundleFormat: 4, passFormat: 1 },\n      { bundleFormat: 1, passFormat: 4 },\n    ])\n  )\n  .fn(async t => {\n    const { bundleSamples, passSamples } = t.params;\n\n    const compatible = bundleSamples === passSamples;\n\n    const bundleEncoder = t.device.createRenderBundleEncoder({\n      colorFormats: ['bgra8unorm'],\n      sampleCount: bundleSamples,\n    });\n    const bundle = bundleEncoder.finish();\n\n    const encoder = t.createEncoder('render pass', {\n      attachmentInfo: {\n        colorFormats: ['bgra8unorm'],\n        sampleCount: passSamples,\n      },\n    });\n    encoder.encoder.executeBundles([bundle]);\n\n    encoder.validateFinish(compatible);\n  });\n"],"file":"render_bundle.spec.js"}