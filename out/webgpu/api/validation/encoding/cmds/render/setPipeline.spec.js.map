{"version":3,"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/setPipeline.spec.ts"],"names":["description","makeTestGroup","ValidationTest","kRenderEncodeTypes","g","test","desc","paramsSubcasesOnly","u","combine","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,kDAA9B;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,6BAAnD;;AAEA,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACC,cAAD,CAAvB;;AAEPE,CAAC,CAACC,IAAF,CAAO,kBAAP;AACGC,IADH;AAEK;AACL;AACA,GAJA;;AAMGC,kBANH,CAMsB,CAAAC,CAAC;AACnBA,CAAC,CAACC,OAAF,CAAU,SAAV,EAAqBN,kBAArB,EAAyCM,OAAzC,CAAiD,OAAjD,EAA0D,CAAC,OAAD,EAAU,SAAV,CAA1D,CAPJ;;AASGC,aATH","sourcesContent":["export const description = `\nValidation tests for setPipeline on render pass and render bundle.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { ValidationTest, kRenderEncodeTypes } from '../../../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('invalid_pipeline')\n  .desc(\n    `\nTests setPipeline should generate an error iff using an 'invalid' pipeline.\n  `\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('encoder', kRenderEncodeTypes).combine('state', ['valid', 'invalid'] as const)\n  )\n  .unimplemented();\n"],"file":"setPipeline.spec.js"}