{"version":3,"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/dynamic_state.spec.ts"],"names":["description","makeTestGroup","ValidationTest","F","testViewportCall","success","v","attachmentSize","width","height","depthOrArrayLayers","attachment","device","createTexture","format","size","usage","GPUTextureUsage","RENDER_ATTACHMENT","encoder","createCommandEncoder","pass","beginRenderPass","colorAttachments","view","createView","loadValue","storeOp","setViewport","x","y","w","h","minDepth","maxDepth","endPass","expectValidationError","finish","testScissorCall","s","shouldThrow","setScissorRect","createDummyRenderPassEncoder","g","test","desc","paramsSubcasesOnly","fn","t","params","u","combineWithParams","attachmentWidth","attachmentHeight","dx","dy","dw","dh","r","b","a","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","encoders","setBlendConstant","value","setStencilReference"],"mappings":"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","sourcesContent":["export const description = `\nAPI validation tests for dynamic state commands (setViewport/ScissorRect/BlendColor...).\n\nTODO: ensure existing tests cover these notes. Note many of these may be operation tests instead.\n> - setViewport\n>     - {x, y} = {0, invalid values if any}\n>     - {width, height, minDepth, maxDepth} = {\n>         - least possible value that's valid\n>         - greatest possible negative value that's invalid\n>         - greatest possible positive value that's valid\n>         - least possible positive value that's invalid if any\n>         - }\n>     - minDepth {<, =, >} maxDepth\n> - setScissorRect\n>     - {width, height} = 0\n>     - {x+width, y+height} = attachment size + 1\n> - setBlendConstant\n>     - color {slightly, very} out of range\n>     - used with a simple pipeline that {does, doesn't} use it\n> - setStencilReference\n>     - {0, max}\n>     - used with a simple pipeline that {does, doesn't} use it\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { ValidationTest } from '../../../validation_test.js';\n\ninterface ViewportCall {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  minDepth: number;\n  maxDepth: number;\n}\n\ninterface ScissorCall {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nclass F extends ValidationTest {\n  testViewportCall(\n    success: boolean,\n    v: ViewportCall,\n    attachmentSize: GPUExtent3D = { width: 1, height: 1, depthOrArrayLayers: 1 }\n  ) {\n    const attachment = this.device.createTexture({\n      format: 'rgba8unorm',\n      size: attachmentSize,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const encoder = this.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: attachment.createView(),\n          loadValue: 'load',\n          storeOp: 'store',\n        },\n      ],\n    });\n    pass.setViewport(v.x, v.y, v.w, v.h, v.minDepth, v.maxDepth);\n    pass.endPass();\n\n    this.expectValidationError(() => {\n      encoder.finish();\n    }, !success);\n  }\n\n  testScissorCall(\n    success: boolean | 'type-error',\n    s: ScissorCall,\n    attachmentSize: GPUExtent3D = { width: 1, height: 1, depthOrArrayLayers: 1 }\n  ) {\n    const attachment = this.device.createTexture({\n      format: 'rgba8unorm',\n      size: attachmentSize,\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const encoder = this.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: attachment.createView(),\n          loadValue: 'load',\n          storeOp: 'store',\n        },\n      ],\n    });\n    if (success === 'type-error') {\n      this.shouldThrow('TypeError', () => {\n        pass.setScissorRect(s.x, s.y, s.w, s.h);\n      });\n    } else {\n      pass.setScissorRect(s.x, s.y, s.w, s.h);\n      pass.endPass();\n\n      this.expectValidationError(() => {\n        encoder.finish();\n      }, !success);\n    }\n  }\n\n  createDummyRenderPassEncoder(): { encoder: GPUCommandEncoder; pass: GPURenderPassEncoder } {\n    const attachment = this.device.createTexture({\n      format: 'rgba8unorm',\n      size: [1, 1, 1],\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n\n    const encoder = this.device.createCommandEncoder();\n    const pass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          view: attachment.createView(),\n          loadValue: 'load',\n          storeOp: 'store',\n        },\n      ],\n    });\n\n    return { encoder, pass };\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('setViewport,x_y_width_height_nonnegative')\n  .desc(\n    `Test that the parameters of setViewport to define the box must be non-negative.\n\nTODO Test -0 (it should be valid) but can't be tested because the harness complains about duplicate parameters.\nTODO Test the first value smaller than -0`\n  )\n  .paramsSubcasesOnly([\n    // Control case: everything to 0 is ok, covers the empty viewport case.\n    { x: 0, y: 0, w: 0, h: 0 },\n\n    // Test -1\n    { x: -1, y: 0, w: 0, h: 0 },\n    { x: 0, y: -1, w: 0, h: 0 },\n    { x: 0, y: 0, w: -1, h: 0 },\n    { x: 0, y: 0, w: 0, h: -1 },\n  ])\n  .fn(t => {\n    const { x, y, w, h } = t.params;\n    const success = x >= 0 && y >= 0 && w >= 0 && h >= 0;\n    t.testViewportCall(success, { x, y, w, h, minDepth: 0, maxDepth: 1 });\n  });\n\ng.test('setViewport,xy_rect_contained_in_attachment')\n  .desc(\n    'Test that the rectangle defined by x, y, width, height must be contained in the attachments'\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combineWithParams([\n        { attachmentWidth: 3, attachmentHeight: 5 },\n        { attachmentWidth: 5, attachmentHeight: 3 },\n        { attachmentWidth: 1024, attachmentHeight: 1 },\n        { attachmentWidth: 1, attachmentHeight: 1024 },\n      ])\n      .combineWithParams([\n        // Control case: a full viewport is valid.\n        { dx: 0, dy: 0, dw: 0, dh: 0 },\n\n        // Other valid cases with a partial viewport.\n        { dx: 1, dy: 0, dw: -1, dh: 0 },\n        { dx: 0, dy: 1, dw: 0, dh: -1 },\n        { dx: 0, dy: 0, dw: -1, dh: 0 },\n        { dx: 0, dy: 0, dw: 0, dh: -1 },\n\n        // Test with a small value that causes the viewport to go outside the attachment.\n        { dx: 1, dy: 0, dw: 0, dh: 0 },\n        { dx: 0, dy: 1, dw: 0, dh: 0 },\n        { dx: 0, dy: 0, dw: 1, dh: 0 },\n        { dx: 0, dy: 0, dw: 0, dh: 1 },\n      ])\n  )\n  .fn(t => {\n    const { attachmentWidth, attachmentHeight, dx, dy, dw, dh } = t.params;\n    const x = dx;\n    const y = dy;\n    const w = attachmentWidth + dw;\n    const h = attachmentWidth + dh;\n\n    const success = x + w <= attachmentWidth && y + h <= attachmentHeight;\n    t.testViewportCall(\n      success,\n      { x, y, w, h, minDepth: 0, maxDepth: 1 },\n      { width: attachmentWidth, height: attachmentHeight, depthOrArrayLayers: 1 }\n    );\n  });\n\ng.test('setViewport,depth_rangeAndOrder')\n  .desc('Test that 0 <= minDepth <= maxDepth <= 1')\n  .paramsSubcasesOnly([\n    // Success cases\n    { minDepth: 0, maxDepth: 1 },\n    { minDepth: -0, maxDepth: -0 },\n    { minDepth: 1, maxDepth: 1 },\n    { minDepth: 0.3, maxDepth: 0.7 },\n    { minDepth: 0.7, maxDepth: 0.7 },\n    { minDepth: 0.3, maxDepth: 0.3 },\n\n    // Invalid cases\n    { minDepth: -0.1, maxDepth: 1 },\n    { minDepth: 0, maxDepth: 1.1 },\n    { minDepth: 0.5, maxDepth: 0.49999 },\n  ])\n  .fn(t => {\n    const { minDepth, maxDepth } = t.params;\n    const success =\n      0 <= minDepth && minDepth <= 1 && 0 <= maxDepth && maxDepth <= 1 && minDepth <= maxDepth;\n    t.testViewportCall(success, { x: 0, y: 0, w: 1, h: 1, minDepth, maxDepth });\n  });\n\ng.test('setScissorRect,x_y_width_height_nonnegative')\n  .desc(\n    `Test that the parameters of setScissorRect to define the box must be non-negative or a TypeError is thrown.\n\nTODO Test -0 (it should be valid) but can't be tested because the harness complains about duplicate parameters.\nTODO Test the first value smaller than -0`\n  )\n  .paramsSubcasesOnly([\n    // Control case: everything to 0 is ok, covers the empty scissor case.\n    { x: 0, y: 0, w: 0, h: 0 },\n\n    // Test -1\n    { x: -1, y: 0, w: 0, h: 0 },\n    { x: 0, y: -1, w: 0, h: 0 },\n    { x: 0, y: 0, w: -1, h: 0 },\n    { x: 0, y: 0, w: 0, h: -1 },\n  ])\n  .fn(t => {\n    const { x, y, w, h } = t.params;\n    const success = x >= 0 && y >= 0 && w >= 0 && h >= 0;\n    t.testScissorCall(success ? true : 'type-error', { x, y, w, h });\n  });\n\ng.test('setScissorRect,xy_rect_contained_in_attachment')\n  .desc(\n    'Test that the rectangle defined by x, y, width, height must be contained in the attachments'\n  )\n  .paramsSubcasesOnly(u =>\n    u\n      .combineWithParams([\n        { attachmentWidth: 3, attachmentHeight: 5 },\n        { attachmentWidth: 5, attachmentHeight: 3 },\n        { attachmentWidth: 1024, attachmentHeight: 1 },\n        { attachmentWidth: 1, attachmentHeight: 1024 },\n      ])\n      .combineWithParams([\n        // Control case: a full scissor is valid.\n        { dx: 0, dy: 0, dw: 0, dh: 0 },\n\n        // Other valid cases with a partial scissor.\n        { dx: 1, dy: 0, dw: -1, dh: 0 },\n        { dx: 0, dy: 1, dw: 0, dh: -1 },\n        { dx: 0, dy: 0, dw: -1, dh: 0 },\n        { dx: 0, dy: 0, dw: 0, dh: -1 },\n\n        // Test with a small value that causes the scissor to go outside the attachment.\n        { dx: 1, dy: 0, dw: 0, dh: 0 },\n        { dx: 0, dy: 1, dw: 0, dh: 0 },\n        { dx: 0, dy: 0, dw: 1, dh: 0 },\n        { dx: 0, dy: 0, dw: 0, dh: 1 },\n      ])\n  )\n  .fn(t => {\n    const { attachmentWidth, attachmentHeight, dx, dy, dw, dh } = t.params;\n    const x = dx;\n    const y = dy;\n    const w = attachmentWidth + dw;\n    const h = attachmentWidth + dh;\n\n    const success = x + w <= attachmentWidth && y + h <= attachmentHeight;\n    t.testScissorCall(\n      success,\n      { x, y, w, h },\n      { width: attachmentWidth, height: attachmentHeight, depthOrArrayLayers: 1 }\n    );\n  });\n\ng.test('setBlendConstant')\n  .desc('Test that almost any color value is valid for setBlendConstant')\n  .paramsSubcasesOnly([\n    { r: 1.0, g: 1.0, b: 1.0, a: 1.0 },\n    { r: -1.0, g: -1.0, b: -1.0, a: -1.0 },\n    { r: Number.MAX_SAFE_INTEGER, g: Number.MIN_SAFE_INTEGER, b: -0, a: 100000 },\n  ])\n  .fn(t => {\n    const { r, g, b, a } = t.params;\n    const encoders = t.createDummyRenderPassEncoder();\n    encoders.pass.setBlendConstant({ r, g, b, a });\n    encoders.pass.endPass();\n    encoders.encoder.finish();\n  });\n\ng.test('setStencilReference')\n  .desc('Test that almost any stencil reference value is valid for setStencilReference')\n  .paramsSubcasesOnly([\n    { value: 1 }, //\n    { value: 0 },\n    { value: 1000 },\n    { value: 0xffffffff },\n  ])\n  .fn(t => {\n    const { value } = t.params;\n    const encoders = t.createDummyRenderPassEncoder();\n    encoders.pass.setStencilReference(value);\n    encoders.pass.endPass();\n    encoders.encoder.finish();\n  });\n"],"file":"dynamic_state.spec.js"}