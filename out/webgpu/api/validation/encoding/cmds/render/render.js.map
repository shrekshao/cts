{"version":3,"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/render.ts"],"names":["kUnitCaseParamsBuilder","kRenderEncodeTypes","kRenderEncodeTypeParams","combine","kBufferStates","buildBufferOffsetAndSizeOOBTestParams","minAlignment","bufferSize","combineWithParams","offset","size","undefined"],"mappings":";AAAA;AACA,GADA,SAASA,sBAAT,QAAuC,sDAAvC,CACA,SAASC,kBAAT,QAAmC,6BAAnC;AAEA,OAAO,MAAMC,uBAAuB,GAAGF,sBAAsB,CAACG,OAAvB;AACrC,SADqC;AAErCF,kBAFqC,CAAhC;;;AAKP,OAAO,MAAMG,aAAa,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,WAArB,CAAtB;;AAEP,OAAO,SAASC,qCAAT,CAA+CC,YAA/C,EAAqEC,UAArE,EAAyF;AAC9F,SAAOL,uBAAuB,CAACM,iBAAxB,CAA0C;AAC/C;AACA,IAAEC,MAAM,EAAE,CAAV,EAAaC,IAAI,EAAE,CAAnB,EAF+C;AAG/C,IAAED,MAAM,EAAE,CAAV,EAAaC,IAAI,EAAE,CAAnB,EAH+C,EAGvB;AACxB,IAAED,MAAM,EAAE,CAAV,EAAaC,IAAI,EAAE,CAAnB,EAJ+C;AAK/C,IAAED,MAAM,EAAE,CAAV,EAAaC,IAAI,EAAE,CAAnB,EAL+C;AAM/C,IAAED,MAAM,EAAE,CAAV,EAAaC,IAAI,EAAEH,UAAnB,EAN+C;AAO/C,IAAEE,MAAM,EAAE,CAAV,EAAaC,IAAI,EAAEH,UAAU,GAAG,CAAhC,EAP+C;AAQ/C,IAAEE,MAAM,EAAEH,YAAV,EAAwBI,IAAI,EAAEH,UAA9B,EAR+C;AAS/C,IAAEE,MAAM,EAAEH,YAAV,EAAwBI,IAAI,EAAEH,UAAU,GAAGD,YAA3C,EAT+C;AAU/C,IAAEG,MAAM,EAAEF,UAAU,GAAG,CAAvB,EAA0BG,IAAI,EAAE,CAAhC,EAV+C;AAW/C,IAAED,MAAM,EAAEF,UAAV,EAAsBG,IAAI,EAAE,CAA5B,EAX+C;AAY/C;AACA,IAAED,MAAM,EAAE,CAAV,EAAaC,IAAI,EAAEC,SAAnB,EAb+C,EAaf;AAChC,IAAEF,MAAM,EAAEH,YAAV,EAAwBI,IAAI,EAAEC,SAA9B,EAd+C;AAe/C,IAAEF,MAAM,EAAEF,UAAU,GAAGD,YAAvB,EAAqCI,IAAI,EAAEC,SAA3C,EAf+C;AAgB/C,IAAEF,MAAM,EAAEF,UAAV,EAAsBG,IAAI,EAAEC,SAA5B,EAhB+C;AAiB/C,IAAEF,MAAM,EAAEF,UAAU,GAAGD,YAAvB,EAAqCI,IAAI,EAAEC,SAA3C,EAjB+C,CAA1C,CAAP;;AAmBD","sourcesContent":["import { kUnitCaseParamsBuilder } from '../../../../../../common/framework/params_builder.js';\nimport { kRenderEncodeTypes } from '../../../validation_test.js';\n\nexport const kRenderEncodeTypeParams = kUnitCaseParamsBuilder.combine(\n  'encoder',\n  kRenderEncodeTypes\n);\n\nexport const kBufferStates = ['valid', 'invalid', 'destroyed'] as const;\n\nexport function buildBufferOffsetAndSizeOOBTestParams(minAlignment: number, bufferSize: number) {\n  return kRenderEncodeTypeParams.combineWithParams([\n    // Explicit size\n    { offset: 0, size: 0 },\n    { offset: 0, size: 1 }, // control case\n    { offset: 0, size: 4 },\n    { offset: 0, size: 5 },\n    { offset: 0, size: bufferSize },\n    { offset: 0, size: bufferSize + 4 },\n    { offset: minAlignment, size: bufferSize },\n    { offset: minAlignment, size: bufferSize - minAlignment },\n    { offset: bufferSize - 1, size: 1 },\n    { offset: bufferSize, size: 1 },\n    // Implicit size: buffer.size - offset\n    { offset: 0, size: undefined }, // control case\n    { offset: minAlignment, size: undefined },\n    { offset: bufferSize - minAlignment, size: undefined },\n    { offset: bufferSize, size: undefined },\n    { offset: bufferSize + minAlignment, size: undefined },\n  ]);\n}\n"],"file":"render.js"}