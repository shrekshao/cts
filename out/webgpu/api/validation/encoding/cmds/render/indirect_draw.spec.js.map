{"version":3,"sources":["../../../../../../../src/webgpu/api/validation/encoding/cmds/render/indirect_draw.spec.ts"],"names":["description","makeTestGroup","GPUConst","ValidationTest","kRenderEncodeTypeParams","kBufferStates","kIndirectDrawTestParams","combine","g","test","desc","paramsSubcasesOnly","unimplemented","BufferUsage","INDIRECT","COPY_DST","expandWithParams","p","indirectParamsSize","indexed","indirectOffset","bufferSize"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,kDAA9B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,cAAT,QAA+B,6BAA/B;;AAEA,SAASC,uBAAT,EAAkCC,aAAlC,QAAuD,aAAvD;;AAEA,MAAMC,uBAAuB,GAAGF,uBAAuB,CAACG,OAAxB,CAAgC,SAAhC,EAA2C,CAAC,IAAD,EAAO,KAAP,CAA3C,CAAhC;;AAEA,OAAO,MAAMC,CAAC,GAAGP,aAAa,CAACE,cAAD,CAAvB;;AAEPK,CAAC,CAACC,IAAF,CAAO,iBAAP;AACGC,IADH;AAEK;AACL;AACA,GAJA;;AAMGC,kBANH,CAMsBL,uBAAuB,CAACC,OAAxB,CAAgC,OAAhC,EAAyCF,aAAzC,CANtB;AAOGO,aAPH;;AASAJ,CAAC,CAACC,IAAF,CAAO,uBAAP;AACGC,IADH;AAEK;AACL;AACA,GAJA;;AAMGC,kBANH;AAOIL,uBAAuB,CAACC,OAAxB,CAAgC,OAAhC,EAAyC;AACvCL,QAAQ,CAACW,WAAT,CAAqBC,QADkB,EACR;AAC/BZ,QAAQ,CAACW,WAAT,CAAqBE,QAFkB;AAGvCb,QAAQ,CAACW,WAAT,CAAqBE,QAArB,GAAgCb,QAAQ,CAACW,WAAT,CAAqBC,QAHd,CAAzC,CAPJ;;;AAaGF,aAbH;;AAeAJ,CAAC,CAACC,IAAF,CAAO,2BAAP;AACGC,IADH;AAEK;AACL;AACA,GAJA;;AAMGC,kBANH,CAMsBL,uBAAuB,CAACC,OAAxB,CAAgC,QAAhC,EAA0C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA1C,CANtB;AAOGK,aAPH;;AASAJ,CAAC,CAACC,IAAF,CAAO,qBAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAjBA;;AAmBGC,kBAnBH;AAoBIL,uBAAuB,CAACU,gBAAxB,CAAyCC,CAAC,IAAI;AAC5C,QAAMC,kBAAkB,GAAGD,CAAC,CAACE,OAAF,GAAY,EAAZ,GAAiB,EAA5C;AACA,SAAO;AACL,IAAEC,cAAc,EAAE,CAAlB,EAAqBC,UAAU,EAAE,CAAjC,EADK;AAEL,IAAED,cAAc,EAAE,CAAlB,EAAqBC,UAAU,EAAEH,kBAAjC,EAFK;AAGL,IAAEE,cAAc,EAAE,CAAlB,EAAqBC,UAAU,EAAEH,kBAAkB,GAAG,CAAtD,EAHK;AAIL,IAAEE,cAAc,EAAE,CAAlB,EAAqBC,UAAU,EAAEH,kBAAkB,GAAG,CAAtD,EAJK;AAKL,IAAEE,cAAc,EAAE,CAAlB,EAAqBC,UAAU,EAAEH,kBAAkB,GAAG,CAAtD,EALK;AAML,IAAEE,cAAc,EAAE,CAAlB,EAAqBC,UAAU,EAAEH,kBAAkB,GAAG,CAAtD,EANK;AAOL,IAAEE,cAAc,EAAE,CAAlB,EAAqBC,UAAU,EAAEH,kBAAkB,GAAG,CAAtD,EAPK;AAQL,IAAEE,cAAc,EAAE,CAAlB,EAAqBC,UAAU,EAAEH,kBAAkB,GAAG,CAAtD,EARK;AASL,IAAEE,cAAc,EAAE,CAAlB,EAAqBC,UAAU,EAAEH,kBAAkB,GAAG,CAAtD,EATK;AAUL,IAAEE,cAAc,EAAEF,kBAAlB,EAAsCG,UAAU,EAAEH,kBAAlD,EAVK;AAWL,IAAEE,cAAc,EAAEF,kBAAkB,GAAG,CAAvC,EAA0CG,UAAU,EAAEH,kBAAtD,EAXK,CAAP;;AAaD,CAfD,CApBJ;;AAqCGN,aArCH","sourcesContent":["export const description = `\nValidation tests for drawIndirect/drawIndexedIndirect on render pass and render bundle.\n`;\n\nimport { makeTestGroup } from '../../../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../../../constants.js';\nimport { ValidationTest } from '../../../validation_test.js';\n\nimport { kRenderEncodeTypeParams, kBufferStates } from './render.js';\n\nconst kIndirectDrawTestParams = kRenderEncodeTypeParams.combine('indexed', [true, false] as const);\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('indirect_buffer')\n  .desc(\n    `\nTests indirect buffer must be valid.\n  `\n  )\n  .paramsSubcasesOnly(kIndirectDrawTestParams.combine('state', kBufferStates))\n  .unimplemented();\n\ng.test('indirect_buffer_usage')\n  .desc(\n    `\nTests indirect buffer must have 'Indirect' usage.\n  `\n  )\n  .paramsSubcasesOnly(\n    kIndirectDrawTestParams.combine('usage', [\n      GPUConst.BufferUsage.INDIRECT, // control case\n      GPUConst.BufferUsage.COPY_DST,\n      GPUConst.BufferUsage.COPY_DST | GPUConst.BufferUsage.INDIRECT,\n    ] as const)\n  )\n  .unimplemented();\n\ng.test('indirect_offset_alignment')\n  .desc(\n    `\nTests indirect offset must be a multiple of 4.\n  `\n  )\n  .paramsSubcasesOnly(kIndirectDrawTestParams.combine('offset', [0, 2, 4] as const))\n  .unimplemented();\n\ng.test('indirect_offset_oob')\n  .desc(\n    `\nTests indirect draw calls with various indirect offsets and buffer sizes.\n- (offset, b.size) is\n  - (0, 0)\n  - (0, min size) (control case)\n  - (0, min size + 1) (control case)\n  - (0, min size - 1)\n  - (0, min size - min alignment)\n  - (min alignment, min size + min alignment)\n  - (min alignment, min size + min alignment - 1)\n  - (min alignment +/- 1, min size + alignment)\n  - (min size, min size)\n  - (min size + min alignment, min size)\n  - min size = indirect draw parameters size\n  - x =(drawIndirect, drawIndexedIndirect)\n  `\n  )\n  .paramsSubcasesOnly(\n    kIndirectDrawTestParams.expandWithParams(p => {\n      const indirectParamsSize = p.indexed ? 20 : 16;\n      return [\n        { indirectOffset: 0, bufferSize: 0 },\n        { indirectOffset: 0, bufferSize: indirectParamsSize },\n        { indirectOffset: 0, bufferSize: indirectParamsSize + 1 },\n        { indirectOffset: 0, bufferSize: indirectParamsSize - 1 },\n        { indirectOffset: 0, bufferSize: indirectParamsSize - 4 },\n        { indirectOffset: 4, bufferSize: indirectParamsSize + 4 },\n        { indirectOffset: 4, bufferSize: indirectParamsSize + 3 },\n        { indirectOffset: 3, bufferSize: indirectParamsSize + 4 },\n        { indirectOffset: 5, bufferSize: indirectParamsSize + 4 },\n        { indirectOffset: indirectParamsSize, bufferSize: indirectParamsSize },\n        { indirectOffset: indirectParamsSize + 4, bufferSize: indirectParamsSize },\n      ] as const;\n    })\n  )\n  .unimplemented();\n"],"file":"indirect_draw.spec.js"}