{"version":3,"sources":["../../../../../../src/webgpu/api/validation/encoding/cmds/clearBuffer.spec.ts"],"names":["description","makeTestGroup","kBufferUsages","kResourceStates","kMaxSafeMultipleOf8","ValidationTest","F","TestClearBuffer","options","buffer","offset","size","isSuccess","commandEncoder","device","createCommandEncoder","clearBuffer","expectValidationError","finish","g","test","desc","params","u","combine","fn","t","bufferState","createBufferWithState","usage","GPUBufferUsage","COPY_DST","cmd","queue","submit","paramsSubcasesOnly","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","mismatchedDevice","createBuffer","trackForCleanup","_isSuccess"],"mappings":"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","sourcesContent":["export const description = `\nAPI validation tests for clearBuffer.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kBufferUsages } from '../../../../capability_info.js';\nimport { kResourceStates } from '../../../../gpu_test.js';\nimport { kMaxSafeMultipleOf8 } from '../../../../util/math.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nclass F extends ValidationTest {\n  TestClearBuffer(options: {\n    buffer: GPUBuffer;\n    offset: number | undefined;\n    size: number | undefined;\n    isSuccess: boolean;\n  }): void {\n    const { buffer, offset, size, isSuccess } = options;\n\n    const commandEncoder = this.device.createCommandEncoder();\n    commandEncoder.clearBuffer(buffer, offset, size);\n\n    this.expectValidationError(() => {\n      commandEncoder.finish();\n    }, !isSuccess);\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('buffer_state')\n  .desc(`Test that clearing an invalid or destroyed buffer fails.`)\n  .params(u => u.combine('bufferState', kResourceStates))\n  .fn(async t => {\n    const { bufferState } = t.params;\n\n    const buffer = t.createBufferWithState(bufferState, {\n      size: 8,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    const commandEncoder = t.device.createCommandEncoder();\n    commandEncoder.clearBuffer(buffer, 0, 8);\n\n    if (bufferState === 'invalid') {\n      t.expectValidationError(() => {\n        commandEncoder.finish();\n      });\n    } else {\n      const cmd = commandEncoder.finish();\n      t.expectValidationError(() => {\n        t.device.queue.submit([cmd]);\n      }, bufferState === 'destroyed');\n    }\n  });\n\ng.test('buffer,device_mismatch')\n  .desc(`Tests clearBuffer cannot be called with buffer created from another device.`)\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(async t => {\n    const { mismatched } = t.params;\n    const device = mismatched ? t.mismatchedDevice : t.device;\n    const size = 8;\n\n    const buffer = device.createBuffer({\n      size,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n    t.trackForCleanup(buffer);\n\n    t.TestClearBuffer({\n      buffer,\n      offset: 0,\n      size,\n      isSuccess: !mismatched,\n    });\n  });\n\ng.test('default_args')\n  .desc(`Test that calling clearBuffer with a default offset and size is valid.`)\n  .paramsSubcasesOnly([\n    { offset: undefined, size: undefined },\n    { offset: 4, size: undefined },\n    { offset: undefined, size: 8 },\n  ] as const)\n  .fn(async t => {\n    const { offset, size } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestClearBuffer({\n      buffer,\n      offset,\n      size,\n      isSuccess: true,\n    });\n  });\n\ng.test('buffer_usage')\n  .desc(`Test that only buffers with COPY_DST usage are valid to use with copyBuffers.`)\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('usage', kBufferUsages)\n  )\n  .fn(async t => {\n    const { usage } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage,\n    });\n\n    t.TestClearBuffer({\n      buffer,\n      offset: 0,\n      size: 16,\n      isSuccess: usage === GPUBufferUsage.COPY_DST,\n    });\n  });\n\ng.test('size_alignment')\n  .desc(\n    `\n    Test that the clear size must be 4 byte aligned.\n    - Test size is not a multiple of 4.\n    - Test size is 0.\n    - Test size overflows the buffer size.\n    - Test size is omitted.\n  `\n  )\n  .paramsSubcasesOnly([\n    { size: 0, _isSuccess: true },\n    { size: 2, _isSuccess: false },\n    { size: 4, _isSuccess: true },\n    { size: 5, _isSuccess: false },\n    { size: 8, _isSuccess: true },\n    { size: 20, _isSuccess: false },\n    { size: undefined, _isSuccess: true },\n  ] as const)\n  .fn(async t => {\n    const { size, _isSuccess: isSuccess } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestClearBuffer({\n      buffer,\n      offset: 0,\n      size,\n      isSuccess,\n    });\n  });\n\ng.test('offset_alignment')\n  .desc(\n    `\n    Test that the clear offsets must be 4 byte aligned.\n    - Test offset is not a multiple of 4.\n    - Test offset is larger than the buffer size.\n    - Test offset is omitted.\n  `\n  )\n  .paramsSubcasesOnly([\n    { offset: 0, _isSuccess: true },\n    { offset: 2, _isSuccess: false },\n    { offset: 4, _isSuccess: true },\n    { offset: 5, _isSuccess: false },\n    { offset: 8, _isSuccess: true },\n    { offset: 20, _isSuccess: false },\n    { offset: undefined, _isSuccess: true },\n  ] as const)\n  .fn(async t => {\n    const { offset, _isSuccess: isSuccess } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestClearBuffer({\n      buffer,\n      offset,\n      size: 8,\n      isSuccess,\n    });\n  });\n\ng.test('overflow')\n  .desc(`Test that clears which may cause arthimetic overflows are invalid.`)\n  .paramsSubcasesOnly([\n    { offset: 0, size: kMaxSafeMultipleOf8 },\n    { offset: 16, size: kMaxSafeMultipleOf8 },\n    { offset: kMaxSafeMultipleOf8, size: 16 },\n    { offset: kMaxSafeMultipleOf8, size: kMaxSafeMultipleOf8 },\n  ] as const)\n  .fn(async t => {\n    const { offset, size } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestClearBuffer({\n      buffer,\n      offset,\n      size,\n      isSuccess: false,\n    });\n  });\n\ng.test('out_of_bounds')\n  .desc(`Test that clears which exceed the buffer bounds are invalid.`)\n  .paramsSubcasesOnly([\n    { offset: 0, size: 32, _isSuccess: true },\n    { offset: 0, size: 36 },\n    { offset: 32, size: 0, _isSuccess: true },\n    { offset: 32, size: 4 },\n    { offset: 36, size: 4 },\n    { offset: 36, size: 0 },\n    { offset: 20, size: 16 },\n    { offset: 20, size: 12, _isSuccess: true },\n  ] as const)\n  .fn(async t => {\n    const { offset, size, _isSuccess = false } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 32,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestClearBuffer({\n      buffer,\n      offset,\n      size,\n      isSuccess: _isSuccess,\n    });\n  });\n"],"file":"clearBuffer.spec.js"}