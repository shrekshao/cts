{"version":3,"sources":["../../../../../../src/webgpu/api/validation/encoding/cmds/copyBufferToBuffer.spec.ts"],"names":["description","makeTestGroup","kBufferUsages","kResourceStates","kMaxSafeMultipleOf8","ValidationTest","F","TestCopyBufferToBuffer","options","srcBuffer","srcOffset","dstBuffer","dstOffset","copySize","expectation","commandEncoder","device","createCommandEncoder","copyBufferToBuffer","expectValidationError","finish","cmd","queue","submit","g","test","params","u","combine","fn","t","srcBufferState","dstBufferState","createBufferWithState","size","usage","GPUBufferUsage","COPY_SRC","COPY_DST","shouldFinishError","shouldSubmitSuccess","desc","paramsSubcasesOnly","srcMismatched","dstMismatched","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","mismatchedDevice","createBuffer","trackForCleanup","srcUsage","dstUsage","isSuccess","_isSuccess","buffer"],"mappings":"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","sourcesContent":["export const description = `\ncopyBufferToBuffer tests.\n\nTest Plan:\n* Buffer is valid/invalid\n  - the source buffer is invalid\n  - the destination buffer is invalid\n* Buffer usages\n  - the source buffer is created without GPUBufferUsage::COPY_SRC\n  - the destination buffer is created without GPUBufferUsage::COPY_DEST\n* CopySize\n  - copySize is not a multiple of 4\n  - copySize is 0\n* copy offsets\n  - sourceOffset is not a multiple of 4\n  - destinationOffset is not a multiple of 4\n* Arithmetic overflow\n  - (sourceOffset + copySize) is overflow\n  - (destinationOffset + copySize) is overflow\n* Out of bounds\n  - (sourceOffset + copySize) > size of source buffer\n  - (destinationOffset + copySize) > size of destination buffer\n* Source buffer and destination buffer are the same buffer\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kBufferUsages } from '../../../../capability_info.js';\nimport { kResourceStates } from '../../../../gpu_test.js';\nimport { kMaxSafeMultipleOf8 } from '../../../../util/math.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nclass F extends ValidationTest {\n  TestCopyBufferToBuffer(options: {\n    srcBuffer: GPUBuffer;\n    srcOffset: number;\n    dstBuffer: GPUBuffer;\n    dstOffset: number;\n    copySize: number;\n    expectation: 'Success' | 'FinishError' | 'SubmitError';\n  }): void {\n    const { srcBuffer, srcOffset, dstBuffer, dstOffset, copySize, expectation } = options;\n\n    const commandEncoder = this.device.createCommandEncoder();\n    commandEncoder.copyBufferToBuffer(srcBuffer, srcOffset, dstBuffer, dstOffset, copySize);\n\n    if (expectation === 'FinishError') {\n      this.expectValidationError(() => {\n        commandEncoder.finish();\n      });\n    } else {\n      const cmd = commandEncoder.finish();\n      this.expectValidationError(() => {\n        this.device.queue.submit([cmd]);\n      }, expectation === 'SubmitError');\n    }\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('buffer_state')\n  .params(u =>\n    u //\n      .combine('srcBufferState', kResourceStates)\n      .combine('dstBufferState', kResourceStates)\n  )\n  .fn(async t => {\n    const { srcBufferState, dstBufferState } = t.params;\n    const srcBuffer = t.createBufferWithState(srcBufferState, {\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST,\n    });\n    const dstBuffer = t.createBufferWithState(dstBufferState, {\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST,\n    });\n\n    const shouldFinishError = srcBufferState === 'invalid' || dstBufferState === 'invalid';\n    const shouldSubmitSuccess = srcBufferState === 'valid' && dstBufferState === 'valid';\n    const expectation = shouldSubmitSuccess\n      ? 'Success'\n      : shouldFinishError\n      ? 'FinishError'\n      : 'SubmitError';\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset: 0,\n      dstBuffer,\n      dstOffset: 0,\n      copySize: 8,\n      expectation,\n    });\n  });\n\ng.test('buffer,device_mismatch')\n  .desc(\n    'Tests copyBufferToBuffer cannot be called with src buffer or dst buffer created from another device'\n  )\n  .paramsSubcasesOnly([\n    { srcMismatched: false, dstMismatched: false }, // control case\n    { srcMismatched: true, dstMismatched: false },\n    { srcMismatched: false, dstMismatched: true },\n  ] as const)\n  .beforeAllSubcases(t => {\n    t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(async t => {\n    const { srcMismatched, dstMismatched } = t.params;\n    const mismatched = srcMismatched || dstMismatched;\n\n    const device = mismatched ? t.mismatchedDevice : t.device;\n\n    const srcBuffer = device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    t.trackForCleanup(srcBuffer);\n\n    const dstBuffer = device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n    t.trackForCleanup(dstBuffer);\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset: 0,\n      dstBuffer,\n      dstOffset: 0,\n      copySize: 8,\n      expectation: mismatched ? 'FinishError' : 'Success',\n    });\n  });\n\ng.test('buffer_usage')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('srcUsage', kBufferUsages)\n      .combine('dstUsage', kBufferUsages)\n  )\n  .fn(async t => {\n    const { srcUsage, dstUsage } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 16,\n      usage: srcUsage,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 16,\n      usage: dstUsage,\n    });\n\n    const isSuccess = srcUsage === GPUBufferUsage.COPY_SRC && dstUsage === GPUBufferUsage.COPY_DST;\n    const expectation = isSuccess ? 'Success' : 'FinishError';\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset: 0,\n      dstBuffer,\n      dstOffset: 0,\n      copySize: 8,\n      expectation,\n    });\n  });\n\ng.test('copy_size_alignment')\n  .paramsSubcasesOnly([\n    { copySize: 0, _isSuccess: true },\n    { copySize: 2, _isSuccess: false },\n    { copySize: 4, _isSuccess: true },\n    { copySize: 5, _isSuccess: false },\n    { copySize: 8, _isSuccess: true },\n  ] as const)\n  .fn(async t => {\n    const { copySize, _isSuccess: isSuccess } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset: 0,\n      dstBuffer,\n      dstOffset: 0,\n      copySize,\n      expectation: isSuccess ? 'Success' : 'FinishError',\n    });\n  });\n\ng.test('copy_offset_alignment')\n  .paramsSubcasesOnly([\n    { srcOffset: 0, dstOffset: 0, _isSuccess: true },\n    { srcOffset: 2, dstOffset: 0, _isSuccess: false },\n    { srcOffset: 4, dstOffset: 0, _isSuccess: true },\n    { srcOffset: 5, dstOffset: 0, _isSuccess: false },\n    { srcOffset: 8, dstOffset: 0, _isSuccess: true },\n    { srcOffset: 0, dstOffset: 2, _isSuccess: false },\n    { srcOffset: 0, dstOffset: 4, _isSuccess: true },\n    { srcOffset: 0, dstOffset: 5, _isSuccess: false },\n    { srcOffset: 0, dstOffset: 8, _isSuccess: true },\n    { srcOffset: 4, dstOffset: 4, _isSuccess: true },\n  ] as const)\n  .fn(async t => {\n    const { srcOffset, dstOffset, _isSuccess: isSuccess } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset,\n      dstBuffer,\n      dstOffset,\n      copySize: 8,\n      expectation: isSuccess ? 'Success' : 'FinishError',\n    });\n  });\n\ng.test('copy_overflow')\n  .paramsSubcasesOnly([\n    { srcOffset: 0, dstOffset: 0, copySize: kMaxSafeMultipleOf8 },\n    { srcOffset: 16, dstOffset: 0, copySize: kMaxSafeMultipleOf8 },\n    { srcOffset: 0, dstOffset: 16, copySize: kMaxSafeMultipleOf8 },\n    { srcOffset: kMaxSafeMultipleOf8, dstOffset: 0, copySize: 16 },\n    { srcOffset: 0, dstOffset: kMaxSafeMultipleOf8, copySize: 16 },\n    { srcOffset: kMaxSafeMultipleOf8, dstOffset: 0, copySize: kMaxSafeMultipleOf8 },\n    { srcOffset: 0, dstOffset: kMaxSafeMultipleOf8, copySize: kMaxSafeMultipleOf8 },\n    {\n      srcOffset: kMaxSafeMultipleOf8,\n      dstOffset: kMaxSafeMultipleOf8,\n      copySize: kMaxSafeMultipleOf8,\n    },\n  ] as const)\n  .fn(async t => {\n    const { srcOffset, dstOffset, copySize } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset,\n      dstBuffer,\n      dstOffset,\n      copySize,\n      expectation: 'FinishError',\n    });\n  });\n\ng.test('copy_out_of_bounds')\n  .paramsSubcasesOnly([\n    { srcOffset: 0, dstOffset: 0, copySize: 32, _isSuccess: true },\n    { srcOffset: 0, dstOffset: 0, copySize: 36 },\n    { srcOffset: 36, dstOffset: 0, copySize: 4 },\n    { srcOffset: 0, dstOffset: 36, copySize: 4 },\n    { srcOffset: 36, dstOffset: 0, copySize: 0 },\n    { srcOffset: 0, dstOffset: 36, copySize: 0 },\n    { srcOffset: 20, dstOffset: 0, copySize: 16 },\n    { srcOffset: 20, dstOffset: 0, copySize: 12, _isSuccess: true },\n    { srcOffset: 0, dstOffset: 20, copySize: 16 },\n    { srcOffset: 0, dstOffset: 20, copySize: 12, _isSuccess: true },\n  ] as const)\n  .fn(async t => {\n    const { srcOffset, dstOffset, copySize, _isSuccess = false } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 32,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 32,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset,\n      dstBuffer,\n      dstOffset,\n      copySize,\n      expectation: _isSuccess ? 'Success' : 'FinishError',\n    });\n  });\n\ng.test('copy_within_same_buffer')\n  .paramsSubcasesOnly([\n    { srcOffset: 0, dstOffset: 8, copySize: 4 },\n    { srcOffset: 8, dstOffset: 0, copySize: 4 },\n    { srcOffset: 0, dstOffset: 4, copySize: 8 },\n    { srcOffset: 4, dstOffset: 0, copySize: 8 },\n  ] as const)\n  .fn(async t => {\n    const { srcOffset, dstOffset, copySize } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer: buffer,\n      srcOffset,\n      dstBuffer: buffer,\n      dstOffset,\n      copySize,\n      expectation: 'FinishError',\n    });\n  });\n"],"file":"copyBufferToBuffer.spec.js"}