{"version":3,"sources":["../../../../../../src/webgpu/api/validation/encoding/cmds/compute_pass.spec.ts"],"names":["description","makeTestGroup","kLimitInfo","kResourceStates","ValidationTest","F","createComputePipeline","state","createNoOpComputePipeline","createErrorComputePipeline","createIndirectBuffer","data","descriptor","size","byteLength","usage","GPUBufferUsage","INDIRECT","COPY_DST","device","pushErrorScope","buffer","createBuffer","popErrorScope","queue","writeBuffer","destroy","g","test","desc","params","u","beginSubcases","combine","fn","t","pipeline","encoder","validateFinishAndSubmitGivenState","createEncoder","setPipeline","paramsSubcasesOnly","beforeAllSubcases","selectMismatchedDeviceOrSkipTestCase","undefined","mismatched","mismatchedDevice","compute","module","createShaderModule","code","entryPoint","validateFinish","kMaxDispatch","maxComputeWorkgroupsPerDimension","default","dispatchType","largeDimIndex","smallDimValue","largeDimValue","workSizes","validateFinishAndSubmit","x","y","z","dispatchWorkgroups","dispatchWorkgroupsIndirect","Uint32Array","shouldError","kBufferData","fill","BYTES_PER_ELEMENT","offset","finishShouldError","trackForCleanup"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA,CAJO,CAMP,SAASC,aAAT,QAA8B,+CAA9B;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,eAAT,QAA+C,yBAA/C;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,MAAMC,CAAN,SAAgBD,cAAhB,CAA+B;AAC7BE,EAAAA,qBAAqB,CAACC,KAAD,EAAiD;AACpE,QAAIA,KAAK,KAAK,OAAd,EAAuB;AACrB,aAAO,KAAKC,yBAAL,EAAP;AACD;;AAED,WAAO,KAAKC,0BAAL,EAAP;AACD;;AAEDC,EAAAA,oBAAoB,CAACH,KAAD,EAAuBI,IAAvB,EAAqD;AACvE,UAAMC,UAA+B,GAAG;AACtCC,MAAAA,IAAI,EAAEF,IAAI,CAACG,UAD2B;AAEtCC,MAAAA,KAAK,EAAEC,cAAc,CAACC,QAAf,GAA0BD,cAAc,CAACE,QAFV,EAAxC;;;AAKA,QAAIX,KAAK,KAAK,SAAd,EAAyB;AACvBK,MAAAA,UAAU,CAACG,KAAX,GAAmB,MAAnB,CADuB,CACI;AAC5B;;AAED,SAAKI,MAAL,CAAYC,cAAZ,CAA2B,YAA3B;AACA,UAAMC,MAAM,GAAG,KAAKF,MAAL,CAAYG,YAAZ,CAAyBV,UAAzB,CAAf;AACA,SAAKO,MAAL,CAAYI,aAAZ;;AAEA,QAAIhB,KAAK,KAAK,OAAd,EAAuB;AACrB,WAAKiB,KAAL,CAAWC,WAAX,CAAuBJ,MAAvB,EAA+B,CAA/B,EAAkCV,IAAlC;AACD;;AAED,QAAIJ,KAAK,KAAK,WAAd,EAA2B;AACzBc,MAAAA,MAAM,CAACK,OAAP;AACD;;AAED,WAAOL,MAAP;AACD,GAhC4B;;;AAmC/B,OAAO,MAAMM,CAAC,GAAG1B,aAAa,CAACI,CAAD,CAAvB;;AAEPsB,CAAC,CAACC,IAAF,CAAO,cAAP;AACGC,IADH;AAEK;AACL;AACA,CAJA;;AAMGC,MANH,CAMU,CAAAC,CAAC,KAAIA,CAAC,CAACC,aAAF,GAAkBC,OAAlB,CAA0B,OAA1B,EAAmC,CAAC,OAAD,EAAU,SAAV,CAAnC,CANf;AAOGC,EAPH,CAOM,CAAAC,CAAC,KAAI;AACP,QAAM,EAAE5B,KAAF,KAAY4B,CAAC,CAACL,MAApB;AACA,QAAMM,QAAQ,GAAGD,CAAC,CAAC7B,qBAAF,CAAwBC,KAAxB,CAAjB;;AAEA,QAAM,EAAE8B,OAAF,EAAWC,iCAAX,KAAiDH,CAAC,CAACI,aAAF,CAAgB,cAAhB,CAAvD;AACAF,EAAAA,OAAO,CAACG,WAAR,CAAoBJ,QAApB;AACAE,EAAAA,iCAAiC,CAAC/B,KAAD,CAAjC;AACD,CAdH;;AAgBAoB,CAAC,CAACC,IAAF,CAAO,0BAAP;AACGC,IADH,CACQ,wFADR;AAEGY,kBAFH,CAEsB,CAAAV,CAAC,KAAIA,CAAC,CAACE,OAAF,CAAU,YAAV,EAAwB,CAAC,IAAD,EAAO,KAAP,CAAxB,CAF3B;AAGGS,iBAHH,CAGqB,OAAMP,CAAN,KAAW;AAC5B,QAAMA,CAAC,CAACQ,oCAAF,CAAuCC,SAAvC,CAAN;AACD,CALH;AAMGV,EANH,CAMM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAEU,UAAF,KAAiBV,CAAC,CAACL,MAAzB;AACA,QAAMX,MAAM,GAAG0B,UAAU,GAAGV,CAAC,CAACW,gBAAL,GAAwBX,CAAC,CAAChB,MAAnD;;AAEA,QAAMiB,QAAQ,GAAGjB,MAAM,CAACb,qBAAP,CAA6B;AAC5CyC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE7B,MAAM,CAAC8B,kBAAP,CAA0B;AAChCC,QAAAA,IAAI,EAAE,iDAD0B,EAA1B,CADD;;AAIPC,MAAAA,UAAU,EAAE,MAJL,EADmC,EAA7B,CAAjB;;;;AASA,QAAM,EAAEd,OAAF,EAAWe,cAAX,KAA8BjB,CAAC,CAACI,aAAF,CAAgB,cAAhB,CAApC;AACAF,EAAAA,OAAO,CAACG,WAAR,CAAoBJ,QAApB;AACAgB,EAAAA,cAAc,CAAC,CAACP,UAAF,CAAd;AACD,CAtBH;;AAwBA,MAAMQ,YAAY,GAAGnD,UAAU,CAACoD,gCAAX,CAA4CC,OAAjE;AACA5B,CAAC,CAACC,IAAF,CAAO,gBAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYGC,MAZH,CAYU,CAAAC,CAAC;AACPA,CAAC;AACEE,OADH,CACW,cADX,EAC2B,CAAC,QAAD,EAAW,UAAX,CAD3B;AAEGA,OAFH,CAEW,eAFX,EAE4B,CAAC,CAAD,EAAI,CAAJ,EAAOoB,YAAP,EAAqBA,YAAY,GAAG,CAApC,EAAuC,WAAvC,EAAoD,WAApD,CAF5B;AAGGrB,aAHH;AAIGC,OAJH,CAIW,eAJX,EAI4B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJ5B;AAKGA,OALH,CAKW,eALX,EAK4B,CAAC,CAAD,EAAI,CAAJ,CAL5B,CAbJ;;AAoBGC,EApBH,CAoBM,CAAAC,CAAC,KAAI;AACP,QAAM,EAAEqB,YAAF,EAAgBC,aAAhB,EAA+BC,aAA/B,EAA8CC,aAA9C,KAAgExB,CAAC,CAACL,MAAxE;;AAEA,QAAMM,QAAQ,GAAGD,CAAC,CAAC3B,yBAAF,EAAjB;;AAEA,QAAMoD,SAAS,GAAG,CAACF,aAAD,EAAgBA,aAAhB,EAA+BA,aAA/B,CAAlB;AACAE,EAAAA,SAAS,CAACH,aAAD,CAAT,GAA2BE,aAA3B;;AAEA,QAAM,EAAEtB,OAAF,EAAWwB,uBAAX,KAAuC1B,CAAC,CAACI,aAAF,CAAgB,cAAhB,CAA7C;AACAF,EAAAA,OAAO,CAACG,WAAR,CAAoBJ,QAApB;AACA,MAAIoB,YAAY,KAAK,QAArB,EAA+B;AAC7B,UAAM,CAACM,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYJ,SAAlB;AACAvB,IAAAA,OAAO,CAAC4B,kBAAR,CAA2BH,CAA3B,EAA8BC,CAA9B,EAAiCC,CAAjC;AACD,GAHD,MAGO,IAAIR,YAAY,KAAK,UAArB,EAAiC;AACtCnB,IAAAA,OAAO,CAAC6B,0BAAR;AACE/B,IAAAA,CAAC,CAACzB,oBAAF,CAAuB,OAAvB,EAAgC,IAAIyD,WAAJ,CAAgBP,SAAhB,CAAhC,CADF;AAEE,KAFF;;AAID;;AAED,QAAMQ,WAAW;AACfZ,EAAAA,YAAY,KAAK,QAAjB;AACCI,EAAAA,SAAS,CAAC,CAAD,CAAT,GAAeP,YAAf,IAA+BO,SAAS,CAAC,CAAD,CAAT,GAAeP,YAA9C,IAA8DO,SAAS,CAAC,CAAD,CAAT,GAAeP,YAD9E,CADF;;AAIAQ,EAAAA,uBAAuB,CAAC,CAACO,WAAF,EAAe,IAAf,CAAvB;AACD,CA7CH;;AA+CA,MAAMC,WAAW,GAAG,IAAIF,WAAJ,CAAgB,CAAhB,EAAmBG,IAAnB,CAAwB,CAAxB,CAApB;AACA3C,CAAC,CAACC,IAAF,CAAO,gCAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYGY,kBAZH,CAYsB,CAAAV,CAAC;AACnBA,CAAC,CAAC;AAAD,CACEE,OADH,CACW,OADX,EACoB9B,eADpB;AAEG8B,OAFH,CAEW,QAFX,EAEqB;AACjB;AACA,CAFiB;AAGjBkC,WAAW,CAACI,iBAHK;AAIjBF,WAAW,CAACvD,UAAZ,GAAyB,IAAIqD,WAAW,CAACI,iBAJxB;AAKjB;AACA,CANiB;AAOjB;AACAF,WAAW,CAACvD,UAAZ,GAAyB,IAAIqD,WAAW,CAACI,iBARxB,CAFrB,CAbJ;;;AA0BGrC,EA1BH,CA0BM,CAAAC,CAAC,KAAI;AACP,QAAM,EAAE5B,KAAF,EAASiE,MAAT,KAAoBrC,CAAC,CAACL,MAA5B;AACA,QAAMM,QAAQ,GAAGD,CAAC,CAAC3B,yBAAF,EAAjB;AACA,QAAMa,MAAM,GAAGc,CAAC,CAACzB,oBAAF,CAAuBH,KAAvB,EAA8B8D,WAA9B,CAAf;;AAEA,QAAM,EAAEhC,OAAF,EAAWwB,uBAAX,KAAuC1B,CAAC,CAACI,aAAF,CAAgB,cAAhB,CAA7C;AACAF,EAAAA,OAAO,CAACG,WAAR,CAAoBJ,QAApB;AACAC,EAAAA,OAAO,CAAC6B,0BAAR,CAAmC7C,MAAnC,EAA2CmD,MAA3C;;AAEA,QAAMC,iBAAiB;AACrBlE,EAAAA,KAAK,KAAK,SAAV;AACAiE,EAAAA,MAAM,GAAG,CAAT,KAAe,CADf;AAEAA,EAAAA,MAAM,GAAG,IAAIL,WAAW,CAACI,iBAAzB,GAA6CF,WAAW,CAACvD,UAH3D;AAIA+C,EAAAA,uBAAuB,CAAC,CAACY,iBAAF,EAAqBlE,KAAK,KAAK,WAA/B,CAAvB;AACD,CAxCH;;AA0CAoB,CAAC,CAACC,IAAF,CAAO,0CAAP;AACGC,IADH;AAEK,uGAFL;;AAIGY,kBAJH,CAIsB,CAAAV,CAAC,KAAIA,CAAC,CAACE,OAAF,CAAU,YAAV,EAAwB,CAAC,IAAD,EAAO,KAAP,CAAxB,CAJ3B;AAKGS,iBALH,CAKqB,OAAMP,CAAN,KAAW;AAC5B,QAAMA,CAAC,CAACQ,oCAAF,CAAuCC,SAAvC,CAAN;AACD,CAPH;AAQGV,EARH,CAQM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAEU,UAAF,KAAiBV,CAAC,CAACL,MAAzB;;AAEA,QAAMM,QAAQ,GAAGD,CAAC,CAAC3B,yBAAF,EAAjB;;AAEA,QAAMW,MAAM,GAAG0B,UAAU,GAAGV,CAAC,CAACW,gBAAL,GAAwBX,CAAC,CAAChB,MAAnD;;AAEA,QAAME,MAAM,GAAGF,MAAM,CAACG,YAAP,CAAoB;AACjCT,IAAAA,IAAI,EAAE,EAD2B;AAEjCE,IAAAA,KAAK,EAAEC,cAAc,CAACC,QAFW,EAApB,CAAf;;AAIAkB,EAAAA,CAAC,CAACuC,eAAF,CAAkBrD,MAAlB;;AAEA,QAAM,EAAEgB,OAAF,EAAWe,cAAX,KAA8BjB,CAAC,CAACI,aAAF,CAAgB,cAAhB,CAApC;AACAF,EAAAA,OAAO,CAACG,WAAR,CAAoBJ,QAApB;AACAC,EAAAA,OAAO,CAAC6B,0BAAR,CAAmC7C,MAAnC,EAA2C,CAA3C;AACA+B,EAAAA,cAAc,CAAC,CAACP,UAAF,CAAd;AACD,CAzBH","sourcesContent":["export const description = `\nAPI validation test for compute pass\n\nDoes **not** test usage scopes (resource_usages/) or programmable pass stuff (programmable_pass).\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { kLimitInfo } from '../../../../capability_info.js';\nimport { kResourceStates, ResourceState } from '../../../../gpu_test.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nclass F extends ValidationTest {\n  createComputePipeline(state: 'valid' | 'invalid'): GPUComputePipeline {\n    if (state === 'valid') {\n      return this.createNoOpComputePipeline();\n    }\n\n    return this.createErrorComputePipeline();\n  }\n\n  createIndirectBuffer(state: ResourceState, data: Uint32Array): GPUBuffer {\n    const descriptor: GPUBufferDescriptor = {\n      size: data.byteLength,\n      usage: GPUBufferUsage.INDIRECT | GPUBufferUsage.COPY_DST,\n    };\n\n    if (state === 'invalid') {\n      descriptor.usage = 0xffff; // Invalid GPUBufferUsage\n    }\n\n    this.device.pushErrorScope('validation');\n    const buffer = this.device.createBuffer(descriptor);\n    this.device.popErrorScope();\n\n    if (state === 'valid') {\n      this.queue.writeBuffer(buffer, 0, data);\n    }\n\n    if (state === 'destroyed') {\n      buffer.destroy();\n    }\n\n    return buffer;\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('set_pipeline')\n  .desc(\n    `\nsetPipeline should generate an error iff using an 'invalid' pipeline.\n`\n  )\n  .params(u => u.beginSubcases().combine('state', ['valid', 'invalid'] as const))\n  .fn(t => {\n    const { state } = t.params;\n    const pipeline = t.createComputePipeline(state);\n\n    const { encoder, validateFinishAndSubmitGivenState } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    validateFinishAndSubmitGivenState(state);\n  });\n\ng.test('pipeline,device_mismatch')\n  .desc('Tests setPipeline cannot be called with a compute pipeline created from another device')\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(async t => {\n    await t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(async t => {\n    const { mismatched } = t.params;\n    const device = mismatched ? t.mismatchedDevice : t.device;\n\n    const pipeline = device.createComputePipeline({\n      compute: {\n        module: device.createShaderModule({\n          code: '@stage(compute) @workgroup_size(1) fn main() {}',\n        }),\n        entryPoint: 'main',\n      },\n    });\n\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    validateFinish(!mismatched);\n  });\n\nconst kMaxDispatch = kLimitInfo.maxComputeWorkgroupsPerDimension.default;\ng.test('dispatch_sizes')\n  .desc(\n    `Test 'direct' and 'indirect' dispatch with various sizes.\n\n  Only direct dispatches can produce validation errors.\n  Workgroup sizes:\n    - valid: { zero, one, just under limit }\n    - invalid: { just over limit, way over limit }\n\n  TODO: Verify that the invalid cases don't execute any invocations at all.\n`\n  )\n  .params(u =>\n    u\n      .combine('dispatchType', ['direct', 'indirect'] as const)\n      .combine('largeDimValue', [0, 1, kMaxDispatch, kMaxDispatch + 1, 0x7fff_ffff, 0xffff_ffff])\n      .beginSubcases()\n      .combine('largeDimIndex', [0, 1, 2] as const)\n      .combine('smallDimValue', [0, 1])\n  )\n  .fn(t => {\n    const { dispatchType, largeDimIndex, smallDimValue, largeDimValue } = t.params;\n\n    const pipeline = t.createNoOpComputePipeline();\n\n    const workSizes = [smallDimValue, smallDimValue, smallDimValue];\n    workSizes[largeDimIndex] = largeDimValue;\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    if (dispatchType === 'direct') {\n      const [x, y, z] = workSizes;\n      encoder.dispatchWorkgroups(x, y, z);\n    } else if (dispatchType === 'indirect') {\n      encoder.dispatchWorkgroupsIndirect(\n        t.createIndirectBuffer('valid', new Uint32Array(workSizes)),\n        0\n      );\n    }\n\n    const shouldError =\n      dispatchType === 'direct' &&\n      (workSizes[0] > kMaxDispatch || workSizes[1] > kMaxDispatch || workSizes[2] > kMaxDispatch);\n\n    validateFinishAndSubmit(!shouldError, true);\n  });\n\nconst kBufferData = new Uint32Array(6).fill(1);\ng.test('indirect_dispatch_buffer_state')\n  .desc(\n    `\nTest dispatchWorkgroupsIndirect validation by submitting various dispatches with a no-op pipeline\nand an indirectBuffer with 6 elements.\n- indirectBuffer: {'valid', 'invalid', 'destroyed'}\n- indirectOffset:\n  - valid, within the buffer: {beginning, middle, end} of the buffer\n  - invalid, non-multiple of 4\n  - invalid, the last element is outside the buffer\n`\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('state', kResourceStates)\n      .combine('offset', [\n        // valid (for 'valid' buffers)\n        0,\n        Uint32Array.BYTES_PER_ELEMENT,\n        kBufferData.byteLength - 3 * Uint32Array.BYTES_PER_ELEMENT,\n        // invalid, non-multiple of 4 offset\n        1,\n        // invalid, last element outside buffer\n        kBufferData.byteLength - 2 * Uint32Array.BYTES_PER_ELEMENT,\n      ])\n  )\n  .fn(t => {\n    const { state, offset } = t.params;\n    const pipeline = t.createNoOpComputePipeline();\n    const buffer = t.createIndirectBuffer(state, kBufferData);\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    encoder.dispatchWorkgroupsIndirect(buffer, offset);\n\n    const finishShouldError =\n      state === 'invalid' ||\n      offset % 4 !== 0 ||\n      offset + 3 * Uint32Array.BYTES_PER_ELEMENT > kBufferData.byteLength;\n    validateFinishAndSubmit(!finishShouldError, state !== 'destroyed');\n  });\n\ng.test('indirect_dispatch_buffer,device_mismatch')\n  .desc(\n    `Tests dispatchWorkgroupsIndirect cannot be called with an indirect buffer created from another device`\n  )\n  .paramsSubcasesOnly(u => u.combine('mismatched', [true, false]))\n  .beforeAllSubcases(async t => {\n    await t.selectMismatchedDeviceOrSkipTestCase(undefined);\n  })\n  .fn(async t => {\n    const { mismatched } = t.params;\n\n    const pipeline = t.createNoOpComputePipeline();\n\n    const device = mismatched ? t.mismatchedDevice : t.device;\n\n    const buffer = device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.INDIRECT,\n    });\n    t.trackForCleanup(buffer);\n\n    const { encoder, validateFinish } = t.createEncoder('compute pass');\n    encoder.setPipeline(pipeline);\n    encoder.dispatchWorkgroupsIndirect(buffer, 0);\n    validateFinish(!mismatched);\n  });\n"],"file":"compute_pass.spec.js"}