{"version":3,"file":"createRenderBundleEncoder.spec.js","names":["description","makeTestGroup","kAllTextureFormats","kDepthStencilFormats","kTextureFormatInfo","kMaxColorAttachments","ValidationTest","g","test","desc","params","u","combine","Array","keys","beginSubcases","undefined","filter","colorFormat","colorFormatCount","fn","t","depthStencilFormat","shouldError","expectValidationError","device","createRenderBundleEncoder","colorFormats","fill","beforeAllSubcases","format","selectDeviceForTextureFormatOrSkipTestCase","attachment","colorRenderable","renderable","color","depthStencil","depth","stencil","depthReadOnly","stencilReadOnly"],"sources":["../../../../../src/webgpu/api/validation/encoding/createRenderBundleEncoder.spec.ts"],"sourcesContent":["export const description = `\ncreateRenderBundleEncoder validation tests.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport {\n  kAllTextureFormats,\n  kDepthStencilFormats,\n  kTextureFormatInfo,\n  kMaxColorAttachments,\n} from '../../../capability_info.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\ng.test('attachment_state')\n  .desc(\n    `\n    Tests that createRenderBundleEncoder correctly validates the attachment state passed to it.\n      - Must be <= kMaxColorAttachments (8) colorFormats\n      - Must have a depthStencilFormat if no colorFormats are given\n    `\n  )\n  .params(u =>\n    u //\n      .combine('colorFormatCount', [...Array(kMaxColorAttachments + 2).keys()]) // 0-9\n      .beginSubcases()\n      .combine('colorFormat', [undefined, 'bgra8unorm'])\n      .combine('depthStencilFormat', [undefined, 'depth24plus-stencil8'] as const)\n      .filter(({ colorFormat, colorFormatCount }) => {\n        // Only run the test with 0 colorFormats once.\n        return (\n          (colorFormat !== undefined && colorFormatCount > 0) ||\n          (colorFormat === undefined && colorFormatCount === 0)\n        );\n      })\n  )\n  .fn(async t => {\n    const { colorFormat, depthStencilFormat, colorFormatCount } = t.params;\n\n    // Ensure up to kMaxColorAttachments (8) color formats are allowed.\n    let shouldError = colorFormatCount > kMaxColorAttachments;\n\n    // Zero color formats are only allowed if a depthStencilFormat is provided.\n    if (depthStencilFormat === undefined && colorFormatCount === 0) {\n      shouldError = true;\n    }\n\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: Array(colorFormatCount).fill(colorFormat),\n        depthStencilFormat,\n      });\n    }, shouldError);\n  });\n\ng.test('valid_texture_formats')\n  .desc(\n    `\n    Tests that createRenderBundleEncoder only accepts valid formats for its attachments.\n      - colorFormats\n      - depthStencilFormat\n    `\n  )\n  .params(u =>\n    u //\n      .combine('format', kAllTextureFormats)\n      .beginSubcases()\n      .combine('attachment', ['color', 'depthStencil'])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    t.selectDeviceForTextureFormatOrSkipTestCase(format);\n  })\n  .fn(async t => {\n    const { format, attachment } = t.params;\n\n    const colorRenderable =\n      kTextureFormatInfo[format].renderable && kTextureFormatInfo[format].color;\n\n    const depthStencil = kTextureFormatInfo[format].depth || kTextureFormatInfo[format].stencil;\n\n    switch (attachment) {\n      case 'color': {\n        t.expectValidationError(() => {\n          t.device.createRenderBundleEncoder({\n            colorFormats: [format],\n          });\n        }, !colorRenderable);\n\n        break;\n      }\n      case 'depthStencil': {\n        t.expectValidationError(() => {\n          t.device.createRenderBundleEncoder({\n            colorFormats: [],\n            depthStencilFormat: format,\n          });\n        }, !depthStencil);\n\n        break;\n      }\n    }\n  });\n\ng.test('depth_stencil_readonly')\n  .desc(\n    `\n    Tests that createRenderBundleEncoder validation of depthReadOnly and stencilReadOnly\n      - With depth-only formats\n      - With stencil-only formats\n      - With depth-stencil-combined formats\n    `\n  )\n  .params(u =>\n    u //\n      .combine('depthStencilFormat', kDepthStencilFormats)\n      .beginSubcases()\n      .combine('depthReadOnly', [false, true])\n      .combine('stencilReadOnly', [false, true])\n  )\n  .beforeAllSubcases(t => {\n    const { depthStencilFormat } = t.params;\n    t.selectDeviceForTextureFormatOrSkipTestCase(depthStencilFormat);\n  })\n  .fn(async t => {\n    const { depthStencilFormat, depthReadOnly, stencilReadOnly } = t.params;\n\n    let shouldError = false;\n    if (\n      kTextureFormatInfo[depthStencilFormat].depth &&\n      kTextureFormatInfo[depthStencilFormat].stencil &&\n      depthReadOnly !== stencilReadOnly\n    ) {\n      shouldError = true;\n    }\n\n    t.expectValidationError(() => {\n      t.device.createRenderBundleEncoder({\n        colorFormats: [],\n        depthStencilFormat,\n        depthReadOnly,\n        stencilReadOnly,\n      });\n    }, shouldError);\n  });\n\ng.test('depth_stencil_readonly_with_undefined_depth')\n  .desc(\n    `\n    Tests that createRenderBundleEncoder validation of depthReadOnly and stencilReadOnly is ignored\n    if there is no depthStencilFormat set.\n    `\n  )\n  .params(u =>\n    u //\n      .beginSubcases()\n      .combine('depthReadOnly', [false, true])\n      .combine('stencilReadOnly', [false, true])\n  )\n  .fn(async t => {\n    const { depthReadOnly, stencilReadOnly } = t.params;\n\n    t.device.createRenderBundleEncoder({\n      colorFormats: ['bgra8unorm'],\n      depthReadOnly,\n      stencilReadOnly,\n    });\n  });\n"],"mappings":"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"}