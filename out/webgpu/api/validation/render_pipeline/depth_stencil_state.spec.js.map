{"version":3,"sources":["../../../../../src/webgpu/api/validation/render_pipeline/depth_stencil_state.spec.ts"],"names":["description","makeTestGroup","unreachable","kTextureFormats","kTextureFormatInfo","kDepthStencilFormats","kCompareFunctions","kStencilOperations","CreateRenderPipelineValidationTest","g","test","desc","params","u","combine","beforeAllSubcases","t","format","info","selectDeviceOrSkipTestCase","feature","fn","isAsync","descriptor","getDescriptor","depthStencil","doCreateRenderPipelineTest","depth","stencil","undefined","depthCompare","depthTestEnabled","depthWriteEnabled","face","compare","stencilFront","stencilBack","stencilTestEnabled","faceAndOpType","op","failOp","depthFailOp","passOp","stencilWriteEnabled"],"mappings":"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","sourcesContent":["export const description = `\nThis test dedicatedly tests validation of GPUDepthStencilState of createRenderPipeline.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../common/util/util.js';\nimport {\n  kTextureFormats,\n  kTextureFormatInfo,\n  kDepthStencilFormats,\n  kCompareFunctions,\n  kStencilOperations,\n} from '../../../capability_info.js';\n\nimport { CreateRenderPipelineValidationTest } from './common.js';\n\nexport const g = makeTestGroup(CreateRenderPipelineValidationTest);\n\ng.test('format')\n  .desc(`The texture format in depthStencilState must be a depth/stencil format.`)\n  .params(u => u.combine('isAsync', [false, true]).combine('format', kTextureFormats))\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(async t => {\n    const { isAsync, format } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    const descriptor = t.getDescriptor({ depthStencil: { format } });\n\n    t.doCreateRenderPipelineTest(isAsync, info.depth || info.stencil, descriptor);\n  });\n\ng.test('depth_test')\n  .desc(\n    `Depth aspect must be contained in the format if depth test is enabled in depthStencilState.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('format', kDepthStencilFormats)\n      .combine('depthCompare', [undefined, ...kCompareFunctions])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(async t => {\n    const { isAsync, format, depthCompare } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    const descriptor = t.getDescriptor({\n      depthStencil: { format, depthCompare },\n    });\n\n    const depthTestEnabled = depthCompare !== undefined && depthCompare !== 'always';\n    t.doCreateRenderPipelineTest(isAsync, !depthTestEnabled || info.depth, descriptor);\n  });\n\ng.test('depth_write')\n  .desc(\n    `Depth aspect must be contained in the format if depth write is enabled in depthStencilState.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('format', kDepthStencilFormats)\n      .combine('depthWriteEnabled', [false, true])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(async t => {\n    const { isAsync, format, depthWriteEnabled } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    const descriptor = t.getDescriptor({\n      depthStencil: { format, depthWriteEnabled },\n    });\n    t.doCreateRenderPipelineTest(isAsync, !depthWriteEnabled || info.depth, descriptor);\n  });\n\ng.test('stencil_test')\n  .desc(\n    `Stencil aspect must be contained in the format if stencil test is enabled in depthStencilState.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('format', kDepthStencilFormats)\n      .combine('face', ['front', 'back'] as const)\n      .combine('compare', [undefined, ...kCompareFunctions])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(async t => {\n    const { isAsync, format, face, compare } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    let descriptor: GPURenderPipelineDescriptor;\n    if (face === 'front') {\n      descriptor = t.getDescriptor({ depthStencil: { format, stencilFront: { compare } } });\n    } else {\n      descriptor = t.getDescriptor({ depthStencil: { format, stencilBack: { compare } } });\n    }\n\n    const stencilTestEnabled = compare !== undefined && compare !== 'always';\n    t.doCreateRenderPipelineTest(isAsync, !stencilTestEnabled || info.stencil, descriptor);\n  });\n\ng.test('stencil_write')\n  .desc(\n    `Stencil aspect must be contained in the format if stencil write is enabled in depthStencilState.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('format', kDepthStencilFormats)\n      .combine('faceAndOpType', [\n        'frontFailOp',\n        'frontDepthFailOp',\n        'frontPassOp',\n        'backFailOp',\n        'backDepthFailOp',\n        'backPassOp',\n      ] as const)\n      .combine('op', [undefined, ...kStencilOperations])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(async t => {\n    const { isAsync, format, faceAndOpType, op } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    let depthStencil: GPUDepthStencilState;\n    switch (faceAndOpType) {\n      case 'frontFailOp':\n        depthStencil = { format, stencilFront: { failOp: op } };\n        break;\n      case 'frontDepthFailOp':\n        depthStencil = { format, stencilFront: { depthFailOp: op } };\n        break;\n      case 'frontPassOp':\n        depthStencil = { format, stencilFront: { passOp: op } };\n        break;\n      case 'backFailOp':\n        depthStencil = { format, stencilBack: { failOp: op } };\n        break;\n      case 'backDepthFailOp':\n        depthStencil = { format, stencilBack: { depthFailOp: op } };\n        break;\n      case 'backPassOp':\n        depthStencil = { format, stencilBack: { passOp: op } };\n        break;\n      default:\n        unreachable();\n    }\n    const descriptor = t.getDescriptor({ depthStencil });\n\n    const stencilWriteEnabled = op !== undefined && op !== 'keep';\n    t.doCreateRenderPipelineTest(isAsync, !stencilWriteEnabled || info.stencil, descriptor);\n  });\n"],"file":"depth_stencil_state.spec.js"}