{"version":3,"file":"depth_stencil_state.spec.js","names":["description","makeTestGroup","unreachable","kTextureFormats","kTextureFormatInfo","kDepthStencilFormats","kCompareFunctions","kStencilOperations","getFragmentShaderCodeWithOutput","CreateRenderPipelineValidationTest","g","test","desc","params","u","combine","beforeAllSubcases","t","format","info","selectDeviceOrSkipTestCase","feature","fn","isAsync","descriptor","getDescriptor","depthStencil","depthWriteEnabled","depthCompare","doCreateRenderPipelineTest","depth","stencil","depthTestEnabled","undefined","targets","fragmentShaderCode","values","plainType","componentCount","value","hasDepth","face","compare","stencilFront","stencilBack","stencilTestEnabled","faceAndOpType","op","common","failOp","depthFailOp","passOp","stencilWriteEnabled"],"sources":["../../../../../src/webgpu/api/validation/render_pipeline/depth_stencil_state.spec.ts"],"sourcesContent":["export const description = `\nThis test dedicatedly tests validation of GPUDepthStencilState of createRenderPipeline.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { unreachable } from '../../../../common/util/util.js';\nimport {\n  kTextureFormats,\n  kTextureFormatInfo,\n  kDepthStencilFormats,\n  kCompareFunctions,\n  kStencilOperations,\n} from '../../../capability_info.js';\nimport { getFragmentShaderCodeWithOutput } from '../../../util/shader.js';\n\nimport { CreateRenderPipelineValidationTest } from './common.js';\n\nexport const g = makeTestGroup(CreateRenderPipelineValidationTest);\n\ng.test('format')\n  .desc(`The texture format in depthStencilState must be a depth/stencil format.`)\n  .params(u => u.combine('isAsync', [false, true]).combine('format', kTextureFormats))\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const { isAsync, format } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    const descriptor = t.getDescriptor({\n      depthStencil: { format, depthWriteEnabled: false, depthCompare: 'always' },\n    });\n\n    t.doCreateRenderPipelineTest(isAsync, info.depth || info.stencil, descriptor);\n  });\n\ng.test('depth_test')\n  .desc(\n    `Depth aspect must be contained in the format if depth test is enabled in depthStencilState.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('format', kDepthStencilFormats)\n      .combine('depthCompare', kCompareFunctions)\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const { isAsync, format, depthCompare } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    const descriptor = t.getDescriptor({\n      depthStencil: { format, depthCompare, depthWriteEnabled: false },\n    });\n\n    const depthTestEnabled = depthCompare !== undefined && depthCompare !== 'always';\n    t.doCreateRenderPipelineTest(isAsync, !depthTestEnabled || info.depth, descriptor);\n  });\n\ng.test('depth_write')\n  .desc(\n    `Depth aspect must be contained in the format if depth write is enabled in depthStencilState.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('format', kDepthStencilFormats)\n      .combine('depthWriteEnabled', [false, true])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const { isAsync, format, depthWriteEnabled } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    const descriptor = t.getDescriptor({\n      depthStencil: { format, depthWriteEnabled, depthCompare: 'always' },\n    });\n    t.doCreateRenderPipelineTest(isAsync, !depthWriteEnabled || info.depth, descriptor);\n  });\n\ng.test('depth_write,frag_depth')\n  .desc(`Depth aspect must be contained in the format if frag_depth is written in fragment stage.`)\n  .params(u =>\n    u.combine('isAsync', [false, true]).combine('format', [undefined, ...kDepthStencilFormats])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    if (format !== undefined) {\n      const info = kTextureFormatInfo[format];\n      t.selectDeviceOrSkipTestCase(info.feature);\n    }\n  })\n  .fn(t => {\n    const { isAsync, format } = t.params;\n\n    const descriptor = t.getDescriptor({\n      // Keep one color target so that the pipeline is still valid with no depth stencil target.\n      targets: [{ format: 'rgba8unorm' }],\n      depthStencil: format\n        ? { format, depthWriteEnabled: true, depthCompare: 'always' }\n        : undefined,\n      fragmentShaderCode: getFragmentShaderCodeWithOutput(\n        [{ values: [1, 1, 1, 1], plainType: 'f32', componentCount: 4 }],\n        { value: 0.5 }\n      ),\n    });\n\n    const hasDepth = format ? kTextureFormatInfo[format].depth : false;\n    t.doCreateRenderPipelineTest(isAsync, hasDepth, descriptor);\n  });\n\ng.test('stencil_test')\n  .desc(\n    `Stencil aspect must be contained in the format if stencil test is enabled in depthStencilState.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('format', kDepthStencilFormats)\n      .combine('face', ['front', 'back'] as const)\n      .combine('compare', [undefined, ...kCompareFunctions])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const { isAsync, format, face, compare } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    let descriptor: GPURenderPipelineDescriptor;\n    if (face === 'front') {\n      descriptor = t.getDescriptor({\n        depthStencil: {\n          format,\n          depthWriteEnabled: false,\n          depthCompare: 'always',\n          stencilFront: { compare },\n        },\n      });\n    } else {\n      descriptor = t.getDescriptor({\n        depthStencil: {\n          format,\n          depthWriteEnabled: false,\n          depthCompare: 'always',\n          stencilBack: { compare },\n        },\n      });\n    }\n\n    const stencilTestEnabled = compare !== undefined && compare !== 'always';\n    t.doCreateRenderPipelineTest(isAsync, !stencilTestEnabled || info.stencil, descriptor);\n  });\n\ng.test('stencil_write')\n  .desc(\n    `Stencil aspect must be contained in the format if stencil write is enabled in depthStencilState.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('format', kDepthStencilFormats)\n      .combine('faceAndOpType', [\n        'frontFailOp',\n        'frontDepthFailOp',\n        'frontPassOp',\n        'backFailOp',\n        'backDepthFailOp',\n        'backPassOp',\n      ] as const)\n      .combine('op', [undefined, ...kStencilOperations])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    const info = kTextureFormatInfo[format];\n    t.selectDeviceOrSkipTestCase(info.feature);\n  })\n  .fn(t => {\n    const { isAsync, format, faceAndOpType, op } = t.params;\n    const info = kTextureFormatInfo[format];\n\n    const common = {\n      format,\n      depthWriteEnabled: false,\n      depthCompare: 'always' as GPUCompareFunction,\n    };\n    let depthStencil: GPUDepthStencilState;\n    switch (faceAndOpType) {\n      case 'frontFailOp':\n        depthStencil = { ...common, stencilFront: { failOp: op } };\n        break;\n      case 'frontDepthFailOp':\n        depthStencil = { ...common, stencilFront: { depthFailOp: op } };\n        break;\n      case 'frontPassOp':\n        depthStencil = { ...common, stencilFront: { passOp: op } };\n        break;\n      case 'backFailOp':\n        depthStencil = { ...common, stencilBack: { failOp: op } };\n        break;\n      case 'backDepthFailOp':\n        depthStencil = { ...common, stencilBack: { depthFailOp: op } };\n        break;\n      case 'backPassOp':\n        depthStencil = { ...common, stencilBack: { passOp: op } };\n        break;\n      default:\n        unreachable();\n    }\n    const descriptor = t.getDescriptor({ depthStencil });\n\n    const stencilWriteEnabled = op !== undefined && op !== 'keep';\n    t.doCreateRenderPipelineTest(isAsync, !stencilWriteEnabled || info.stencil, descriptor);\n  });\n"],"mappings":"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"}