{"version":3,"sources":["../../../../../src/webgpu/api/validation/render_pipeline/primitive_state.spec.ts"],"names":["description","makeTestGroup","kPrimitiveTopology","kIndexFormat","CreateRenderPipelineValidationTest","g","test","desc","params","u","combine","undefined","fn","t","isAsync","topology","stripIndexFormat","descriptor","getDescriptor","primitive","_success","doCreateRenderPipelineTest","unclippedDepth","device","features","has"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,6BAAjD;;AAEA,SAASC,kCAAT,QAAmD,aAAnD;;AAEA,OAAO,MAAMC,CAAC,GAAGJ,aAAa,CAACG,kCAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,oBAAP;AACGC,IADH;AAEK,8GAFL;;AAIGC,MAJH,CAIU,CAAAC,CAAC;AACPA,CAAC;AACEC,OADH,CACW,SADX,EACsB,CAAC,KAAD,EAAQ,IAAR,CADtB;AAEGA,OAFH,CAEW,UAFX,EAEuB,CAACC,SAAD,EAAY,GAAGT,kBAAf,CAFvB;AAGGQ,OAHH,CAGW,kBAHX,EAG+B,CAACC,SAAD,EAAY,GAAGR,YAAf,CAH/B,CALJ;;AAUGS,EAVH,CAUM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAEC,OAAF,EAAWC,QAAX,EAAqBC,gBAArB,KAA0CH,CAAC,CAACL,MAAlD;;AAEA,QAAMS,UAAU,GAAGJ,CAAC,CAACK,aAAF,CAAgB,EAAEC,SAAS,EAAE,EAAEJ,QAAF,EAAYC,gBAAZ,EAAb,EAAhB,CAAnB;;AAEA,QAAMI,QAAQ;AACZL,EAAAA,QAAQ,KAAK,YAAb,IAA6BA,QAAQ,KAAK,gBAA1C,IAA8DC,gBAAgB,KAAKL,SADrF;AAEAE,EAAAA,CAAC,CAACQ,0BAAF,CAA6BP,OAA7B,EAAsCM,QAAtC,EAAgDH,UAAhD;AACD,CAlBH;;AAoBAZ,CAAC,CAACC,IAAF,CAAO,iBAAP;AACGC,IADH,CACS,kFADT;AAEGC,MAFH,CAEU,CAAAC,CAAC,KAAIA,CAAC,CAACC,OAAF,CAAU,SAAV,EAAqB,CAAC,KAAD,EAAQ,IAAR,CAArB,EAAoCA,OAApC,CAA4C,gBAA5C,EAA8D,CAAC,KAAD,EAAQ,IAAR,CAA9D,CAFf;AAGGE,EAHH,CAGM,OAAMC,CAAN,KAAW;AACb,QAAM,EAAEC,OAAF,EAAWQ,cAAX,KAA8BT,CAAC,CAACL,MAAtC;;AAEA,QAAMS,UAAU,GAAGJ,CAAC,CAACK,aAAF,CAAgB,EAAEC,SAAS,EAAE,EAAEG,cAAF,EAAb,EAAhB,CAAnB;;AAEA,QAAMF,QAAQ,GAAG,CAACE,cAAD,IAAmBT,CAAC,CAACU,MAAF,CAASC,QAAT,CAAkBC,GAAlB,CAAsB,oBAAtB,CAApC;AACAZ,EAAAA,CAAC,CAACQ,0BAAF,CAA6BP,OAA7B,EAAsCM,QAAtC,EAAgDH,UAAhD;AACD,CAVH","sourcesContent":["export const description = `\nThis test dedicatedly tests validation of GPUPrimitiveState of createRenderPipeline.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { kPrimitiveTopology, kIndexFormat } from '../../../capability_info.js';\n\nimport { CreateRenderPipelineValidationTest } from './common.js';\n\nexport const g = makeTestGroup(CreateRenderPipelineValidationTest);\n\ng.test('strip_index_format')\n  .desc(\n    `If primitive.topology is not \"line-strip\" or \"triangle-strip\", primitive.stripIndexFormat must be undefined.`\n  )\n  .params(u =>\n    u\n      .combine('isAsync', [false, true])\n      .combine('topology', [undefined, ...kPrimitiveTopology] as const)\n      .combine('stripIndexFormat', [undefined, ...kIndexFormat] as const)\n  )\n  .fn(async t => {\n    const { isAsync, topology, stripIndexFormat } = t.params;\n\n    const descriptor = t.getDescriptor({ primitive: { topology, stripIndexFormat } });\n\n    const _success =\n      topology === 'line-strip' || topology === 'triangle-strip' || stripIndexFormat === undefined;\n    t.doCreateRenderPipelineTest(isAsync, _success, descriptor);\n  });\n\ng.test('unclipped_depth')\n  .desc(`If primitive.unclippedDepth is true, features must contain \"depth-clip-control\".`)\n  .params(u => u.combine('isAsync', [false, true]).combine('unclippedDepth', [false, true]))\n  .fn(async t => {\n    const { isAsync, unclippedDepth } = t.params;\n\n    const descriptor = t.getDescriptor({ primitive: { unclippedDepth } });\n\n    const _success = !unclippedDepth || t.device.features.has('depth-clip-control');\n    t.doCreateRenderPipelineTest(isAsync, _success, descriptor);\n  });\n"],"file":"primitive_state.spec.js"}