{"version":3,"sources":["../../../../../src/webgpu/api/validation/buffer/create.spec.ts"],"names":["description","makeTestGroup","assert","kAllBufferUsageBits","kBufferSizeAlignment","kBufferUsages","GPUConst","kMaxSafeMultipleOf8","ValidationTest","g","test","desc","params","u","combine","beginSubcases","fn","t","mappedAtCreation","size","isValid","usage","BufferUsage","COPY_SRC","expectGPUError","device","createBuffer","kInvalidUsage","usage1","usage2","GPUBufferUsage","MAP_READ","COPY_DST","MAP_WRITE","paramsSubcasesOnly","combineWithParams","_valid","UNIFORM","STORAGE"],"mappings":"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","sourcesContent":["export const description = `\nTests for validation in createBuffer.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { assert } from '../../../../common/util/util.js';\nimport {\n  kAllBufferUsageBits,\n  kBufferSizeAlignment,\n  kBufferUsages,\n} from '../../../capability_info.js';\nimport { GPUConst } from '../../../constants.js';\nimport { kMaxSafeMultipleOf8 } from '../../../util/math.js';\nimport { ValidationTest } from '../validation_test.js';\n\nexport const g = makeTestGroup(ValidationTest);\n\nassert(kBufferSizeAlignment === 4);\ng.test('size')\n  .desc(\n    'Test buffer size alignment is validated to be a multiple of 4 if mappedAtCreation is true.'\n  )\n  .params(u =>\n    u\n      .combine('mappedAtCreation', [false, true])\n      .beginSubcases()\n      .combine('size', [\n        0,\n        kBufferSizeAlignment * 0.5,\n        kBufferSizeAlignment,\n        kBufferSizeAlignment * 1.5,\n        kBufferSizeAlignment * 2,\n      ])\n  )\n  .fn(t => {\n    const { mappedAtCreation, size } = t.params;\n    const isValid = !mappedAtCreation || size % kBufferSizeAlignment === 0;\n    const usage = BufferUsage.COPY_SRC;\n    t.expectGPUError(\n      'validation',\n      () => t.device.createBuffer({ size, usage, mappedAtCreation }),\n      !isValid\n    );\n  });\n\nconst kInvalidUsage = 0x8000;\nassert((kInvalidUsage & kAllBufferUsageBits) === 0);\n\ng.test('usage')\n  .desc('Test combinations of zero to two usage flags are validated to be valid.')\n  .params(u =>\n    u\n      .combine('usage1', [0, ...kBufferUsages, kInvalidUsage])\n      .combine('usage2', [0, ...kBufferUsages, kInvalidUsage])\n      .beginSubcases()\n      .combine('mappedAtCreation', [false, true])\n  )\n  .fn(t => {\n    const { mappedAtCreation, usage1, usage2 } = t.params;\n    const usage = usage1 | usage2;\n\n    const isValid =\n      usage !== 0 &&\n      (usage & ~kAllBufferUsageBits) === 0 &&\n      ((usage & GPUBufferUsage.MAP_READ) === 0 ||\n        (usage & ~(GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ)) === 0) &&\n      ((usage & GPUBufferUsage.MAP_WRITE) === 0 ||\n        (usage & ~(GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE)) === 0);\n\n    t.expectGPUError(\n      'validation',\n      () => t.device.createBuffer({ size: kBufferSizeAlignment * 2, usage, mappedAtCreation }),\n      !isValid\n    );\n  });\n\nconst BufferUsage = GPUConst.BufferUsage;\n\ng.test('createBuffer_invalid_and_oom')\n  .desc(\n    `When creating a mappable buffer, it's expected that shmem may be immediately allocated\n(in the content process, before validation occurs in the GPU process). If the buffer is really\nlarge, though, it could fail shmem allocation before validation fails. Ensure that OOM error is\nhidden behind the \"more severe\" validation error.`\n  )\n  .paramsSubcasesOnly(u =>\n    u.combineWithParams([\n      { _valid: true, usage: BufferUsage.UNIFORM, size: 16 },\n      { _valid: true, usage: BufferUsage.STORAGE, size: 16 },\n      // Invalid because UNIFORM is not allowed with map usages.\n      { usage: BufferUsage.MAP_WRITE | BufferUsage.UNIFORM, size: 16 },\n      { usage: BufferUsage.MAP_WRITE | BufferUsage.UNIFORM, size: kMaxSafeMultipleOf8 },\n      { usage: BufferUsage.MAP_WRITE | BufferUsage.UNIFORM, size: 0x20_0000_0000 }, // 128 GiB\n      { usage: BufferUsage.MAP_READ | BufferUsage.UNIFORM, size: 16 },\n      { usage: BufferUsage.MAP_READ | BufferUsage.UNIFORM, size: kMaxSafeMultipleOf8 },\n      { usage: BufferUsage.MAP_READ | BufferUsage.UNIFORM, size: 0x20_0000_0000 }, // 128 GiB\n      // Invalid because size is not aligned to 4 bytes.\n      { usage: BufferUsage.STORAGE, size: 15 },\n      { usage: BufferUsage.STORAGE, size: kMaxSafeMultipleOf8 - 1 },\n      { usage: BufferUsage.STORAGE, size: 0x20_0000_0000 - 1 }, // 128 GiB - 1\n    ] as const)\n  )\n  .fn(t => {\n    const { _valid, usage, size } = t.params;\n\n    t.expectGPUError('validation', () => t.device.createBuffer({ size, usage }), !_valid);\n  });\n"],"file":"create.spec.js"}