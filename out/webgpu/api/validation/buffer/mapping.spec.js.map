{"version":3,"file":"mapping.spec.js","names":["description","makeTestGroup","attemptGarbageCollection","assert","unreachable","kBufferUsages","GPUConst","ValidationTest","F","testMapAsyncCall","success","earlyRejection","rejectName","buffer","mode","offset","size","p","mapAsync","expectValidationError","caught","rejectedEarly","catch","queueMicrotask","ex","Error","name","testGetMappedRangeCall","data","getMappedRange","expect","ArrayBuffer","undefined","byteLength","shouldThrow","createMappableBuffer","type","GPUMapMode","READ","device","createBuffer","usage","GPUBufferUsage","MAP_READ","WRITE","MAP_WRITE","g","kMapModeOptions","MapMode","kOffsetAlignment","kSizeAlignment","test","desc","paramsSubcasesOnly","u","combineWithParams","mapMode","validUsage","BufferUsage","combine","fn","t","params","getErrorBuffer","shouldReject","destroy","mappedAtCreation","unmap","bufferSize","offset2","mapSize","offset1","p1","mapping","bufferUsage","expectGPUError","subrangeSize","data0","data1","COPY_DST","mapping0","beginSubcases","mapOffset","actualOffset","actualSize","actualMapOffset","actualMapSize","size1","size2","remapBetweenCalls","range1StartsAfter2","range2StartsAfter1","disjoint","kStride","kNumStrides","stride","contents","Uint32Array","i","length"],"sources":["../../../../../src/webgpu/api/validation/buffer/mapping.spec.ts"],"sourcesContent":["export const description = `\nValidation tests for GPUBuffer.mapAsync, GPUBuffer.unmap and GPUBuffer.getMappedRange.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { attemptGarbageCollection } from '../../../../common/util/collect_garbage.js';\nimport { assert, unreachable } from '../../../../common/util/util.js';\nimport { kBufferUsages } from '../../../capability_info.js';\nimport { GPUConst } from '../../../constants.js';\nimport { ValidationTest } from '../validation_test.js';\n\nclass F extends ValidationTest {\n  async testMapAsyncCall(\n    success: boolean,\n    earlyRejection: boolean,\n    rejectName: string | null,\n    buffer: GPUBuffer,\n    mode: GPUMapModeFlags,\n    offset?: number,\n    size?: number\n  ) {\n    if (success) {\n      const p = buffer.mapAsync(mode, offset, size);\n      await p;\n    } else {\n      let p: Promise<void>;\n      this.expectValidationError(() => {\n        p = buffer.mapAsync(mode, offset, size);\n      });\n      let caught = false;\n      let rejectedEarly = false;\n      // If mapAsync rejected early, microtask A will run before B.\n      // If not, B will run before A.\n      p!.catch(() => {\n        // Microtask A\n        caught = true;\n      });\n      queueMicrotask(() => {\n        // Microtask B\n        rejectedEarly = caught;\n      });\n      try {\n        // This await will always complete after microtasks A and B are both done.\n        await p!;\n        assert(rejectName === null, 'mapAsync unexpectedly passed');\n      } catch (ex) {\n        assert(ex instanceof Error, 'mapAsync rejected with non-error');\n        assert(rejectName === ex.name, `mapAsync rejected unexpectedly with: ${ex}`);\n        assert(earlyRejection === rejectedEarly, 'mapAsync rejected at an unexpected timing');\n      }\n    }\n  }\n\n  testGetMappedRangeCall(success: boolean, buffer: GPUBuffer, offset?: number, size?: number) {\n    if (success) {\n      const data = buffer.getMappedRange(offset, size);\n      this.expect(data instanceof ArrayBuffer);\n      if (size !== undefined) {\n        this.expect(data.byteLength === size);\n      }\n    } else {\n      this.shouldThrow('OperationError', () => {\n        buffer.getMappedRange(offset, size);\n      });\n    }\n  }\n\n  createMappableBuffer(type: GPUMapModeFlags, size: number): GPUBuffer {\n    switch (type) {\n      case GPUMapMode.READ:\n        return this.device.createBuffer({\n          size,\n          usage: GPUBufferUsage.MAP_READ,\n        });\n      case GPUMapMode.WRITE:\n        return this.device.createBuffer({\n          size,\n          usage: GPUBufferUsage.MAP_WRITE,\n        });\n      default:\n        unreachable();\n    }\n  }\n}\n\nexport const g = makeTestGroup(F);\n\nconst kMapModeOptions = [GPUConst.MapMode.READ, GPUConst.MapMode.WRITE];\nconst kOffsetAlignment = 8;\nconst kSizeAlignment = 4;\n\ng.test('mapAsync,usage')\n  .desc(\n    `Test the usage validation for mapAsync.\n\n  For each buffer usage:\n  For GPUMapMode.READ, GPUMapMode.WRITE, and 0:\n    Test that the mapAsync call is valid iff the mapping usage is not 0 and the buffer usage\n    the mapMode flag.`\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combineWithParams([\n        { mapMode: GPUConst.MapMode.READ, validUsage: GPUConst.BufferUsage.MAP_READ },\n        { mapMode: GPUConst.MapMode.WRITE, validUsage: GPUConst.BufferUsage.MAP_WRITE },\n        // Using mapMode 0 is never valid, so there is no validUsage.\n        { mapMode: 0, validUsage: null },\n      ])\n      .combine('usage', kBufferUsages)\n  )\n  .fn(async t => {\n    const { mapMode, validUsage, usage } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage,\n    });\n\n    const success = usage === validUsage;\n    await t.testMapAsyncCall(success, false, 'OperationError', buffer, mapMode);\n  });\n\ng.test('mapAsync,invalidBuffer')\n  .desc('Test that mapAsync is an error when called on an invalid buffer.')\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n    const buffer = t.getErrorBuffer();\n    await t.testMapAsyncCall(false, false, 'OperationError', buffer, mapMode);\n  });\n\ng.test('mapAsync,state,destroyed')\n  .desc('Test that mapAsync is an error when called on a destroyed buffer.')\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, 16);\n\n    // Start mapping the buffer, we are going to destroy it before it resolves so it will reject\n    // the mapping promise with an AbortError.\n    t.shouldReject('AbortError', buffer.mapAsync(mapMode));\n\n    buffer.destroy();\n    await t.testMapAsyncCall(false, false, 'OperationError', buffer, mapMode);\n  });\n\ng.test('mapAsync,state,mappedAtCreation')\n  .desc(\n    `Test that mapAsync is an error when called on a buffer mapped at creation,\n    but succeeds after unmapping it.`\n  )\n  .paramsSubcasesOnly([\n    { mapMode: GPUConst.MapMode.READ, validUsage: GPUConst.BufferUsage.MAP_READ },\n    { mapMode: GPUConst.MapMode.WRITE, validUsage: GPUConst.BufferUsage.MAP_WRITE },\n  ])\n  .fn(async t => {\n    const { mapMode, validUsage } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage: validUsage,\n      mappedAtCreation: true,\n    });\n    await t.testMapAsyncCall(false, false, 'OperationError', buffer, mapMode);\n\n    buffer.unmap();\n    await t.testMapAsyncCall(true, false, null, buffer, mapMode);\n  });\n\ng.test('mapAsync,state,mapped')\n  .desc(\n    `Test that mapAsync is an error when called on a mapped buffer, but succeeds\n    after unmapping it.`\n  )\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n\n    const buffer = t.createMappableBuffer(mapMode, 16);\n    await t.testMapAsyncCall(true, false, null, buffer, mapMode);\n    await t.testMapAsyncCall(false, false, 'OperationError', buffer, mapMode);\n\n    buffer.unmap();\n    await t.testMapAsyncCall(true, false, null, buffer, mapMode);\n  });\n\ng.test('mapAsync,state,mappingPending')\n  .desc(\n    `Test that mapAsync is rejected when called on a buffer that is being mapped,\n    but succeeds after the previous mapping request is cancelled.\n    TODO: Replace shouldReject with testMapAsyncCall to check error timing`\n  )\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n\n    const buffer = t.createMappableBuffer(mapMode, 16);\n\n    // Start mapping the buffer, we are going to unmap it before it resolves so it will reject\n    // the mapping promise with an AbortError.\n    t.shouldReject('AbortError', buffer.mapAsync(mapMode));\n\n    // Do the test of mapAsync while [[pending_map]] is non-null. It has to be synchronous so\n    // that we can unmap the previous mapping in the same stack frame and testing this one doesn't\n    // get canceled, but instead is rejected.\n    t.shouldReject('OperationError', buffer.mapAsync(mapMode));\n\n    // Unmap the first mapping. It should now be possible to successfully call mapAsync\n    buffer.unmap();\n    await t.testMapAsyncCall(true, false, null, buffer, mapMode);\n  });\n\ng.test('mapAsync,sizeUnspecifiedOOB')\n  .desc(\n    `Test that mapAsync with size unspecified rejects if offset > buffer.[[size]],\n    with various cases at the limits of the buffer size or with a misaligned offset.\n    Also test for an empty buffer.`\n  )\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('mapMode', kMapModeOptions)\n      .combineWithParams([\n        // 0 size buffer.\n        { bufferSize: 0, offset: 0 },\n        { bufferSize: 0, offset: 1 },\n        { bufferSize: 0, offset: kOffsetAlignment },\n\n        // Test with a buffer that's not empty.\n        { bufferSize: 16, offset: 0 },\n        { bufferSize: 16, offset: kOffsetAlignment },\n        { bufferSize: 16, offset: 16 },\n        { bufferSize: 16, offset: 17 },\n        { bufferSize: 16, offset: 16 + kOffsetAlignment },\n      ])\n  )\n  .fn(async t => {\n    const { mapMode, bufferSize, offset } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, bufferSize);\n\n    const success = offset <= bufferSize;\n    await t.testMapAsyncCall(success, false, 'OperationError', buffer, mapMode, offset);\n  });\n\ng.test('mapAsync,offsetAndSizeAlignment')\n  .desc(\"Test that mapAsync fails if the alignment of offset and size isn't correct.\")\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('mapMode', kMapModeOptions)\n      .combine('offset', [0, kOffsetAlignment, kOffsetAlignment / 2])\n      .combine('size', [0, kSizeAlignment, kSizeAlignment / 2])\n  )\n  .fn(async t => {\n    const { mapMode, offset, size } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, 16);\n\n    const success = offset % kOffsetAlignment === 0 && size % kSizeAlignment === 0;\n    await t.testMapAsyncCall(success, false, 'OperationError', buffer, mapMode, offset, size);\n  });\n\ng.test('mapAsync,offsetAndSizeOOB')\n  .desc('Test that mapAsync fails if offset + size is larger than the buffer size.')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('mapMode', kMapModeOptions)\n      .combineWithParams([\n        // For a 0 size buffer\n        { bufferSize: 0, offset: 0, size: 0 },\n        { bufferSize: 0, offset: 0, size: 4 },\n        { bufferSize: 0, offset: 8, size: 0 },\n\n        // For a small buffer\n        { bufferSize: 16, offset: 0, size: 16 },\n        { bufferSize: 16, offset: kOffsetAlignment, size: 16 },\n\n        { bufferSize: 16, offset: 16, size: 0 },\n        { bufferSize: 16, offset: 16, size: kSizeAlignment },\n\n        { bufferSize: 16, offset: 8, size: 0 },\n        { bufferSize: 16, offset: 8, size: 8 },\n        { bufferSize: 16, offset: 8, size: 8 + kSizeAlignment },\n\n        // For a larger buffer\n        { bufferSize: 1024, offset: 0, size: 1024 },\n        { bufferSize: 1024, offset: kOffsetAlignment, size: 1024 },\n\n        { bufferSize: 1024, offset: 1024, size: 0 },\n        { bufferSize: 1024, offset: 1024, size: kSizeAlignment },\n\n        { bufferSize: 1024, offset: 512, size: 0 },\n        { bufferSize: 1024, offset: 512, size: 512 },\n        { bufferSize: 1024, offset: 512, size: 512 + kSizeAlignment },\n      ])\n  )\n  .fn(async t => {\n    const { mapMode, bufferSize, size, offset } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, bufferSize);\n\n    const success = offset + size <= bufferSize;\n    await t.testMapAsyncCall(success, false, 'OperationError', buffer, mapMode, offset, size);\n  });\n\ng.test('mapAsync,earlyRejection')\n  .desc(\"Test that mapAsync fails immediately if it's pending map.\")\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions).combine('offset2', [0, 8]))\n  .fn(async t => {\n    const { mapMode, offset2 } = t.params;\n\n    const bufferSize = 16;\n    const mapSize = 8;\n    const offset1 = 0;\n\n    const buffer = t.createMappableBuffer(mapMode, bufferSize);\n    const p1 = buffer.mapAsync(mapMode, offset1, mapSize); // succeeds\n    await t.testMapAsyncCall(false, true, 'OperationError', buffer, mapMode, offset2, mapSize);\n    await p1; // ensure the original map still succeeds\n  });\n\ng.test('getMappedRange,state,mapped')\n  .desc('Test that it is valid to call getMappedRange in the mapped state')\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n    const bufferSize = 16;\n    const buffer = t.createMappableBuffer(mapMode, bufferSize);\n    await buffer.mapAsync(mapMode);\n\n    const data = buffer.getMappedRange();\n    t.expect(data instanceof ArrayBuffer);\n    t.expect(data.byteLength === bufferSize);\n\n    t.expectValidationError(() => {\n      // map on already mapped buffer should be rejected\n      const mapping = buffer.mapAsync(mapMode);\n      t.expect(data.byteLength === bufferSize);\n      t.shouldReject('OperationError', mapping);\n    });\n\n    t.expect(data.byteLength === bufferSize);\n\n    buffer.unmap();\n\n    t.expect(data.byteLength === 0);\n  });\n\ng.test('getMappedRange,state,mappedAtCreation')\n  .desc(\n    `Test that, in the mapped-at-creation state, it is valid to call getMappedRange, for all buffer usages,\n    and invalid to call mapAsync, for all map modes.`\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('bufferUsage', kBufferUsages).combine('mapMode', kMapModeOptions)\n  )\n  .fn(async t => {\n    const { bufferUsage, mapMode } = t.params;\n    const bufferSize = 16;\n    const buffer = t.device.createBuffer({\n      usage: bufferUsage,\n      size: bufferSize,\n      mappedAtCreation: true,\n    });\n\n    const data = buffer.getMappedRange();\n    t.expect(data instanceof ArrayBuffer);\n    t.expect(data.byteLength === bufferSize);\n\n    t.expectValidationError(() => {\n      // map on already mapped buffer should be rejected\n      const mapping = buffer.mapAsync(mapMode);\n      t.expect(data.byteLength === bufferSize);\n      t.shouldReject('OperationError', mapping);\n    });\n\n    t.expect(data.byteLength === bufferSize);\n\n    buffer.unmap();\n\n    t.expect(data.byteLength === 0);\n  });\n\ng.test('getMappedRange,state,invalid_mappedAtCreation')\n  .desc(\n    `mappedAtCreation should return a mapped buffer, even if the buffer is invalid.\nLike VRAM allocation (see map_oom), validation can be performed asynchronously (in the GPU process)\nso the Content process doesn't necessarily know the buffer is invalid.`\n  )\n  .fn(async t => {\n    const buffer = t.expectGPUError('validation', () =>\n      t.device.createBuffer({\n        mappedAtCreation: true,\n        size: 16,\n        usage: 0xffff_ffff, // Invalid usage\n      })\n    );\n\n    // Should still be valid.\n    buffer.getMappedRange();\n  });\n\ng.test('getMappedRange,state,mappedAgain')\n  .desc(\n    'Test that it is valid to call getMappedRange in the mapped state, even if there is a duplicate mapAsync before'\n  )\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, 16);\n    await buffer.mapAsync(mapMode);\n\n    // call mapAsync again on already mapped buffer should fail\n    await t.testMapAsyncCall(false, false, 'OperationError', buffer, mapMode);\n\n    // getMapppedRange should still success\n    t.testGetMappedRangeCall(true, buffer);\n  });\n\ng.test('getMappedRange,state,unmapped')\n  .desc(\n    `Test that it is invalid to call getMappedRange in the unmapped state.\nTest for various cases of being unmapped: at creation, after a mapAsync call or after being created mapped.`\n  )\n  .fn(async t => {\n    // It is invalid to call getMappedRange when the buffer starts unmapped when created.\n    {\n      const buffer = t.createMappableBuffer(GPUMapMode.READ, 16);\n      t.testGetMappedRangeCall(false, buffer);\n    }\n\n    // It is invalid to call getMappedRange when the buffer is unmapped after mapAsync.\n    {\n      const buffer = t.createMappableBuffer(GPUMapMode.READ, 16);\n      await buffer.mapAsync(GPUMapMode.READ);\n      buffer.unmap();\n      t.testGetMappedRangeCall(false, buffer);\n    }\n\n    // It is invalid to call getMappedRange when the buffer is unmapped after mappedAtCreation.\n    {\n      const buffer = t.device.createBuffer({\n        usage: GPUBufferUsage.MAP_READ,\n        size: 16,\n        mappedAtCreation: true,\n      });\n      buffer.unmap();\n      t.testGetMappedRangeCall(false, buffer);\n    }\n  });\n\ng.test('getMappedRange,subrange,mapped')\n  .desc(\n    `Test that old getMappedRange returned arraybuffer does not exist after unmap, and newly returned\n    arraybuffer after new map has correct subrange`\n  )\n  .params(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n    const bufferSize = 16;\n    const offset = 8;\n    const subrangeSize = bufferSize - offset;\n    const buffer = t.createMappableBuffer(mapMode, bufferSize);\n    await buffer.mapAsync(mapMode);\n\n    const data0 = buffer.getMappedRange();\n    t.expect(data0 instanceof ArrayBuffer);\n    t.expect(data0.byteLength === bufferSize);\n\n    buffer.unmap();\n    t.expect(data0.byteLength === 0);\n\n    await buffer.mapAsync(mapMode, offset);\n    const data1 = buffer.getMappedRange(8);\n\n    t.expect(data0.byteLength === 0);\n    t.expect(data1.byteLength === subrangeSize);\n  });\n\ng.test('getMappedRange,subrange,mappedAtCreation')\n  .desc(\n    `Test that old getMappedRange returned arraybuffer does not exist after unmap and newly returned\n    arraybuffer after new map has correct subrange`\n  )\n  .fn(async t => {\n    const bufferSize = 16;\n    const offset = 8;\n    const subrangeSize = bufferSize - offset;\n    const buffer = t.device.createBuffer({\n      size: bufferSize,\n      usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n      mappedAtCreation: true,\n    });\n\n    const data0 = buffer.getMappedRange();\n    t.expect(data0 instanceof ArrayBuffer);\n    t.expect(data0.byteLength === bufferSize);\n\n    buffer.unmap();\n    t.expect(data0.byteLength === 0);\n\n    await buffer.mapAsync(GPUMapMode.READ, offset);\n    const data1 = buffer.getMappedRange(8);\n\n    t.expect(data0.byteLength === 0);\n    t.expect(data1.byteLength === subrangeSize);\n  });\n\ng.test('getMappedRange,state,destroyed')\n  .desc(\n    `Test that it is invalid to call getMappedRange in the destroyed state.\nTest for various cases of being destroyed: at creation, after a mapAsync call or after being created mapped.`\n  )\n  .fn(async t => {\n    // It is invalid to call getMappedRange when the buffer is destroyed when unmapped.\n    {\n      const buffer = t.createMappableBuffer(GPUMapMode.READ, 16);\n      buffer.destroy();\n      t.testGetMappedRangeCall(false, buffer);\n    }\n\n    // It is invalid to call getMappedRange when the buffer is destroyed when mapped.\n    {\n      const buffer = t.createMappableBuffer(GPUMapMode.READ, 16);\n      await buffer.mapAsync(GPUMapMode.READ);\n      buffer.destroy();\n      t.testGetMappedRangeCall(false, buffer);\n    }\n\n    // It is invalid to call getMappedRange when the buffer is destroyed when mapped at creation.\n    {\n      const buffer = t.device.createBuffer({\n        usage: GPUBufferUsage.MAP_READ,\n        size: 16,\n        mappedAtCreation: true,\n      });\n      buffer.destroy();\n      t.testGetMappedRangeCall(false, buffer);\n    }\n  });\n\ng.test('getMappedRange,state,mappingPending')\n  .desc(\n    `Test that it is invalid to call getMappedRange in the mappingPending state.\n         TODO: Replace shouldReject with testMapAsyncCall to check error timing`\n  )\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, 16);\n\n    /* noawait */ const mapping0 = buffer.mapAsync(mapMode);\n    // seconding mapping should be rejected\n    t.shouldReject('OperationError', buffer.mapAsync(mapMode));\n\n    // invalid in mappingPending state\n    t.testGetMappedRangeCall(false, buffer);\n\n    await mapping0;\n\n    // valid after buffer is mapped\n    t.testGetMappedRangeCall(true, buffer);\n  });\n\ng.test('getMappedRange,offsetAndSizeAlignment,mapped')\n  .desc(`Test that getMappedRange fails if the alignment of offset and size isn't correct.`)\n  .params(u =>\n    u\n      .combine('mapMode', kMapModeOptions)\n      .beginSubcases()\n      .combine('mapOffset', [0, kOffsetAlignment])\n      .combine('offset', [0, kOffsetAlignment, kOffsetAlignment / 2])\n      .combine('size', [0, kSizeAlignment, kSizeAlignment / 2])\n  )\n  .fn(async t => {\n    const { mapMode, mapOffset, offset, size } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, 32);\n    await buffer.mapAsync(mapMode, mapOffset);\n\n    const success = offset % kOffsetAlignment === 0 && size % kSizeAlignment === 0;\n    t.testGetMappedRangeCall(success, buffer, offset + mapOffset, size);\n  });\n\ng.test('getMappedRange,offsetAndSizeAlignment,mappedAtCreation')\n  .desc(`Test that getMappedRange fails if the alignment of offset and size isn't correct.`)\n  .paramsSubcasesOnly(u =>\n    u\n      .combine('offset', [0, kOffsetAlignment, kOffsetAlignment / 2])\n      .combine('size', [0, kSizeAlignment, kSizeAlignment / 2])\n  )\n  .fn(async t => {\n    const { offset, size } = t.params;\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n      mappedAtCreation: true,\n    });\n    const success = offset % kOffsetAlignment === 0 && size % kSizeAlignment === 0;\n    t.testGetMappedRangeCall(success, buffer, offset, size);\n  });\n\ng.test('getMappedRange,sizeAndOffsetOOB,mappedAtCreation')\n  .desc(\n    `Test that getMappedRange size + offset must be less than the buffer size for a\n    buffer mapped at creation. (and offset has not constraints on its own)`\n  )\n  .paramsSubcasesOnly([\n    // Tests for a zero-sized buffer, with and without a size defined.\n    { bufferSize: 0, offset: undefined, size: undefined },\n    { bufferSize: 0, offset: undefined, size: 0 },\n    { bufferSize: 0, offset: undefined, size: kSizeAlignment },\n    { bufferSize: 0, offset: 0, size: undefined },\n    { bufferSize: 0, offset: 0, size: 0 },\n    { bufferSize: 0, offset: kOffsetAlignment, size: undefined },\n    { bufferSize: 0, offset: kOffsetAlignment, size: 0 },\n\n    // Tests for a non-empty buffer, with an undefined offset.\n    { bufferSize: 80, offset: undefined, size: 80 },\n    { bufferSize: 80, offset: undefined, size: 80 + kSizeAlignment },\n\n    // Tests for a non-empty buffer, with an undefined size.\n    { bufferSize: 80, offset: undefined, size: undefined },\n    { bufferSize: 80, offset: 0, size: undefined },\n    { bufferSize: 80, offset: kOffsetAlignment, size: undefined },\n    { bufferSize: 80, offset: 80, size: undefined },\n    { bufferSize: 80, offset: 80 + kOffsetAlignment, size: undefined },\n\n    // Tests for a non-empty buffer with a size defined.\n    { bufferSize: 80, offset: 0, size: 80 },\n    { bufferSize: 80, offset: 0, size: 80 + kSizeAlignment },\n    { bufferSize: 80, offset: kOffsetAlignment, size: 80 },\n\n    { bufferSize: 80, offset: 40, size: 40 },\n    { bufferSize: 80, offset: 40 + kOffsetAlignment, size: 40 },\n    { bufferSize: 80, offset: 40, size: 40 + kSizeAlignment },\n  ])\n  .fn(t => {\n    const { bufferSize, offset, size } = t.params;\n    const buffer = t.device.createBuffer({\n      size: bufferSize,\n      usage: GPUBufferUsage.COPY_DST,\n      mappedAtCreation: true,\n    });\n\n    const actualOffset = offset ?? 0;\n    const actualSize = size ?? bufferSize - actualOffset;\n\n    const success = actualOffset <= bufferSize && actualOffset + actualSize <= bufferSize;\n    t.testGetMappedRangeCall(success, buffer, offset, size);\n  });\n\ng.test('getMappedRange,sizeAndOffsetOOB,mapped')\n  .desc('Test that getMappedRange size + offset must be less than the mapAsync range.')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('mapMode', kMapModeOptions)\n      .combineWithParams([\n        // Tests for an empty buffer, and implicit mapAsync size.\n        { bufferSize: 0, mapOffset: 0, mapSize: undefined, offset: undefined, size: undefined },\n        { bufferSize: 0, mapOffset: 0, mapSize: undefined, offset: undefined, size: 0 },\n        {\n          bufferSize: 0,\n          mapOffset: 0,\n          mapSize: undefined,\n          offset: undefined,\n          size: kSizeAlignment,\n        },\n        { bufferSize: 0, mapOffset: 0, mapSize: undefined, offset: 0, size: undefined },\n        { bufferSize: 0, mapOffset: 0, mapSize: undefined, offset: 0, size: 0 },\n        {\n          bufferSize: 0,\n          mapOffset: 0,\n          mapSize: undefined,\n          offset: kOffsetAlignment,\n          size: undefined,\n        },\n        { bufferSize: 0, mapOffset: 0, mapSize: undefined, offset: kOffsetAlignment, size: 0 },\n\n        // Tests for an empty buffer, and explicit mapAsync size.\n        { bufferSize: 0, mapOffset: 0, mapSize: 0, offset: undefined, size: undefined },\n        { bufferSize: 0, mapOffset: 0, mapSize: 0, offset: 0, size: undefined },\n        { bufferSize: 0, mapOffset: 0, mapSize: 0, offset: 0, size: 0 },\n        { bufferSize: 0, mapOffset: 0, mapSize: 0, offset: kOffsetAlignment, size: undefined },\n        { bufferSize: 0, mapOffset: 0, mapSize: 0, offset: kOffsetAlignment, size: 0 },\n\n        // Test for a fully implicit mapAsync call\n        { bufferSize: 80, mapOffset: undefined, mapSize: undefined, offset: 0, size: 80 },\n        {\n          bufferSize: 80,\n          mapOffset: undefined,\n          mapSize: undefined,\n          offset: 0,\n          size: 80 + kSizeAlignment,\n        },\n        {\n          bufferSize: 80,\n          mapOffset: undefined,\n          mapSize: undefined,\n          offset: kOffsetAlignment,\n          size: 80,\n        },\n\n        // Test for a mapAsync call with an implicit size\n        { bufferSize: 80, mapOffset: 24, mapSize: undefined, offset: 24, size: 80 - 24 },\n        {\n          bufferSize: 80,\n          mapOffset: 24,\n          mapSize: undefined,\n          offset: 0,\n          size: 80 - 24 + kSizeAlignment,\n        },\n        {\n          bufferSize: 80,\n          mapOffset: 24,\n          mapSize: undefined,\n          offset: kOffsetAlignment,\n          size: 80 - 24,\n        },\n\n        // Test for a non-empty buffer fully mapped.\n        { bufferSize: 80, mapOffset: 0, mapSize: 80, offset: 0, size: 80 },\n        { bufferSize: 80, mapOffset: 0, mapSize: 80, offset: kOffsetAlignment, size: 80 },\n        { bufferSize: 80, mapOffset: 0, mapSize: 80, offset: 0, size: 80 + kSizeAlignment },\n\n        { bufferSize: 80, mapOffset: 0, mapSize: 80, offset: 40, size: 40 },\n        { bufferSize: 80, mapOffset: 0, mapSize: 80, offset: 40 + kOffsetAlignment, size: 40 },\n        { bufferSize: 80, mapOffset: 0, mapSize: 80, offset: 40, size: 40 + kSizeAlignment },\n\n        // Test for a buffer partially mapped.\n        { bufferSize: 80, mapOffset: 24, mapSize: 40, offset: 24, size: 40 },\n        { bufferSize: 80, mapOffset: 24, mapSize: 40, offset: 24 - kOffsetAlignment, size: 40 },\n        { bufferSize: 80, mapOffset: 24, mapSize: 40, offset: 24 + kOffsetAlignment, size: 40 },\n        { bufferSize: 80, mapOffset: 24, mapSize: 40, offset: 24, size: 40 + kSizeAlignment },\n\n        // Test for a partially mapped buffer with implicit size and offset for getMappedRange.\n        // - Buffer partially mapped in the middle\n        { bufferSize: 80, mapOffset: 24, mapSize: 40, offset: undefined, size: undefined },\n        { bufferSize: 80, mapOffset: 24, mapSize: 40, offset: 0, size: undefined },\n        { bufferSize: 80, mapOffset: 24, mapSize: 40, offset: 24, size: undefined },\n        // - Buffer partially mapped to the end\n        { bufferSize: 80, mapOffset: 24, mapSize: undefined, offset: 24, size: undefined },\n        { bufferSize: 80, mapOffset: 24, mapSize: undefined, offset: 80, size: undefined },\n        // - Buffer partially mapped from the start\n        { bufferSize: 80, mapOffset: 0, mapSize: 64, offset: undefined, size: undefined },\n        { bufferSize: 80, mapOffset: 0, mapSize: 64, offset: undefined, size: 64 },\n      ])\n  )\n  .fn(async t => {\n    const { mapMode, bufferSize, mapOffset, mapSize, offset, size } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, bufferSize);\n    await buffer.mapAsync(mapMode, mapOffset, mapSize);\n\n    const actualMapOffset = mapOffset ?? 0;\n    const actualMapSize = mapSize ?? bufferSize - actualMapOffset;\n\n    const actualOffset = offset ?? 0;\n    const actualSize = size ?? bufferSize - actualOffset;\n\n    const success =\n      actualOffset >= actualMapOffset &&\n      actualOffset <= bufferSize &&\n      actualOffset + actualSize <= actualMapOffset + actualMapSize;\n    t.testGetMappedRangeCall(success, buffer, offset, size);\n  });\n\ng.test('getMappedRange,disjointRanges')\n  .desc('Test that the ranges asked through getMappedRange must be disjoint.')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('remapBetweenCalls', [false, true])\n      .combineWithParams([\n        // Disjoint ranges with one that's empty.\n        { offset1: 8, size1: 0, offset2: 8, size2: 8 },\n        { offset1: 16, size1: 0, offset2: 8, size2: 8 },\n\n        { offset1: 8, size1: 8, offset2: 8, size2: 0 },\n        { offset1: 8, size1: 8, offset2: 16, size2: 0 },\n\n        // Disjoint ranges with both non-empty.\n        { offset1: 0, size1: 8, offset2: 8, size2: 8 },\n        { offset1: 16, size1: 8, offset2: 8, size2: 8 },\n\n        { offset1: 8, size1: 8, offset2: 0, size2: 8 },\n        { offset1: 8, size1: 8, offset2: 16, size2: 8 },\n\n        // Empty range contained inside another one.\n        { offset1: 16, size1: 20, offset2: 24, size2: 0 },\n        { offset1: 24, size1: 0, offset2: 16, size2: 20 },\n\n        // Ranges that overlap only partially.\n        { offset1: 16, size1: 20, offset2: 8, size2: 20 },\n        { offset1: 16, size1: 20, offset2: 32, size2: 20 },\n\n        // Ranges that include one another.\n        { offset1: 0, size1: 80, offset2: 16, size2: 20 },\n        { offset1: 16, size1: 20, offset2: 0, size2: 80 },\n      ])\n  )\n  .fn(async t => {\n    const { offset1, size1, offset2, size2, remapBetweenCalls } = t.params;\n    const buffer = t.device.createBuffer({ size: 80, usage: GPUBufferUsage.MAP_READ });\n    await buffer.mapAsync(GPUMapMode.READ);\n\n    t.testGetMappedRangeCall(true, buffer, offset1, size1);\n\n    if (remapBetweenCalls) {\n      buffer.unmap();\n      await buffer.mapAsync(GPUMapMode.READ);\n    }\n\n    const range1StartsAfter2 = offset1 >= offset2 + size2;\n    const range2StartsAfter1 = offset2 >= offset1 + size1;\n    const disjoint = range1StartsAfter2 || range2StartsAfter1;\n    const success = disjoint || remapBetweenCalls;\n\n    t.testGetMappedRangeCall(success, buffer, offset2, size2);\n  });\n\ng.test('getMappedRange,disjoinRanges_many')\n  .desc('Test getting a lot of small ranges, and that the disjoint check checks them all.')\n  .fn(async t => {\n    const kStride = 256;\n    const kNumStrides = 256;\n\n    const buffer = t.device.createBuffer({\n      size: kStride * kNumStrides,\n      usage: GPUBufferUsage.MAP_READ,\n    });\n    await buffer.mapAsync(GPUMapMode.READ);\n\n    // Get a lot of small mapped ranges.\n    for (let stride = 0; stride < kNumStrides; stride++) {\n      t.testGetMappedRangeCall(true, buffer, stride * kStride, 8);\n    }\n\n    // Check for each range it is invalid to get a range that overlaps it and check that it is valid\n    // to get ranges for the rest of the buffer.\n    for (let stride = 0; stride < kNumStrides; stride++) {\n      t.testGetMappedRangeCall(false, buffer, stride * kStride, kStride);\n      t.testGetMappedRangeCall(true, buffer, stride * kStride + 8, kStride - 8);\n    }\n  });\n\ng.test('unmap,state,unmapped')\n  .desc(\n    `Test it is valid to call unmap on a buffer that is unmapped (at creation, or after\n    mappedAtCreation or mapAsync)`\n  )\n  .fn(async t => {\n    // It is valid to call unmap after creation of an unmapped buffer.\n    {\n      const buffer = t.device.createBuffer({ size: 16, usage: GPUBufferUsage.MAP_READ });\n      buffer.unmap();\n    }\n\n    // It is valid to call unmap after unmapping a mapAsynced buffer.\n    {\n      const buffer = t.createMappableBuffer(GPUMapMode.READ, 16);\n      await buffer.mapAsync(GPUMapMode.READ);\n      buffer.unmap();\n      buffer.unmap();\n    }\n\n    // It is valid to call unmap after unmapping a mappedAtCreation buffer.\n    {\n      const buffer = t.device.createBuffer({\n        usage: GPUBufferUsage.MAP_READ,\n        size: 16,\n        mappedAtCreation: true,\n      });\n      buffer.unmap();\n      buffer.unmap();\n    }\n  });\n\ng.test('unmap,state,destroyed')\n  .desc(\n    `Test it is valid to call unmap on a buffer that is destroyed (at creation, or after\n    mappedAtCreation or mapAsync)`\n  )\n  .fn(async t => {\n    // It is valid to call unmap after destruction of an unmapped buffer.\n    {\n      const buffer = t.device.createBuffer({ size: 16, usage: GPUBufferUsage.MAP_READ });\n      buffer.destroy();\n      buffer.unmap();\n    }\n\n    // It is valid to call unmap after destroying a mapAsynced buffer.\n    {\n      const buffer = t.createMappableBuffer(GPUMapMode.READ, 16);\n      await buffer.mapAsync(GPUMapMode.READ);\n      buffer.destroy();\n      buffer.unmap();\n    }\n\n    // It is valid to call unmap after destroying a mappedAtCreation buffer.\n    {\n      const buffer = t.device.createBuffer({\n        usage: GPUBufferUsage.MAP_READ,\n        size: 16,\n        mappedAtCreation: true,\n      });\n      buffer.destroy();\n      buffer.unmap();\n    }\n  });\n\ng.test('unmap,state,mappedAtCreation')\n  .desc('Test it is valid to call unmap on a buffer mapped at creation, for various usages')\n  .paramsSubcasesOnly(u =>\n    u //\n      .combine('bufferUsage', kBufferUsages)\n  )\n  .fn(t => {\n    const { bufferUsage } = t.params;\n    const buffer = t.device.createBuffer({ size: 16, usage: bufferUsage, mappedAtCreation: true });\n\n    buffer.unmap();\n  });\n\ng.test('unmap,state,mapped')\n  .desc(\"Test it is valid to call unmap on a buffer that's mapped\")\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, 16);\n\n    await buffer.mapAsync(mapMode);\n    buffer.unmap();\n  });\n\ng.test('unmap,state,mappingPending')\n  .desc(\"Test it is valid to call unmap on a buffer that's being mapped\")\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(t => {\n    const { mapMode } = t.params;\n    const buffer = t.createMappableBuffer(mapMode, 16);\n\n    const mapping = buffer.mapAsync(mapMode);\n    t.shouldReject('AbortError', mapping);\n\n    buffer.unmap();\n  });\n\ng.test('gc_behavior,mappedAtCreation')\n  .desc(\n    \"Test that GCing the buffer while mappings are handed out doesn't invalidate them - mappedAtCreation case\"\n  )\n  .fn(async t => {\n    let buffer = null;\n    buffer = t.device.createBuffer({\n      size: 256,\n      usage: GPUBufferUsage.COPY_DST,\n      mappedAtCreation: true,\n    });\n\n    // Write some non-zero data to the buffer.\n    const contents = new Uint32Array(buffer.getMappedRange());\n    for (let i = 0; i < contents.length; i++) {\n      contents[i] = i;\n    }\n\n    // Trigger garbage collection that should collect the buffer (or as if it collected it)\n    // NOTE: This won't fail unless the browser immediately starts reusing the memory, or gives it\n    // back to the OS. One good option for browsers to check their logic is good is to zero-out the\n    // memory on GPUBuffer (or internal gpu::Buffer-like object) destruction.\n    buffer = null;\n    await attemptGarbageCollection();\n\n    // Use the mapping again both for read and write, it should work.\n    for (let i = 0; i < contents.length; i++) {\n      t.expect(contents[i] === i);\n      contents[i] = i + 1;\n    }\n  });\n\ng.test('gc_behavior,mapAsync')\n  .desc(\n    \"Test that GCing the buffer while mappings are handed out doesn't invalidate them - mapAsync case\"\n  )\n  .paramsSubcasesOnly(u => u.combine('mapMode', kMapModeOptions))\n  .fn(async t => {\n    const { mapMode } = t.params;\n\n    let buffer = null;\n    buffer = t.createMappableBuffer(mapMode, 256);\n    await buffer.mapAsync(mapMode);\n\n    // Write some non-zero data to the buffer.\n    const contents = new Uint32Array(buffer.getMappedRange());\n    for (let i = 0; i < contents.length; i++) {\n      contents[i] = i;\n    }\n\n    // Trigger garbage collection that should collect the buffer (or as if it collected it)\n    // NOTE: This won't fail unless the browser immediately starts reusing the memory, or gives it\n    // back to the OS. One good option for browsers to check their logic is good is to zero-out the\n    // memory on GPUBuffer (or internal gpu::Buffer-like object) destruction.\n    buffer = null;\n    await attemptGarbageCollection();\n\n    // Use the mapping again both for read and write, it should work.\n    for (let i = 0; i < contents.length; i++) {\n      t.expect(contents[i] === i);\n      contents[i] = i + 1;\n    }\n  });\n"],"mappings":"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"}