{"version":3,"sources":["../../../../../../src/webgpu/api/validation/state/device_lost/destroy.spec.ts"],"names":["description","makeTestGroup","allBindingEntries","bindingTypeInfo","kBindableResources","kBufferUsageKeys","kBufferUsageInfo","kBufferUsageCopy","kBufferUsageCopyInfo","kCompressedTextureFormats","kQueryTypes","kTextureUsageType","kTextureUsageTypeInfo","kTextureUsageCopy","kTextureUsageCopyInfo","kRegularTextureFormats","kRenderableColorTextureFormats","kShaderStageKeys","kTextureFormatInfo","canCopyFromCanvasContext","createCanvas","kAllCanvasTypes","kValidCanvasContextIds","ValidationTest","kCommandValidationStages","DeviceDestroyTests","executeAfterDestroy","fn","awaitLost","expectDeviceLost","expectValidationError","device","destroy","lostInfo","lost","expect","reason","executeCommandsAfterDestroy","stage","encoderType","createEncoder","validateFinish","encoder","finish","validateFinishAndSubmit","commands","queue","submit","g","test","desc","params","u","combine","beginSubcases","filter","usageType","usageCopy","t","mappedAtCreation","createBuffer","size","usage","format","info","renderable","storage","blockWidth","blockHeight","createTexture","width","height","beforeAllSubcases","selectDeviceOrSkipTestCase","feature","texture","createView","createSampler","entry","visibility","validStages","createBindGroupLayout","entries","binding","resourceType","resource","layout","getBindingResource","createBindGroup","bindGroupLayout","createPipelineLayout","bindGroupLayouts","createShaderModule","code","getNoOpShaderCode","cShader","createComputePipeline","compute","module","entryPoint","vShader","fShader","createRenderPipeline","vertex","fragment","targets","writeMask","createCommandEncoder","createRenderBundleEncoder","colorFormats","type","selectDeviceForQueryTypeOrSkipTestCase","createQuerySet","count","kBufferSize","src","GPUBufferUsage","COPY_SRC","dst","COPY_DST","maker","copyBufferToBuffer","bytesPerBlock","buffer","GPUTextureUsage","copySize","copyBufferToTexture","copyTextureToBuffer","copyTextureToTexture","clearBuffer","querySet","writeTimestamp","kQueryCount","createQuerySetWithState","destination","createBufferWithState","QUERY_RESOLVE","resolveQuerySet","pipeline","setPipeline","dispatchWorkgroups","draw","numElements","data","Uint8Array","writeBuffer","writeTexture","contextType","canvasType","canvas","ctx","getContext","skip","tryTrackForCleanup","copyExternalImageToTexture","source","createImageBitmap","imageBitmap","ImageData","Uint8ClampedArray"],"mappings":"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","sourcesContent":["export const description = `\nTests for device lost induced via destroy.\n  - Tests that prior to device destruction, valid APIs do not generate errors (control case).\n  - After device destruction, runs the same APIs. No expected observable results, so test crash or future failures are the only current failure indicators.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport {\n  allBindingEntries,\n  bindingTypeInfo,\n  kBindableResources,\n  kBufferUsageKeys,\n  kBufferUsageInfo,\n  kBufferUsageCopy,\n  kBufferUsageCopyInfo,\n  kCompressedTextureFormats,\n  kQueryTypes,\n  kTextureUsageType,\n  kTextureUsageTypeInfo,\n  kTextureUsageCopy,\n  kTextureUsageCopyInfo,\n  kRegularTextureFormats,\n  kRenderableColorTextureFormats,\n  kShaderStageKeys,\n  kTextureFormatInfo,\n} from '../../../../capability_info.js';\nimport { CommandBufferMaker, EncoderType } from '../../../../util/command_buffer_maker.js';\nimport {\n  canCopyFromCanvasContext,\n  createCanvas,\n  kAllCanvasTypes,\n  kValidCanvasContextIds,\n} from '../../../../util/create_elements.js';\nimport { ValidationTest } from '../../validation_test.js';\n\nconst kCommandValidationStages = ['finish', 'submit'];\ntype CommandValidationStage = typeof kCommandValidationStages[number];\n\nclass DeviceDestroyTests extends ValidationTest {\n  /**\n   * Expects that `fn` does not produce any errors before the device is destroyed, and then calls\n   * `fn` after the device is destroyed without any specific expectation. If `awaitLost` is true, we\n   * also wait for device.lost to resolve before executing `fn` in the destroy case.\n   */\n  async executeAfterDestroy(fn: () => void, awaitLost: boolean): Promise<void> {\n    this.expectDeviceLost('destroyed');\n\n    this.expectValidationError(fn, false);\n    this.device.destroy();\n    if (awaitLost) {\n      const lostInfo = await this.device.lost;\n      this.expect(lostInfo.reason === 'destroyed');\n    }\n    fn();\n  }\n\n  /**\n   * Expects that encoders can finish and submit the resulting commands before the device is\n   * destroyed, then repeats the same process after the device is destroyed without any specific\n   * expectations.\n   * There are two valid stages: 'finish' and 'submit'.\n   *   'finish': Tests [encode, finish] and [encoder, destroy, finish]\n   *   'submit': Tests [encoder, finish, submit] and [encoder, finish, destroy, submit]\n   */\n  async executeCommandsAfterDestroy<T extends EncoderType>(\n    stage: CommandValidationStage,\n    awaitLost: boolean,\n    encoderType: T,\n    fn: (maker: CommandBufferMaker<T>) => CommandBufferMaker<T>\n  ): Promise<void> {\n    this.expectDeviceLost('destroyed');\n\n    switch (stage) {\n      case 'finish': {\n        // Control case\n        fn(this.createEncoder(encoderType)).validateFinish(true);\n        // Validation case\n        const encoder = fn(this.createEncoder(encoderType));\n        await this.executeAfterDestroy(() => {\n          encoder.finish();\n        }, awaitLost);\n        break;\n      }\n      case 'submit': {\n        // Control case\n        fn(this.createEncoder(encoderType)).validateFinishAndSubmit(true, true);\n        // Validation case\n        const commands = fn(this.createEncoder(encoderType)).validateFinish(true);\n        await this.executeAfterDestroy(() => {\n          this.queue.submit([commands]);\n        }, awaitLost);\n        break;\n      }\n    }\n  }\n}\n\nexport const g = makeTestGroup(DeviceDestroyTests);\n\ng.test('createBuffer')\n  .desc(\n    `\nTests creating buffers on destroyed device. Tests valid combinations of:\n  - Various usages\n  - Mapped at creation or not\n  `\n  )\n  .params(u =>\n    u\n      .combine('usageType', kBufferUsageKeys)\n      .beginSubcases()\n      .combine('usageCopy', kBufferUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ usageType, usageCopy }) => {\n        if (usageType === 'COPY_SRC' || usageType === 'COPY_DST') {\n          return false;\n        }\n        if (usageType === 'MAP_READ') {\n          return usageCopy === 'COPY_NONE' || usageCopy === 'COPY_DST';\n        }\n        if (usageType === 'MAP_WRITE') {\n          return usageCopy === 'COPY_NONE' || usageCopy === 'COPY_SRC';\n        }\n        return true;\n      })\n      .combine('mappedAtCreation', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, usageType, usageCopy, mappedAtCreation } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createBuffer({\n        size: 16,\n        usage: kBufferUsageInfo[usageType] | kBufferUsageCopyInfo[usageCopy],\n        mappedAtCreation,\n      });\n    }, awaitLost);\n  });\n\ng.test('createTexture,2d,uncompressed_format')\n  .desc(\n    `\nTests creating 2d uncompressed textures on destroyed device. Tests valid combinations of:\n  - Various uncompressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kRegularTextureFormats)\n      .beginSubcases()\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        const info = kTextureFormatInfo[format];\n        return !(\n          (!info.renderable && usageType === 'render') ||\n          (!info.storage && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    const { blockWidth, blockHeight } = kTextureFormatInfo[format];\n    await t.executeAfterDestroy(() => {\n      t.device.createTexture({\n        size: { width: blockWidth, height: blockHeight },\n        usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n        format,\n      });\n    }, awaitLost);\n  });\n\ng.test('createTexture,2d,compressed_format')\n  .desc(\n    `\nTests creating 2d compressed textures on destroyed device. Tests valid combinations of:\n  - Various compressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kCompressedTextureFormats)\n      .beginSubcases()\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        const info = kTextureFormatInfo[format];\n        return !(\n          (!info.renderable && usageType === 'render') ||\n          (!info.storage && usageType === 'storage')\n        );\n      })\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    t.selectDeviceOrSkipTestCase(kTextureFormatInfo[format].feature);\n  })\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    const { blockWidth, blockHeight } = kTextureFormatInfo[format];\n    await t.executeAfterDestroy(() => {\n      t.device.createTexture({\n        size: { width: blockWidth, height: blockHeight },\n        usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n        format,\n      });\n    }, awaitLost);\n  });\n\ng.test('createView,2d,uncompressed_format')\n  .desc(\n    `\nTests creating texture views on 2d uncompressed textures from destroyed device. Tests valid combinations of:\n  - Various uncompressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kRegularTextureFormats)\n      .beginSubcases()\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        const info = kTextureFormatInfo[format];\n        return !(\n          (!info.renderable && usageType === 'render') ||\n          (!info.storage && usageType === 'storage')\n        );\n      })\n  )\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    const { blockWidth, blockHeight } = kTextureFormatInfo[format];\n    const texture = t.device.createTexture({\n      size: { width: blockWidth, height: blockHeight },\n      usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      texture.createView({ format });\n    }, awaitLost);\n  });\n\ng.test('createView,2d,compressed_format')\n  .desc(\n    `\nTests creating texture views on 2d compressed textures from destroyed device. Tests valid combinations of:\n  - Various compressed texture formats\n  - Various usages\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kCompressedTextureFormats)\n      .beginSubcases()\n      .combine('usageType', kTextureUsageType)\n      .combine('usageCopy', kTextureUsageCopy)\n      .combine('awaitLost', [true, false])\n      .filter(({ format, usageType }) => {\n        const info = kTextureFormatInfo[format];\n        return !(\n          (!info.renderable && usageType === 'render') ||\n          (!info.storage && usageType === 'storage')\n        );\n      })\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    t.selectDeviceOrSkipTestCase(kTextureFormatInfo[format].feature);\n  })\n  .fn(async t => {\n    const { awaitLost, format, usageType, usageCopy } = t.params;\n    const { blockWidth, blockHeight } = kTextureFormatInfo[format];\n    const texture = t.device.createTexture({\n      size: { width: blockWidth, height: blockHeight },\n      usage: kTextureUsageTypeInfo[usageType] | kTextureUsageCopyInfo[usageCopy],\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      texture.createView({ format });\n    }, awaitLost);\n  });\n\ng.test('createSampler')\n  .desc(\n    `\nTests creating samplers on destroyed device.\n  `\n  )\n  .params(u => u.beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createSampler();\n    }, awaitLost);\n  });\n\ng.test('createBindGroupLayout')\n  .desc(\n    `\nTests creating bind group layouts on destroyed device. Tests valid combinations of:\n  - Various valid binding entries\n  - Maximum set of visibility for each binding entry\n  `\n  )\n  .params(u =>\n    u.combine('entry', allBindingEntries(false)).beginSubcases().combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, entry } = t.params;\n    const visibility = bindingTypeInfo(entry).validStages;\n    await t.executeAfterDestroy(() => {\n      t.device.createBindGroupLayout({\n        entries: [{ binding: 0, visibility, ...entry }],\n      });\n    }, awaitLost);\n  });\n\ng.test('createBindGroup')\n  .desc(\n    `\nTests creating bind group on destroyed device. Tests valid combinations of:\n  - Various binded resource types\n  - Various valid binding entries\n  - Maximum set of visibility for each binding entry\n  `\n  )\n  .desc(`A destroyed device should not be able to create any valid bind groups.`)\n  .params(u =>\n    u\n      .combine('resourceType', kBindableResources)\n      .combine('entry', allBindingEntries(false))\n      .filter(({ resourceType, entry }) => {\n        const info = bindingTypeInfo(entry);\n        switch (info.resource) {\n          // Either type of sampler may be bound to a filtering sampler binding.\n          case 'filtSamp':\n            return resourceType === 'filtSamp' || resourceType === 'nonFiltSamp';\n          // But only non-filtering samplers can be used with non-filtering sampler bindings.\n          case 'nonFiltSamp':\n            return resourceType === 'nonFiltSamp';\n          default:\n            return info.resource === resourceType;\n        }\n      })\n      .beginSubcases()\n      .combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, resourceType, entry } = t.params;\n    const visibility = bindingTypeInfo(entry).validStages;\n    const layout = t.device.createBindGroupLayout({\n      entries: [{ binding: 0, visibility, ...entry }],\n    });\n    const resource = t.getBindingResource(resourceType);\n    await t.executeAfterDestroy(() => {\n      t.device.createBindGroup({ layout, entries: [{ binding: 0, resource }] });\n    }, awaitLost);\n  });\n\ng.test('createPipelineLayout')\n  .desc(\n    `\nTests creating pipeline layouts on destroyed device. Tests valid combinations of:\n  - Various bind groups with valid binding entries\n  - Maximum set of visibility for each binding entry\n  `\n  )\n  .params(u =>\n    u.combine('entry', allBindingEntries(false)).beginSubcases().combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, entry } = t.params;\n    const visibility = bindingTypeInfo(entry).validStages;\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [{ binding: 0, visibility, ...entry }],\n    });\n    await t.executeAfterDestroy(() => {\n      t.device.createPipelineLayout({\n        bindGroupLayouts: [bindGroupLayout],\n      });\n    }, awaitLost);\n  });\n\ng.test('createShaderModule')\n  .desc(\n    `\nTests creating shader modules on destroyed device.\n  - Tests all shader stages: vertex, fragment, compute\n  `\n  )\n  .params(u =>\n    u.combine('stage', kShaderStageKeys).beginSubcases().combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, stage } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createShaderModule({ code: t.getNoOpShaderCode(stage) });\n    }, awaitLost);\n  });\n\ng.test('createComputePipeline')\n  .desc(\n    `\nTests creating compute pipeline on destroyed device.\n  - Tests with a valid no-op compute shader\n  `\n  )\n  .params(u => u.beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    const cShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('COMPUTE') });\n    await t.executeAfterDestroy(() => {\n      t.device.createComputePipeline({\n        layout: 'auto',\n        compute: { module: cShader, entryPoint: 'main' },\n      });\n    }, awaitLost);\n  });\n\ng.test('createRenderPipeline')\n  .desc(\n    `\nTests creating render pipeline on destroyed device.\n  - Tests with valid no-op vertex and fragment shaders\n  `\n  )\n  .params(u => u.beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    const vShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('VERTEX') });\n    const fShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('FRAGMENT') });\n    await t.executeAfterDestroy(() => {\n      t.device.createRenderPipeline({\n        layout: 'auto',\n        vertex: { module: vShader, entryPoint: 'main' },\n        fragment: {\n          module: fShader,\n          entryPoint: 'main',\n          targets: [{ format: 'rgba8unorm', writeMask: 0 }],\n        },\n      });\n    }, awaitLost);\n  });\n\ng.test('createCommandEncoder')\n  .desc(\n    `\nTests creating command encoders on destroyed device.\n  `\n  )\n  .params(u => u.beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createCommandEncoder();\n    }, awaitLost);\n  });\n\ng.test('createRenderBundleEncoder')\n  .desc(\n    `\nTests creating render bundle encoders on destroyed device.\n  - Tests various renderable texture color formats\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kRenderableColorTextureFormats)\n      .beginSubcases()\n      .combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { awaitLost, format } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createRenderBundleEncoder({ colorFormats: [format] });\n    }, awaitLost);\n  });\n\ng.test('createQuerySet')\n  .desc(\n    `\nTests creating query sets on destroyed device.\n  - Tests various query set types\n  `\n  )\n  .params(u => u.combine('type', kQueryTypes).beginSubcases().combine('awaitLost', [true, false]))\n  .beforeAllSubcases(t => {\n    const { type } = t.params;\n    t.selectDeviceForQueryTypeOrSkipTestCase(type);\n  })\n  .fn(async t => {\n    const { awaitLost, type } = t.params;\n    await t.executeAfterDestroy(() => {\n      t.device.createQuerySet({ type, count: 4 });\n    }, awaitLost);\n  });\n\ng.test('command,copyBufferToBuffer')\n  .desc(\n    `\nTests copyBufferToBuffer command with various uncompressed formats on destroyed device.\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('stage', kCommandValidationStages).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const kBufferSize = 16;\n    const src = t.device.createBuffer({\n      size: kBufferSize,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dst = t.device.createBuffer({\n      size: kBufferSize,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.copyBufferToBuffer(src, 0, dst, 0, kBufferSize);\n      return maker;\n    });\n  });\n\ng.test('command,copyBufferToTexture')\n  .desc(\n    `\nTests copyBufferToTexture command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('stage', kCommandValidationStages).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const format = 'rgba32uint';\n    const { bytesPerBlock, blockWidth, blockHeight } = kTextureFormatInfo[format];\n    const src = {\n      buffer: t.device.createBuffer({\n        size: bytesPerBlock,\n        usage: GPUBufferUsage.COPY_SRC,\n      }),\n    };\n    const dst = {\n      texture: t.device.createTexture({\n        size: { width: blockWidth, height: blockHeight },\n        usage: GPUTextureUsage.COPY_DST,\n        format,\n      }),\n    };\n    const copySize = { width: blockWidth, height: blockHeight };\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.copyBufferToTexture(src, dst, copySize);\n      return maker;\n    });\n  });\n\ng.test('command,copyTextureToBuffer')\n  .desc(\n    `\nTests copyTextureToBuffer command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('stage', kCommandValidationStages).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const format = 'rgba32uint';\n    const { bytesPerBlock, blockWidth, blockHeight } = kTextureFormatInfo[format];\n    const src = {\n      texture: t.device.createTexture({\n        size: { width: blockWidth, height: blockHeight },\n        usage: GPUTextureUsage.COPY_SRC,\n        format,\n      }),\n    };\n    const dst = {\n      buffer: t.device.createBuffer({\n        size: bytesPerBlock,\n        usage: GPUBufferUsage.COPY_DST,\n      }),\n    };\n    const copySize = { width: blockWidth, height: blockHeight };\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.copyTextureToBuffer(src, dst, copySize);\n      return maker;\n    });\n  });\n\ng.test('command,copyTextureToTexture')\n  .desc(\n    `\nTests copyTextureToTexture command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('stage', kCommandValidationStages).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const format = 'rgba32uint';\n    const { blockWidth, blockHeight } = kTextureFormatInfo[format];\n    const src = {\n      texture: t.device.createTexture({\n        size: { width: blockWidth, height: blockHeight },\n        usage: GPUTextureUsage.COPY_SRC,\n        format,\n      }),\n    };\n    const dst = {\n      texture: t.device.createTexture({\n        size: { width: blockWidth, height: blockHeight },\n        usage: GPUBufferUsage.COPY_DST,\n        format,\n      }),\n    };\n    const copySize = { width: blockWidth, height: blockHeight };\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.copyTextureToTexture(src, dst, copySize);\n      return maker;\n    });\n  });\n\ng.test('command,clearBuffer')\n  .desc(\n    `\nTests encoding and finishing a clearBuffer command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('stage', kCommandValidationStages).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const kBufferSize = 16;\n    const buffer = t.device.createBuffer({\n      size: kBufferSize,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.clearBuffer(buffer, 0, kBufferSize);\n      return maker;\n    });\n  });\n\ng.test('command,writeTimestamp')\n  .desc(\n    `\nTests encoding and finishing a writeTimestamp command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u =>\n    u\n      .combine('type', kQueryTypes)\n      .beginSubcases()\n      .combine('stage', kCommandValidationStages)\n      .combine('awaitLost', [true, false])\n  )\n  .beforeAllSubcases(t => {\n    const { type } = t.params;\n    t.selectDeviceForQueryTypeOrSkipTestCase(type);\n  })\n  .fn(async t => {\n    const { type, stage, awaitLost } = t.params;\n    const querySet = t.device.createQuerySet({ type, count: 2 });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.writeTimestamp(querySet, 0);\n      return maker;\n    });\n  });\n\ng.test('command,resolveQuerySet')\n  .desc(\n    `\nTests encoding and finishing a resolveQuerySet command on destroyed device.\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('stage', kCommandValidationStages).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const kQueryCount = 2;\n    const querySet = t.createQuerySetWithState('valid');\n    const destination = t.createBufferWithState('valid', {\n      size: kQueryCount * 8,\n      usage: GPUBufferUsage.QUERY_RESOLVE,\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'non-pass', maker => {\n      maker.encoder.resolveQuerySet(querySet, 0, 1, destination, 0);\n      return maker;\n    });\n  });\n\ng.test('command,computePass,dispatch')\n  .desc(\n    `\nTests encoding and dispatching a simple valid compute pass on destroyed device.\n  - Binds valid pipeline and bindgroups, then dispatches\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('stage', kCommandValidationStages).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const cShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('COMPUTE') });\n    const pipeline = t.device.createComputePipeline({\n      layout: 'auto',\n      compute: { module: cShader, entryPoint: 'main' },\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'compute pass', maker => {\n      maker.encoder.setPipeline(pipeline);\n      maker.encoder.dispatchWorkgroups(1);\n      return maker;\n    });\n  });\n\ng.test('command,renderPass,draw')\n  .desc(\n    `\nTests encoding and finishing a simple valid render pass on destroyed device.\n  - Binds valid pipeline and bindgroups, then draws\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('stage', kCommandValidationStages).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const vShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('VERTEX') });\n    const fShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('FRAGMENT') });\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: { module: vShader, entryPoint: 'main' },\n      fragment: {\n        module: fShader,\n        entryPoint: 'main',\n        targets: [{ format: 'rgba8unorm', writeMask: 0 }],\n      },\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'render pass', maker => {\n      maker.encoder.setPipeline(pipeline);\n      maker.encoder.draw(0);\n      return maker;\n    });\n  });\n\ng.test('command,renderPass,renderBundle')\n  .desc(\n    `\nTests encoding and drawing a render pass including a render bundle on destroyed device.\n  - Binds valid pipeline and bindgroups, executes render bundle, then draws\n  - Tests finishing encoding on destroyed device\n  - Tests submitting command on destroyed device\n  `\n  )\n  .params(u =>\n    u.beginSubcases().combine('stage', kCommandValidationStages).combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { stage, awaitLost } = t.params;\n    const vShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('VERTEX') });\n    const fShader = t.device.createShaderModule({ code: t.getNoOpShaderCode('FRAGMENT') });\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: { module: vShader, entryPoint: 'main' },\n      fragment: {\n        module: fShader,\n        entryPoint: 'main',\n        targets: [{ format: 'rgba8unorm', writeMask: 0 }],\n      },\n    });\n    await t.executeCommandsAfterDestroy(stage, awaitLost, 'render bundle', maker => {\n      maker.encoder.setPipeline(pipeline);\n      maker.encoder.draw(0);\n      return maker;\n    });\n  });\n\ng.test('queue,writeBuffer')\n  .desc(\n    `\nTests writeBuffer on queue on destroyed device.\n  `\n  )\n  .params(u =>\n    u.combine('numElements', [4, 8, 16]).beginSubcases().combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { numElements, awaitLost } = t.params;\n    const buffer = t.device.createBuffer({\n      size: numElements,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n    const data = new Uint8Array(numElements);\n    await t.executeAfterDestroy(() => {\n      t.device.queue.writeBuffer(buffer, 0, data);\n    }, awaitLost);\n  });\n\ng.test('queue,writeTexture,2d,uncompressed_format')\n  .desc(\n    `\nTests writeTexture on queue on destroyed device with uncompressed formats.\n  `\n  )\n  .params(u =>\n    u.combine('format', kRegularTextureFormats).beginSubcases().combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { format, awaitLost } = t.params;\n    const { blockWidth, blockHeight, bytesPerBlock } = kTextureFormatInfo[format];\n    const data = new Uint8Array(bytesPerBlock);\n    const texture = t.device.createTexture({\n      size: { width: blockWidth, height: blockHeight },\n      usage: GPUTextureUsage.COPY_DST,\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      t.device.queue.writeTexture(\n        { texture },\n        data,\n        {},\n        { width: blockWidth, height: blockHeight }\n      );\n    }, awaitLost);\n  });\n\ng.test('queue,writeTexture,2d,compressed_format')\n  .desc(\n    `\nTests writeTexture on queue on destroyed device with compressed formats.\n  `\n  )\n  .params(u =>\n    u\n      .combine('format', kCompressedTextureFormats)\n      .beginSubcases()\n      .combine('awaitLost', [true, false])\n  )\n  .beforeAllSubcases(t => {\n    const { format } = t.params;\n    t.selectDeviceOrSkipTestCase(kTextureFormatInfo[format].feature);\n  })\n  .fn(async t => {\n    const { format, awaitLost } = t.params;\n    const { blockWidth, blockHeight, bytesPerBlock } = kTextureFormatInfo[format];\n    const data = new Uint8Array(bytesPerBlock);\n    const texture = t.device.createTexture({\n      size: { width: blockWidth, height: blockHeight },\n      usage: GPUTextureUsage.COPY_DST,\n      format,\n    });\n    await t.executeAfterDestroy(() => {\n      t.device.queue.writeTexture(\n        { texture },\n        data,\n        {},\n        { width: blockWidth, height: blockHeight }\n      );\n    }, awaitLost);\n  });\n\ng.test('queue,copyExternalImageToTexture,canvas')\n  .desc(\n    `\nTests copyExternalImageToTexture from canvas on queue on destroyed device.\n  `\n  )\n  .params(u =>\n    u\n      .combine('canvasType', kAllCanvasTypes)\n      .combine('contextType', kValidCanvasContextIds)\n      .filter(({ contextType }) => {\n        return canCopyFromCanvasContext(contextType);\n      })\n      .beginSubcases()\n      .combine('awaitLost', [true, false])\n  )\n  .fn(async t => {\n    const { canvasType, contextType, awaitLost } = t.params;\n    const canvas = createCanvas(t, canvasType, 1, 1);\n    const texture = t.device.createTexture({\n      size: { width: 1, height: 1 },\n      format: 'bgra8unorm',\n      usage: GPUTextureUsage.COPY_DST,\n    });\n\n    const ctx = ((canvas as unknown) as HTMLCanvasElement).getContext(contextType);\n    if (ctx === null) {\n      t.skip('Failed to get context for canvas element');\n      return;\n    }\n    t.tryTrackForCleanup(ctx);\n\n    await t.executeAfterDestroy(() => {\n      t.device.queue.copyExternalImageToTexture(\n        { source: canvas },\n        { texture },\n        { width: 1, height: 1 }\n      );\n    }, awaitLost);\n  });\n\ng.test('queue,copyExternalImageToTexture,imageBitmap')\n  .desc(\n    `\nTests copyExternalImageToTexture from canvas on queue on destroyed device.\n  `\n  )\n  .params(u => u.beginSubcases().combine('awaitLost', [true, false]))\n  .fn(async t => {\n    const { awaitLost } = t.params;\n    if (typeof createImageBitmap === 'undefined') {\n      t.skip('Creating ImageBitmaps is not supported.');\n    }\n    const imageBitmap = await createImageBitmap(new ImageData(new Uint8ClampedArray(4), 1, 1));\n\n    const texture = t.device.createTexture({\n      size: { width: 1, height: 1 },\n      format: 'bgra8unorm',\n      usage: GPUTextureUsage.COPY_DST,\n    });\n\n    await t.executeAfterDestroy(() => {\n      t.device.queue.copyExternalImageToTexture(\n        { source: imageBitmap },\n        { texture },\n        { width: 1, height: 1 }\n      );\n    }, awaitLost);\n  });\n"],"file":"destroy.spec.js"}