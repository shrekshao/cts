{"version":3,"sources":["../../../../../src/webgpu/api/operation/texture_view/write.spec.ts"],"names":["description","makeTestGroup","GPUTest","g","test","desc","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO,CAWP,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,OAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,QAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA;AACA,CARA;;AAUGC,aAVH;;AAYAH,CAAC,CAACC,IAAF,CAAO,WAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWGC,aAXH;;AAaAH,CAAC,CAACC,IAAF,CAAO,QAAP;AACGC,IADH;AAEK;AACL;AACA;AACA;AACA;AACA;AACA,CARA;;AAUGC,aAVH","sourcesContent":["export const description = `\nTest the result of writing textures through texture views with various options.\n\nAll x= every possible view write method: {\n  - storage write {fragment, compute}\n  - render pass store\n  - render pass resolve\n}\nTODO: Write helper for this if not already available (see resource_init, buffer_sync_test for related code).\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('format')\n  .desc(\n    `Views of every allowed format.\n\n- x= every texture format\n- x= every valid view format (including same)\n- x= sampleCount {1, 4} if valid\n- x= every possible view write method (see above)\n`\n  )\n  .unimplemented();\n\ng.test('dimension')\n  .desc(\n    `Views of every allowed dimension.\n\n- x= a representative subset of formats\n- x= {every texture dimension} x {every valid view dimension}\n  (per gpuweb#79 no dimension-count reinterpretations, like 2d-array <-> 3d, are possible)\n- x= sampleCount {1, 4} if valid\n- x= every possible view write method (see above)\n`\n  )\n  .unimplemented();\n\ng.test('aspect')\n  .desc(\n    `Views of every allowed aspect of depth/stencil textures.\n\n- x= every depth/stencil format\n- x= {\"all\", \"stencil-only\", \"depth-only\"} where valid for the format\n- x= sampleCount {1, 4} if valid\n- x= every possible view write method (see above)\n`\n  )\n  .unimplemented();\n"],"file":"write.spec.js"}