{"version":3,"file":"labels.spec.js","names":["description","makeTestGroup","keysOf","getGPU","GPUTest","g","kTestFunctions","createBuffer","t","label","buffer","device","size","usage","GPUBufferUsage","COPY_DST","expect","destroy","requestDevice","gpu","adapter","requestAdapter","createTexture","texture","format","GPUTextureUsage","RENDER_ATTACHMENT","createSampler","sampler","createBindGroupLayout","bindGroupLayout","entries","createPipelineLayout","pipelineLayout","bindGroupLayouts","createBindGroup","layout","bindGroup","createShaderModule","shaderModule","code","createComputePipeline","module","computePipeline","compute","entryPoint","createRenderPipeline","renderPipeline","vertex","createComputePipelineAsync","createRenderPipelineAsync","createCommandEncoder","encoder","createRenderBundleEncoder","colorFormats","createQuerySet","querySet","type","count","beginRenderPass","label2","renderPass","colorAttachments","view","createView","loadOp","storeOp","end","finish","beginComputePass","computePass","commandBuffer","test","desc","params","u","combine","beginSubcases","fn","name","result","Promise","pipeline","layout1","getBindGroupLayout","layout2"],"sources":["../../../../src/webgpu/api/operation/labels.spec.ts"],"sourcesContent":["export const description = `\nTests for object labels.\n`;\n\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { keysOf } from '../../../common/util/data_tables.js';\nimport { getGPU } from '../../../common/util/navigator_gpu.js';\nimport { GPUTest } from '../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ntype TestFunction = (t: GPUTest, label: string) => Promise<void> | void;\nconst kTestFunctions: { [name: string]: TestFunction } = {\n  createBuffer: (t: GPUTest, label: string) => {\n    const buffer = t.device.createBuffer({ size: 16, usage: GPUBufferUsage.COPY_DST, label });\n    t.expect(buffer.label === label);\n    buffer.destroy();\n    t.expect(buffer.label === label);\n  },\n\n  requestDevice: async (t: GPUTest, label: string) => {\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    t.expect(!!adapter);\n    const device = await adapter!.requestDevice({ label });\n    t.expect(!!device);\n    t.expect(device.label === label);\n    device.destroy();\n    t.expect(device.label === label);\n  },\n\n  createTexture: (t: GPUTest, label: string) => {\n    const texture = t.device.createTexture({\n      label,\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    t.expect(texture.label === label);\n    texture.destroy();\n    t.expect(texture.label === label);\n  },\n\n  createSampler: (t: GPUTest, label: string) => {\n    const sampler = t.device.createSampler({ label });\n    t.expect(sampler.label === label);\n  },\n\n  createBindGroupLayout: (t: GPUTest, label: string) => {\n    const bindGroupLayout = t.device.createBindGroupLayout({ label, entries: [] });\n    t.expect(bindGroupLayout.label === label);\n  },\n\n  createPipelineLayout: (t: GPUTest, label: string) => {\n    const pipelineLayout = t.device.createPipelineLayout({ label, bindGroupLayouts: [] });\n    t.expect(pipelineLayout.label === label);\n  },\n\n  createBindGroup: (t: GPUTest, label: string) => {\n    const layout = t.device.createBindGroupLayout({ entries: [] });\n    const bindGroup = t.device.createBindGroup({ label, layout, entries: [] });\n    t.expect(bindGroup.label === label);\n  },\n\n  createShaderModule: (t: GPUTest, label: string) => {\n    const shaderModule = t.device.createShaderModule({\n      label,\n      code: `\n        @vertex fn vs() -> @builtin(position) vec4f {\n         return vec4f(0, 0, 0, 1);\n        }\n      `,\n    });\n    t.expect(shaderModule.label === label);\n  },\n\n  createComputePipeline: (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      code: `\n        @compute @workgroup_size(1u) fn foo() {}\n      `,\n    });\n    const computePipeline = t.device.createComputePipeline({\n      label,\n      layout: 'auto',\n      compute: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(computePipeline.label === label);\n  },\n\n  createRenderPipeline: (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      code: `\n        @vertex fn foo() -> @builtin(position) vec4f {\n         return vec4f(0, 0, 0, 1);\n        }\n      `,\n    });\n    const renderPipeline = t.device.createRenderPipeline({\n      label,\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(renderPipeline.label === label);\n  },\n\n  createComputePipelineAsync: async (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      code: `\n        @compute @workgroup_size(1u) fn foo() {}\n      `,\n    });\n    const computePipeline = await t.device.createComputePipelineAsync({\n      label,\n      layout: 'auto',\n      compute: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(computePipeline.label === label);\n  },\n\n  createRenderPipelineAsync: async (t: GPUTest, label: string) => {\n    const module = t.device.createShaderModule({\n      label,\n      code: `\n        @vertex fn foo() -> @builtin(position) vec4f {\n         return vec4f(0, 0, 0, 1);\n        }\n      `,\n    });\n    const renderPipeline = await t.device.createRenderPipelineAsync({\n      label,\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'foo',\n      },\n    });\n    t.expect(renderPipeline.label === label);\n  },\n\n  createCommandEncoder: (t: GPUTest, label: string) => {\n    const encoder = t.device.createCommandEncoder({ label });\n    t.expect(encoder.label === label);\n  },\n\n  createRenderBundleEncoder: (t: GPUTest, label: string) => {\n    const encoder = t.device.createRenderBundleEncoder({\n      label,\n      colorFormats: ['rgba8unorm'],\n    });\n    t.expect(encoder.label === label);\n  },\n\n  createQuerySet: (t: GPUTest, label: string) => {\n    const querySet = t.device.createQuerySet({\n      label,\n      type: 'occlusion',\n      count: 1,\n    });\n    t.expect(querySet.label === label);\n    querySet.destroy();\n    t.expect(querySet.label === label);\n  },\n\n  beginRenderPass: (t: GPUTest, label: string) => {\n    const texture = t.device.createTexture({\n      label,\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    const label2 = `${label}-2`;\n    const encoder = t.device.createCommandEncoder();\n    encoder.label = label2;\n    const renderPass = encoder.beginRenderPass({\n      label,\n      colorAttachments: [{ view: texture.createView(), loadOp: 'clear', storeOp: 'store' }],\n    });\n    t.expect(renderPass.label === label);\n    renderPass.end();\n    t.expect(renderPass.label === label);\n    encoder.finish();\n    t.expect(renderPass.label === label);\n    t.expect(encoder.label === label2);\n    texture.destroy();\n  },\n\n  beginComputePass: (t: GPUTest, label: string) => {\n    const label2 = `${label}-2`;\n    const encoder = t.device.createCommandEncoder();\n    encoder.label = label2;\n    const computePass = encoder.beginComputePass({ label });\n    t.expect(computePass.label === label);\n    computePass.end();\n    t.expect(computePass.label === label);\n    encoder.finish();\n    t.expect(computePass.label === label);\n    t.expect(encoder.label === label2);\n  },\n\n  finish: (t: GPUTest, label: string) => {\n    const encoder = t.device.createCommandEncoder();\n    const commandBuffer = encoder.finish({ label });\n    t.expect(commandBuffer.label === label);\n  },\n\n  createView: (t: GPUTest, label: string) => {\n    const texture = t.device.createTexture({\n      size: [1, 1, 1],\n      format: 'rgba8unorm',\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\n    });\n    const view = texture.createView({ label });\n    t.expect(view.label === label);\n    texture.destroy();\n    t.expect(view.label === label);\n  },\n};\n\ng.test('object_has_descriptor_label')\n  .desc(\n    `\n  For every create function, the descriptor.label is carried over to the object.label.\n  \n  TODO: test importExternalTexture\n  TODO: make a best effort and generating an error that is likely to use label. There's nothing to check for\n        but it may surface bugs related to unusual labels.\n    `\n  )\n  .params(u =>\n    u\n      .combine('name', keysOf(kTestFunctions))\n      .beginSubcases()\n      .combine('label', ['label', '\\0', 'null\\0in\\0label', 'ðŸŒžðŸ‘†'])\n  )\n  .fn(async t => {\n    const { name, label } = t.params;\n    const result = kTestFunctions[name](t, label);\n    if (result instanceof Promise) {\n      await result;\n    }\n  });\n\ng.test('wrappers_do_not_share_labels')\n  .desc('test that different wrapper objects for the same GPU object do not share labels')\n  .fn(t => {\n    const module = t.device.createShaderModule({\n      code: `\n        @group(0) @binding(0) var<uniform> pos: vec4f;\n        @vertex fn main() -> @builtin(position) vec4f {\n          return pos;\n        }\n      `,\n    });\n    const pipeline = t.device.createRenderPipeline({\n      layout: 'auto',\n      vertex: {\n        module,\n        entryPoint: 'main',\n      },\n    });\n    const layout1 = pipeline.getBindGroupLayout(0);\n    const layout2 = pipeline.getBindGroupLayout(0);\n    t.expect(layout1 !== layout2);\n\n    layout1.label = 'foo';\n    layout2.label = 'bar';\n\n    t.expect(layout1.label === 'foo');\n    t.expect(layout2.label === 'bar');\n  });\n"],"mappings":"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"}