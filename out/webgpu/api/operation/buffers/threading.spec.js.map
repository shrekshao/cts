{"version":3,"sources":["../../../../../src/webgpu/api/operation/buffers/threading.spec.ts"],"names":["description","makeTestGroup","GPUTest","g","test","desc","unimplemented"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO,CAcP,SAASC,aAAT,QAA8B,4CAA9B;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,OAAD,CAAvB;;AAEPC,CAAC,CAACC,IAAF,CAAO,WAAP;AACGC,IADH;AAEK;AACL,0CAHA;;AAKGC,aALH;;AAOAH,CAAC,CAACC,IAAF,CAAO,WAAP;AACGC,IADH,CACS,kEADT;AAEGC,aAFH","sourcesContent":["export const description = `\nTests for valid operations with various client-side thread-shared state of GPUBuffers.\n\nStates to test:\n- mapping pending\n- mapped\n- mapped at creation\n- mapped at creation, then unmapped\n- mapped at creation, then unmapped, then re-mapped\n- destroyed\n\nTODO: Look for more things to test.\n`;\n\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { GPUTest } from '../../../gpu_test.js';\n\nexport const g = makeTestGroup(GPUTest);\n\ng.test('serialize')\n  .desc(\n    `Copy a GPUBuffer to another thread while it is in various states on\n{the sending thread, yet another thread}.`\n  )\n  .unimplemented();\n\ng.test('destroyed')\n  .desc(`Destroy on one thread while in various states in another thread.`)\n  .unimplemented();\n"],"file":"threading.spec.js"}