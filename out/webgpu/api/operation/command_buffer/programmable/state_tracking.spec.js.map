{"version":3,"sources":["../../../../../../src/webgpu/api/operation/command_buffer/programmable/state_tracking.spec.ts"],"names":["description","makeTestGroup","GPUConst","kProgrammableEncoderTypes","ProgrammableStateTest","g","kBufferUsage","BufferUsage","COPY_SRC","STORAGE","test","desc","params","u","combine","beginSubcases","a","b","out","fn","t","encoderType","groupIndices","pipeline","createBindingStatePipeline","makeBufferWithContents","Int32Array","bindGroups","createBindGroup","encoder","validateFinishAndSubmit","createEncoder","setPipeline","setBindGroup","dispatchOrDraw","expectGPUBufferValuesEqual","setOrder","bindingName","combineWithParams","setBefore","setAfter","ab","badOut","c","pipelineA","pipelineB","outA","outB"],"mappings":"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","sourcesContent":["export const description = `\nEnsure state is set correctly. Tries to stress state caching (setting different states multiple\ntimes in different orders) for setBindGroup and setPipeline.\n`;\n\nimport { makeTestGroup } from '../../../../../common/framework/test_group.js';\nimport { GPUConst } from '../../../../constants.js';\nimport { kProgrammableEncoderTypes } from '../../../../util/command_buffer_maker.js';\n\nimport { ProgrammableStateTest } from './programmable_state_test.js';\n\nexport const g = makeTestGroup(ProgrammableStateTest);\n\nconst kBufferUsage = GPUConst.BufferUsage.COPY_SRC | GPUConst.BufferUsage.STORAGE;\n\ng.test('bind_group_indices')\n  .desc(\n    `\n    Test that bind group indices can be declared in any order, regardless of their order in the shader.\n    - Test places the value of buffer a - buffer b into the out buffer, then reads the result.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n      .beginSubcases()\n      .combine('groupIndices', [\n        { a: 0, b: 1, out: 2 },\n        { a: 1, b: 2, out: 0 },\n        { a: 2, b: 0, out: 1 },\n        { a: 0, b: 2, out: 1 },\n        { a: 2, b: 1, out: 0 },\n        { a: 1, b: 0, out: 2 },\n      ])\n  )\n  .fn(async t => {\n    const { encoderType, groupIndices } = t.params;\n\n    const pipeline = t.createBindingStatePipeline(encoderType, groupIndices);\n\n    const out = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n\n    t.setPipeline(encoder, pipeline);\n    encoder.setBindGroup(groupIndices.a, bindGroups.a);\n    encoder.setBindGroup(groupIndices.b, bindGroups.b);\n    encoder.setBindGroup(groupIndices.out, bindGroups.out);\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([1]));\n  });\n\ng.test('bind_group_order')\n  .desc(\n    `\n    Test that the order in which you set the bind groups doesn't matter.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n      .beginSubcases()\n      .combine('setOrder', [\n        ['a', 'b', 'out'],\n        ['b', 'out', 'a'],\n        ['out', 'a', 'b'],\n        ['b', 'a', 'out'],\n        ['a', 'out', 'b'],\n        ['out', 'b', 'a'],\n      ] as const)\n  )\n  .fn(async t => {\n    const { encoderType, setOrder } = t.params;\n\n    const groupIndices = { a: 0, b: 1, out: 2 };\n    const pipeline = t.createBindingStatePipeline(encoderType, groupIndices);\n\n    const out = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n    t.setPipeline(encoder, pipeline);\n\n    for (const bindingName of setOrder) {\n      encoder.setBindGroup(groupIndices[bindingName], bindGroups[bindingName]);\n    }\n\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([1]));\n  });\n\ng.test('bind_group_before_pipeline')\n  .desc(\n    `\n    Test that setting bind groups prior to setting the pipeline is still valid.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n      .beginSubcases()\n      .combineWithParams([\n        { setBefore: ['a', 'b'], setAfter: ['out'] },\n        { setBefore: ['a'], setAfter: ['b', 'out'] },\n        { setBefore: ['out', 'b'], setAfter: ['a'] },\n        { setBefore: ['a', 'b', 'out'], setAfter: [] },\n      ] as const)\n  )\n  .fn(async t => {\n    const { encoderType, setBefore, setAfter } = t.params;\n    const groupIndices = { a: 0, b: 1, out: 2 };\n    const pipeline = t.createBindingStatePipeline(encoderType, groupIndices);\n\n    const out = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n\n    for (const bindingName of setBefore) {\n      encoder.setBindGroup(groupIndices[bindingName], bindGroups[bindingName]);\n    }\n\n    t.setPipeline(encoder, pipeline);\n\n    for (const bindingName of setAfter) {\n      encoder.setBindGroup(groupIndices[bindingName], bindGroups[bindingName]);\n    }\n\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([1]));\n  });\n\ng.test('one_bind_group_multiple_slots')\n  .desc(\n    `\n    Test that a single bind group may be bound to more than one slot.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n  )\n  .fn(async t => {\n    const { encoderType } = t.params;\n    const pipeline = t.createBindingStatePipeline(encoderType, { a: 0, b: 1, out: 2 });\n\n    const out = t.makeBufferWithContents(new Int32Array([1]), kBufferUsage);\n    const bindGroups = {\n      ab: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n    t.setPipeline(encoder, pipeline);\n\n    encoder.setBindGroup(0, bindGroups.ab);\n    encoder.setBindGroup(1, bindGroups.ab);\n    encoder.setBindGroup(2, bindGroups.out);\n\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([0]));\n  });\n\ng.test('bind_group_multiple_sets')\n  .desc(\n    `\n    Test that the last bind group set to a given slot is used when dispatching.\n  `\n  )\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n  )\n  .fn(async t => {\n    const { encoderType } = t.params;\n    const pipeline = t.createBindingStatePipeline(encoderType, { a: 0, b: 1, out: 2 });\n\n    const badOut = t.makeBufferWithContents(new Int32Array([-1]), kBufferUsage);\n    const out = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      c: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([5]), kBufferUsage),\n        'read-only-storage'\n      ),\n      badOut: t.createBindGroup(badOut, 'storage'),\n      out: t.createBindGroup(out, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n\n    encoder.setBindGroup(1, bindGroups.c);\n\n    t.setPipeline(encoder, pipeline);\n\n    encoder.setBindGroup(0, bindGroups.c);\n    encoder.setBindGroup(0, bindGroups.a);\n\n    encoder.setBindGroup(2, bindGroups.badOut);\n\n    encoder.setBindGroup(1, bindGroups.b);\n    encoder.setBindGroup(2, bindGroups.out);\n\n    t.dispatchOrDraw(encoder);\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(out, new Int32Array([1]));\n    t.expectGPUBufferValuesEqual(badOut, new Int32Array([-1]));\n  });\n\ng.test('compatible_pipelines')\n  .desc('Test that bind groups can be shared between compatible pipelines.')\n  .params(u =>\n    u //\n      .combine('encoderType', kProgrammableEncoderTypes)\n  )\n  .fn(async t => {\n    const { encoderType } = t.params;\n    const pipelineA = t.createBindingStatePipeline(encoderType, { a: 0, b: 1, out: 2 });\n    const pipelineB = t.createBindingStatePipeline(\n      encoderType,\n      { a: 0, b: 1, out: 2 },\n      'a.value + b.value'\n    );\n\n    const outA = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const outB = t.makeBufferWithContents(new Int32Array([0]), kBufferUsage);\n    const bindGroups = {\n      a: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([3]), kBufferUsage),\n        'read-only-storage'\n      ),\n      b: t.createBindGroup(\n        t.makeBufferWithContents(new Int32Array([2]), kBufferUsage),\n        'read-only-storage'\n      ),\n      outA: t.createBindGroup(outA, 'storage'),\n      outB: t.createBindGroup(outB, 'storage'),\n    };\n\n    const { encoder, validateFinishAndSubmit } = t.createEncoder(encoderType);\n    encoder.setBindGroup(0, bindGroups.a);\n    encoder.setBindGroup(1, bindGroups.b);\n\n    t.setPipeline(encoder, pipelineA);\n    encoder.setBindGroup(2, bindGroups.outA);\n    t.dispatchOrDraw(encoder);\n\n    t.setPipeline(encoder, pipelineB);\n    encoder.setBindGroup(2, bindGroups.outB);\n    t.dispatchOrDraw(encoder);\n\n    validateFinishAndSubmit(true, true);\n\n    t.expectGPUBufferValuesEqual(outA, new Int32Array([1]));\n    t.expectGPUBufferValuesEqual(outB, new Int32Array([5]));\n  });\n"],"file":"state_tracking.spec.js"}