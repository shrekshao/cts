{"version":3,"file":"requestDevice.spec.js","names":["description","Fixture","makeTestGroup","getGPU","assert","raceWithRejectOnTimeout","kFeatureNames","kLimitInfo","kLimits","clamp","isPowerOfTwo","g","test","desc","paramsSubcasesOnly","u","combine","undefined","requiredFeatures","requiredLimits","fn","t","args","params","gpu","adapter","requestAdapter","device","requestDevice","expect","features","size","limit","limits","default","destroy","lostInfo","lost","reason","kTimeoutMS","shouldReject","feature","promise","has","unknownLimitName","beginSubcases","limitValue","value","expandWithParams","p","class","mul","add","min","max","maximumValue","success"],"sources":["../../../../../src/webgpu/api/operation/adapter/requestDevice.spec.ts"],"sourcesContent":["export const description = `\nTest GPUAdapter.requestDevice.\n\nNote tests explicitly destroy created devices so that tests don't have to wait for GC to clean up\npotentially limited native resources.\n`;\n\nimport { Fixture } from '../../../../common/framework/fixture.js';\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { getGPU } from '../../../../common/util/navigator_gpu.js';\nimport { assert, raceWithRejectOnTimeout } from '../../../../common/util/util.js';\nimport { kFeatureNames, kLimitInfo, kLimits } from '../../../capability_info.js';\nimport { clamp, isPowerOfTwo } from '../../../util/math.js';\n\nexport const g = makeTestGroup(Fixture);\n\ng.test('default')\n  .desc(\n    `\n    Test requesting the device with a variation of default parameters.\n    - No features listed in default device\n    - Default limits`\n  )\n  .paramsSubcasesOnly(u =>\n    u.combine('args', [\n      [],\n      [undefined],\n      [{}],\n      [{ requiredFeatures: [], requiredLimits: {} }],\n    ] as const)\n  )\n  .fn(async t => {\n    const { args } = t.params;\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n    const device = await adapter.requestDevice(...args);\n    assert(device !== null);\n\n    // Default device should have no features.\n    t.expect(device.features.size === 0, 'Default device should not have any features');\n    // All limits should be defaults.\n    for (const limit of kLimits) {\n      t.expect(\n        device.limits[limit] === kLimitInfo[limit].default,\n        `Expected ${limit} == default: ${device.limits[limit]} != ${kLimitInfo[limit].default}`\n      );\n    }\n\n    device.destroy();\n  });\n\ng.test('invalid')\n  .desc(\n    `\n    Test that requesting device on an invalid adapter resolves with lost device.\n    - Induce invalid adapter via a device lost from a device.destroy()`\n  )\n  .fn(async t => {\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    {\n      // Request a device and destroy it immediately afterwards.\n      const device = await adapter.requestDevice();\n      assert(device !== null);\n      device.destroy();\n      const lostInfo = await device.lost;\n      t.expect(lostInfo.reason === 'destroyed');\n    }\n\n    // The adapter should now be invalid since a device was lost. Requesting another device should\n    // return an already lost device.\n    const kTimeoutMS = 1000;\n    const device = await adapter.requestDevice();\n    const lost = await raceWithRejectOnTimeout(device.lost, kTimeoutMS, 'device was not lost');\n    t.expect(lost.reason === undefined);\n  });\n\ng.test('features,unknown')\n  .desc(\n    `\n    Test requesting device with an unknown feature.`\n  )\n  .fn(async t => {\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    t.shouldReject(\n      'TypeError',\n      adapter.requestDevice({ requiredFeatures: ['unknown-feature' as GPUFeatureName] })\n    );\n  });\n\ng.test('features,known')\n  .desc(\n    `\n    Test requesting device with all features.\n    - Succeeds with device supporting feature if adapter supports the feature.\n    - Rejects if the adapter does not support the feature.`\n  )\n  .params(u => u.combine('feature', kFeatureNames))\n  .fn(async t => {\n    const { feature } = t.params;\n\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    const promise = adapter.requestDevice({ requiredFeatures: [feature] });\n    if (adapter.features.has(feature)) {\n      const device = await promise;\n      t.expect(device.features.has(feature), 'Device should include the required feature');\n    } else {\n      t.shouldReject('TypeError', promise);\n    }\n  });\n\ng.test('limits,unknown')\n  .desc(\n    `\n    Test that specifying limits that aren't part of the supported limit set causes\n    requestDevice to reject.`\n  )\n  .fn(async t => {\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    const requiredLimits: Record<string, number> = { unknownLimitName: 9000 };\n\n    t.shouldReject('OperationError', adapter.requestDevice({ requiredLimits }));\n  });\n\ng.test('limits,supported')\n  .desc(\n    `\n    Test that each supported limit can be specified with valid values.\n    - Tests each limit with the default values given by the spec\n    - Tests each limit with the supported values given by the adapter`\n  )\n  .params(u =>\n    u.combine('limit', kLimits).beginSubcases().combine('limitValue', ['default', 'adapter'])\n  )\n  .fn(async t => {\n    const { limit, limitValue } = t.params;\n\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    let value: number = -1;\n    switch (limitValue) {\n      case 'default':\n        value = kLimitInfo[limit].default;\n        break;\n      case 'adapter':\n        value = adapter.limits[limit];\n        break;\n    }\n\n    const device = await adapter.requestDevice({ requiredLimits: { [limit]: value } });\n    assert(device !== null);\n    t.expect(\n      device.limits[limit] === value,\n      'Devices reported limit should match the required limit'\n    );\n    device.destroy();\n  });\n\ng.test('limit,better_than_supported')\n  .desc(\n    `\n    Test that specifying a better limit than what the adapter supports causes requestDevice to\n    reject.\n    - Tests each limit\n    - Tests requesting better limits by various amounts`\n  )\n  .params(u =>\n    u\n      .combine('limit', kLimits)\n      .beginSubcases()\n      .expandWithParams(p => {\n        switch (kLimitInfo[p.limit].class) {\n          case 'maximum':\n            return [\n              { mul: 1, add: 1 },\n              { mul: 1, add: 100 },\n            ];\n          case 'alignment':\n            return [\n              { mul: 1, add: -1 },\n              { mul: 1 / 2, add: 0 },\n              { mul: 1 / 1024, add: 0 },\n            ];\n        }\n      })\n  )\n  .fn(async t => {\n    const { limit, mul, add } = t.params;\n\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    const value = adapter.limits[limit] * mul + add;\n    const requiredLimits = {\n      [limit]: clamp(value, { min: 0, max: kLimitInfo[limit].maximumValue }),\n    };\n\n    t.shouldReject('OperationError', adapter.requestDevice({ requiredLimits }));\n  });\n\ng.test('limit,worse_than_default')\n  .desc(\n    `\n    Test that specifying a worse limit than the default values required by the spec cause the value\n    to clamp.\n    - Tests each limit\n    - Tests requesting worse limits by various amounts`\n  )\n  .params(u =>\n    u\n      .combine('limit', kLimits)\n      .beginSubcases()\n      .expandWithParams(p => {\n        switch (kLimitInfo[p.limit].class) {\n          case 'maximum':\n            return [\n              { mul: 1, add: -1 },\n              { mul: 1, add: -100 },\n            ];\n          case 'alignment':\n            return [\n              { mul: 1, add: 1 },\n              { mul: 2, add: 0 },\n              { mul: 1024, add: 0 },\n            ];\n        }\n      })\n  )\n  .fn(async t => {\n    const { limit, mul, add } = t.params;\n\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    const value = kLimitInfo[limit].default * mul + add;\n    const requiredLimits = {\n      [limit]: clamp(value, { min: 0, max: kLimitInfo[limit].maximumValue }),\n    };\n\n    let success;\n    switch (kLimitInfo[limit].class) {\n      case 'alignment':\n        success = isPowerOfTwo(value);\n        break;\n      case 'maximum':\n        success = true;\n        break;\n    }\n\n    if (success) {\n      const device = await adapter.requestDevice({ requiredLimits });\n      assert(device !== null);\n      t.expect(\n        device.limits[limit] === kLimitInfo[limit].default,\n        'Devices reported limit should match the default limit'\n      );\n      device.destroy();\n    } else {\n      t.shouldReject('OperationError', adapter.requestDevice({ requiredLimits }));\n    }\n  });\n"],"mappings":"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"}