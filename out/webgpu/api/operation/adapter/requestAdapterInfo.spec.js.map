{"version":3,"file":"requestAdapterInfo.spec.js","names":["description","Fixture","makeTestGroup","getGPU","assert","g","normalizedIdentifierRegex","test","desc","fn","t","gpu","adapter","requestAdapter","adapterInfo","requestAdapterInfo","expect","vendor","architecture","device","unimplemented"],"sources":["../../../../../src/webgpu/api/operation/adapter/requestAdapterInfo.spec.ts"],"sourcesContent":["export const description = `\nTests various ways of calling GPUAdapter.requestAdapterInfo.\n\nTODO:\n- Find a way to perform tests with and without user activation\n`;\n\nimport { Fixture } from '../../../../common/framework/fixture.js';\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { getGPU } from '../../../../common/util/navigator_gpu.js';\nimport { assert } from '../../../../common/util/util.js';\n\nexport const g = makeTestGroup(Fixture);\n\nconst normalizedIdentifierRegex = /^$|^[a-z0-9]+(-[a-z0-9]+)*$/;\n\ng.test('adapter_info')\n  .desc(\n    `\n  Test that calling requestAdapterInfo with no arguments:\n    - Returns a GPUAdapterInfo structure\n    - Every member in the structure except description is properly formatted`\n  )\n  .fn(async t => {\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n\n    const adapterInfo = await adapter.requestAdapterInfo();\n\n    t.expect(\n      normalizedIdentifierRegex.test(adapterInfo.vendor),\n      'adapterInfo.vendor should be a normalized identifier'\n    );\n\n    t.expect(\n      normalizedIdentifierRegex.test(adapterInfo.architecture),\n      'adapterInfo.architecture should be a normalized identifier'\n    );\n\n    t.expect(\n      normalizedIdentifierRegex.test(adapterInfo.device),\n      'adapterInfo.device should be a normalized identifier'\n    );\n  });\n\ng.test('adapter_info_with_hints')\n  .desc(\n    `\n  Test that calling requestAdapterInfo with hints:\n    - Rejects without user activation\n    - Succeed with user activation`\n  )\n  .unimplemented();\n"],"mappings":";AAAA;AAAA,GAAA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA;AACA;AACA;AACA,CAAC,CAED,SAASC,OAAO,QAAQ,yCAAyC;AACjE,SAASC,aAAa,QAAQ,4CAA4C;AAC1E,SAASC,MAAM,QAAQ,0CAA0C;AACjE,SAASC,MAAM,QAAQ,iCAAiC;;AAExD,OAAO,MAAMC,CAAC,GAAGH,aAAa,CAACD,OAAO,CAAC;;AAEvC,MAAMK,yBAAyB,GAAG,6BAA6B;;AAE/DD,CAAC,CAACE,IAAI,CAAC,cAAc,CAAC;AACnBC,IAAI;AACF;AACL;AACA;AACA,6EAA6E,CAC1E;;AACAC,EAAE,CAAC,OAAMC,CAAC,KAAI;EACb,MAAMC,GAAG,GAAGR,MAAM,EAAE;EACpB,MAAMS,OAAO,GAAG,MAAMD,GAAG,CAACE,cAAc,EAAE;EAC1CT,MAAM,CAACQ,OAAO,KAAK,IAAI,CAAC;;EAExB,MAAME,WAAW,GAAG,MAAMF,OAAO,CAACG,kBAAkB,EAAE;;EAEtDL,CAAC,CAACM,MAAM;EACNV,yBAAyB,CAACC,IAAI,CAACO,WAAW,CAACG,MAAM,CAAC;EAClD,sDAAsD,CACvD;;;EAEDP,CAAC,CAACM,MAAM;EACNV,yBAAyB,CAACC,IAAI,CAACO,WAAW,CAACI,YAAY,CAAC;EACxD,4DAA4D,CAC7D;;;EAEDR,CAAC,CAACM,MAAM;EACNV,yBAAyB,CAACC,IAAI,CAACO,WAAW,CAACK,MAAM,CAAC;EAClD,sDAAsD,CACvD;;AACH,CAAC,CAAC;;AAEJd,CAAC,CAACE,IAAI,CAAC,yBAAyB,CAAC;AAC9BC,IAAI;AACF;AACL;AACA;AACA,mCAAmC,CAChC;;AACAY,aAAa,EAAE"}