{"version":3,"sources":["../../../src/webgpu/util/buffer.ts"],"names":["makeBufferWithContents","device","dataArray","usage","buffer","createBuffer","mappedAtCreation","size","byteLength","mappedBuffer","getMappedRange","constructor","set","unmap"],"mappings":";AAAA;AACA,G,CACA;AACA;AACA;AACA,OAAO,SAASA,sBAAT;AACLC,MADK;AAELC,SAFK;AAGLC,KAHK;AAIM;AACX,QAAMC,MAAM,GAAGH,MAAM,CAACI,YAAP,CAAoB;AACjCC,IAAAA,gBAAgB,EAAE,IADe;AAEjCC,IAAAA,IAAI,EAAEL,SAAS,CAACM,UAFiB;AAGjCL,IAAAA,KAHiC,EAApB,CAAf;;AAKA,QAAMM,YAAY,GAAGL,MAAM,CAACM,cAAP,EAArB;AACA,QAAMC,WAAW,GAAGT,SAAS,CAACS,WAA9B;AACA,MAAIA,WAAJ,CAAgBF,YAAhB,EAA8BG,GAA9B,CAAkCV,SAAlC;AACAE,EAAAA,MAAM,CAACS,KAAP;AACA,SAAOT,MAAP;AACD","sourcesContent":["import { TypedArrayBufferView, TypedArrayBufferViewConstructor } from '../../common/util/util.js';\n\n/**\n * Creates a buffer with the contents of some TypedArray.\n */\nexport function makeBufferWithContents(\n  device: GPUDevice,\n  dataArray: TypedArrayBufferView,\n  usage: GPUBufferUsageFlags\n): GPUBuffer {\n  const buffer = device.createBuffer({\n    mappedAtCreation: true,\n    size: dataArray.byteLength,\n    usage,\n  });\n  const mappedBuffer = buffer.getMappedRange();\n  const constructor = dataArray.constructor as TypedArrayBufferViewConstructor;\n  new constructor(mappedBuffer).set(dataArray);\n  buffer.unmap();\n  return buffer;\n}\n"],"file":"buffer.js"}