{"version":3,"sources":["../../../src/webgpu/util/unions.ts"],"names":["reifyOrigin3D","val","Symbol","iterator","v","Array","from","x","y","z","reifyExtent3D","width","height","depthOrArrayLayers"],"mappings":";AAAA;AACA,G,CADA;AACA;AACA,GACA,OAAO,SAASA,aAAT,CACLC,GADK;AAEsB;AAC3B,MAAIC,MAAM,CAACC,QAAP,IAAmBF,GAAvB,EAA4B;AAC1B,UAAMG,CAAC,GAAGC,KAAK,CAACC,IAAN,CAAWL,GAAX,CAAV;AACA,WAAO;AACLM,MAAAA,CAAC,EAAEH,CAAC,CAAC,CAAD,CAAD,IAAQ,CADN;AAELI,MAAAA,CAAC,EAAEJ,CAAC,CAAC,CAAD,CAAD,IAAQ,CAFN;AAGLK,MAAAA,CAAC,EAAEL,CAAC,CAAC,CAAD,CAAD,IAAQ,CAHN,EAAP;;AAKD,GAPD,MAOO;AACL,UAAMA,CAAC,GAAGH,GAAV;AACA,WAAO;AACLM,MAAAA,CAAC,EAAEH,CAAC,CAACG,CAAF,IAAO,CADL;AAELC,MAAAA,CAAC,EAAEJ,CAAC,CAACI,CAAF,IAAO,CAFL;AAGLC,MAAAA,CAAC,EAAEL,CAAC,CAACK,CAAF,IAAO,CAHL,EAAP;;AAKD;AACF;;AAED;AACA;AACA;AACA,OAAO,SAASC,aAAT;AACLT,GADK;AAEsB;AAC3B,MAAIC,MAAM,CAACC,QAAP,IAAmBF,GAAvB,EAA4B;AAC1B,UAAMG,CAAC,GAAGC,KAAK,CAACC,IAAN,CAAWL,GAAX,CAAV;AACA,WAAO;AACLU,MAAAA,KAAK,EAAEP,CAAC,CAAC,CAAD,CAAD,IAAQ,CADV;AAELQ,MAAAA,MAAM,EAAER,CAAC,CAAC,CAAD,CAAD,IAAQ,CAFX;AAGLS,MAAAA,kBAAkB,EAAET,CAAC,CAAC,CAAD,CAAD,IAAQ,CAHvB,EAAP;;AAKD,GAPD,MAOO;AACL,UAAMA,CAAC,GAAGH,GAAV;AACA,WAAO;AACLU,MAAAA,KAAK,EAAEP,CAAC,CAACO,KAAF,IAAW,CADb;AAELC,MAAAA,MAAM,EAAER,CAAC,CAACQ,MAAF,IAAY,CAFf;AAGLC,MAAAA,kBAAkB,EAAET,CAAC,CAACS,kBAAF,IAAwB,CAHvC,EAAP;;AAKD;AACF","sourcesContent":["/**\n * Reifies a `GPUOrigin3D` into a `Required<GPUOrigin3DDict>`.\n */\nexport function reifyOrigin3D(\n  val: Readonly<GPUOrigin3DDict> | Iterable<number>\n): Required<GPUOrigin3DDict> {\n  if (Symbol.iterator in val) {\n    const v = Array.from(val as Iterable<number>);\n    return {\n      x: v[0] ?? 0,\n      y: v[1] ?? 0,\n      z: v[2] ?? 0,\n    };\n  } else {\n    const v = val as Readonly<GPUOrigin3DDict>;\n    return {\n      x: v.x ?? 0,\n      y: v.y ?? 0,\n      z: v.z ?? 0,\n    };\n  }\n}\n\n/**\n * Reifies a `GPUExtent3D` into a `Required<GPUExtent3DDict>`.\n */\nexport function reifyExtent3D(\n  val: Readonly<GPUExtent3DDict> | Iterable<number>\n): Required<GPUExtent3DDict> {\n  if (Symbol.iterator in val) {\n    const v = Array.from(val as Iterable<number>);\n    return {\n      width: v[0] ?? 1,\n      height: v[1] ?? 1,\n      depthOrArrayLayers: v[2] ?? 1,\n    };\n  } else {\n    const v = val as Readonly<GPUExtent3DDict>;\n    return {\n      width: v.width ?? 1,\n      height: v.height ?? 1,\n      depthOrArrayLayers: v.depthOrArrayLayers ?? 1,\n    };\n  }\n}\n"],"file":"unions.js"}