{"version":3,"sources":["../../src/unittests/params_builder_and_utils.spec.ts"],"names":["description","kUnitCaseParamsBuilder","builderIterateCasesWithSubcases","makeTestGroup","mergeParams","publicParamsEquals","assert","objectEquals","UnitTest","ParamsTest","expectParams","act","exp","a","Array","from","map","caseP","subcases","undefined","e","expect","JSON","stringify","g","u","test","fn","t","combine","hello","beginSubcases","combineWithParams","x","y","p","q","filter","unless","expandWithParams","w","z","expand","shouldThrow","iterateCasesWithSubcases","cases","subcaseP","_a"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP;AACEC,sBADF;;;AAIEC,+BAJF;AAKO,uCALP;AAMA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,oCAAhD;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,wBAArC;;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,UAAN,SAAyBD,QAAzB,CAAkC;AAChCE,EAAAA,YAAY;AACVC,EAAAA,GADU;AAEVC,EAAAA,GAFU;AAGJ;AACN,UAAMC,CAAC,GAAGC,KAAK,CAACC,IAAN,CAAWb,+BAA+B,CAACS,GAAD,CAA1C,EAAiDK,GAAjD,CAAqD,CAAC,CAACC,KAAD,EAAQC,QAAR,CAAD,KAAuB;AACpFD,IAAAA,KADoF;AAEpFC,IAAAA,QAAQ,GAAGJ,KAAK,CAACC,IAAN,CAAWG,QAAX,CAAH,GAA0BC,SAFkD,CAA5E,CAAV;;AAIA,UAAMC,CAAC,GAAGN,KAAK,CAACC,IAAN,CAAWH,GAAX,CAAV;AACA,SAAKS,MAAL;AACEd,IAAAA,YAAY,CAACM,CAAD,EAAIO,CAAJ,CADd;AAEG;AACP,WAAWE,IAAI,CAACC,SAAL,CAAeV,CAAf,CAAkB;AAC7B,WAAWS,IAAI,CAACC,SAAL,CAAeH,CAAf,CAAkB,EAJzB;;AAMD,GAhB+B;;;AAmBlC,OAAO,MAAMI,CAAC,GAAGrB,aAAa,CAACM,UAAD,CAAvB;;AAEP,MAAMgB,CAAC,GAAGxB,sBAAV;;AAEAuB,CAAC,CAACE,IAAF,CAAO,SAAP,EAAkBC,EAAlB,CAAqB,CAAAC,CAAC,KAAI;AACxBA,EAAAA,CAAC,CAAClB,YAAF,CAAsCe,CAAC,CAACI,OAAF,CAAU,OAAV,EAAmB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB,CAAtC,EAAqE;AACnE,GAAC,EAAEC,KAAK,EAAE,CAAT,EAAD,EAAeX,SAAf,CADmE;AAEnE,GAAC,EAAEW,KAAK,EAAE,CAAT,EAAD,EAAeX,SAAf,CAFmE;AAGnE,GAAC,EAAEW,KAAK,EAAE,CAAT,EAAD,EAAeX,SAAf,CAHmE,CAArE;;AAKAS,EAAAA,CAAC,CAAClB,YAAF,CAAyCe,CAAC,CAACI,OAAF,CAAU,OAAV,EAAmB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB,CAAzC,EAAiF;AAC/E,GAAC,EAAEC,KAAK,EAAE,CAAT,EAAD,EAAeX,SAAf,CAD+E;AAE/E,GAAC,EAAEW,KAAK,EAAE,CAAT,EAAD,EAAeX,SAAf,CAF+E;AAG/E,GAAC,EAAEW,KAAK,EAAE,CAAT,EAAD,EAAeX,SAAf,CAH+E,CAAjF;;AAKAS,EAAAA,CAAC,CAAClB,YAAF,CAAsCe,CAAC,CAACM,aAAF,GAAkBF,OAAlB,CAA0B,OAA1B,EAAmC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnC,CAAtC,EAAqF;AACnF,GAAC,EAAD,EAAK,CAAC,EAAEC,KAAK,EAAE,CAAT,EAAD,EAAe,EAAEA,KAAK,EAAE,CAAT,EAAf,EAA6B,EAAEA,KAAK,EAAE,CAAT,EAA7B,CAAL,CADmF,CAArF;;AAGAF,EAAAA,CAAC,CAAClB,YAAF,CAAyCe,CAAC,CAACM,aAAF,GAAkBF,OAAlB,CAA0B,OAA1B,EAAmC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnC,CAAzC,EAAiG;AAC/F,GAAC,EAAD,EAAK,CAAC,EAAEC,KAAK,EAAE,CAAT,EAAD,EAAe,EAAEA,KAAK,EAAE,CAAT,EAAf,EAA6B,EAAEA,KAAK,EAAE,CAAT,EAA7B,CAAL,CAD+F,CAAjG;;AAGD,CAjBD;;AAmBAN,CAAC,CAACE,IAAF,CAAO,OAAP,EAAgBC,EAAhB,CAAmB,CAAAC,CAAC,KAAI;AACtBA,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAvB,EAA0B;AACxB,GAAC,EAAD,EAAKN,SAAL,CADwB,CACP;AADO,GAA1B;AAGAS,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAC,CAACM,aAAF,EAAvB,EAA0C;AACxC,GAAC,EAAD,EAAK,CAAC,EAAD,CAAL,CADwC,CAC5B;AAD4B,GAA1C;AAGD,CAPD;;AASAP,CAAC,CAACE,IAAF,CAAO,yBAAP,EAAkCC,EAAlC,CAAqC,CAAAC,CAAC,KAAI;AACxCA,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAC,CAACO,iBAAF,CAAoB,EAApB,EAAwBA,iBAAxB,CAA0C,EAA1C,CAAvB,EAAsE,EAAtE;AACAJ,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAC,CAACO,iBAAF,CAAoB,EAApB,EAAwBA,iBAAxB,CAA0C,CAAC,EAAD,CAA1C,CAAvB,EAAwE,EAAxE;AACAJ,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAC,CAACO,iBAAF,CAAoB,CAAC,EAAD,CAApB,EAA0BA,iBAA1B,CAA4C,EAA5C,CAAvB,EAAwE,EAAxE;AACAJ,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAC,CAACO,iBAAF,CAAoB,CAAC,EAAD,CAApB,EAA0BA,iBAA1B,CAA4C,CAAC,EAAD,CAA5C,CAAvB,EAA0E;AACxE,GAAC,EAAD,EAAKb,SAAL,CADwE,CACvD;AADuD,GAA1E;;AAIAS,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAC,CAACI,OAAF,CAAU,GAAV,EAAe,EAAf,EAAmBA,OAAnB,CAA2B,GAA3B,EAAgC,EAAhC,CAAvB,EAA4D,EAA5D;AACAD,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAC,CAACI,OAAF,CAAU,GAAV,EAAe,EAAf,EAAmBA,OAAnB,CAA2B,GAA3B,EAAgC,CAAC,CAAD,CAAhC,CAAvB,EAA6D,EAA7D;AACAD,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAC,CAACI,OAAF,CAAU,GAAV,EAAe,CAAC,CAAD,CAAf,EAAoBA,OAApB,CAA4B,GAA5B,EAAiC,EAAjC,CAAvB,EAA6D,EAA7D;AACAD,EAAAA,CAAC,CAAClB,YAAF,CAAuBe,CAAC,CAACI,OAAF,CAAU,GAAV,EAAe,CAAC,CAAD,CAAf,EAAoBA,OAApB,CAA4B,GAA5B,EAAiC,CAAC,CAAD,CAAjC,CAAvB,EAA8D;AAC5D,GAAC,EAAEI,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,CAAX,EAAD,EAAiBf,SAAjB,CAD4D,CAC/B;AAD+B,GAA9D;AAGD,CAdD;;AAgBAK,CAAC,CAACE,IAAF,CAAO,eAAP,EAAwBC,EAAxB,CAA2B,CAAAC,CAAC,KAAI;AAC9BA,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC;AACEI,EAAAA,OADH,CACW,GADX,EACgB,CAAC,CAAD,EAAI,CAAJ,CADhB;AAEGA,EAAAA,OAFH,CAEW,GAFX,EAEgB,CAAC,GAAD,EAAM,GAAN,CAFhB;AAGGG,EAAAA,iBAHH,CAGqB,CAAC,EAAEG,CAAC,EAAE,CAAL,EAAD,EAAW,EAAEC,CAAC,EAAE,CAAL,EAAX,CAHrB;AAIGJ,EAAAA,iBAJH,CAIqB,CAAC,EAAD,CAJrB,CADF;AAME;AACE,GAAC,EAAEC,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,GAAX,EAAgBC,CAAC,EAAE,CAAnB,EAAD,EAAyBhB,SAAzB,CADF;AAEE,GAAC,EAAEc,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,GAAX,EAAgBE,CAAC,EAAE,CAAnB,EAAD,EAAyBjB,SAAzB,CAFF;AAGE,GAAC,EAAEc,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,GAAX,EAAgBC,CAAC,EAAE,CAAnB,EAAD,EAAyBhB,SAAzB,CAHF;AAIE,GAAC,EAAEc,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,GAAX,EAAgBE,CAAC,EAAE,CAAnB,EAAD,EAAyBjB,SAAzB,CAJF;AAKE,GAAC,EAAEc,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,GAAX,EAAgBC,CAAC,EAAE,CAAnB,EAAD,EAAyBhB,SAAzB,CALF;AAME,GAAC,EAAEc,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,GAAX,EAAgBE,CAAC,EAAE,CAAnB,EAAD,EAAyBjB,SAAzB,CANF;AAOE,GAAC,EAAEc,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,GAAX,EAAgBC,CAAC,EAAE,CAAnB,EAAD,EAAyBhB,SAAzB,CAPF;AAQE,GAAC,EAAEc,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,GAAX,EAAgBE,CAAC,EAAE,CAAnB,EAAD,EAAyBjB,SAAzB,CARF,CANF;;;AAiBD,CAlBD;;AAoBAK,CAAC,CAACE,IAAF,CAAO,QAAP,EAAiBC,EAAjB,CAAoB,CAAAC,CAAC,KAAI;AACvBA,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC;AACEO,EAAAA,iBADH,CACqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CADrB;;AAKGG,EAAAA,MALH,CAKU,CAAAF,CAAC,KAAIA,CAAC,CAACtB,CALjB,CADF;AAOE;AACE,GAAC,EAAEA,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EAAD,EAAoBd,SAApB,CADF,CACkC;AADlC,GAPF;;;AAYAS,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC;AACEO,EAAAA,iBADH,CACqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CADrB;;AAKGH,EAAAA,aALH;AAMGM,EAAAA,MANH,CAMU,CAAAF,CAAC,KAAIA,CAAC,CAACtB,CANjB,CADF;AAQE;AACE,GAAC,EAAEA,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EAAD,EAAoB,CAAC,EAAD,CAApB,CADF,CAC6B;AAC3B;AAFF,GARF;;;AAcAL,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC;AACEM,EAAAA,aADH;AAEGC,EAAAA,iBAFH,CAEqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CAFrB;;AAMGG,EAAAA,MANH,CAMU,CAAAF,CAAC,KAAIA,CAAC,CAACtB,CANjB,CADF;AAQE;AACE,GAAC,EAAD,EAAK,CAAC,EAAEA,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EAAD,CAAL,CADF,CAC6B;AAD7B,GARF;;AAYD,CAvCD;;AAyCAT,CAAC,CAACE,IAAF,CAAO,QAAP,EAAiBC,EAAjB,CAAoB,CAAAC,CAAC,KAAI;AACvBA,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC;AACEO,EAAAA,iBADH,CACqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CADrB;;AAKGI,EAAAA,MALH,CAKU,CAAAH,CAAC,KAAIA,CAAC,CAACtB,CALjB,CADF;AAOE;AACE,GAAC,EAAEA,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAAD,EAAqBf,SAArB,CADF,CACmC;AADnC,GAPF;;;AAYAS,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC;AACEO,EAAAA,iBADH,CACqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CADrB;;AAKGH,EAAAA,aALH;AAMGO,EAAAA,MANH,CAMU,CAAAH,CAAC,KAAIA,CAAC,CAACtB,CANjB,CADF;AAQE;AACE;AACA,GAAC,EAAEA,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAAD,EAAqB,CAAC,EAAD,CAArB,CAFF,CAE8B;AAF9B,GARF;;;AAcAN,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC;AACEM,EAAAA,aADH;AAEGC,EAAAA,iBAFH,CAEqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CAFrB;;AAMGI,EAAAA,MANH,CAMU,CAAAH,CAAC,KAAIA,CAAC,CAACtB,CANjB,CADF;AAQE;AACE,GAAC,EAAD,EAAK,CAAC,EAAEA,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAAD,CAAL,CADF,CAC8B;AAD9B,GARF;;AAYD,CAvCD;;AAyCAV,CAAC,CAACE,IAAF,CAAO,SAAP,EAAkBC,EAAlB,CAAqB,CAAAC,CAAC,KAAI;AACxB;AACAA,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC,CAACc,gBAAF,CAAmB,aAAa,CAAE,CAAlC,CADF;AAEE,IAFF;;AAIAX,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC,CAACc,gBAAF,CAAmB,aAAa;AAC9B,UAAM,EAAN;AACD,GAFD,CADF;AAIE,GAAC,CAAC,EAAD,EAAKpB,SAAL,CAAD,CAJF;;AAMAS,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC,CAACc,gBAAF,CAAmB,aAAa;AAC9B,WAAOtC,sBAAsB,CAAC4B,OAAvB,CAA+B,GAA/B,EAAoC,CAAC,CAAD,EAAI,CAAJ,CAApC,CAAP;AACA,UAAM,EAAEW,CAAC,EAAE,CAAL,EAAN;AACD,GAHD,CADF;AAKE;AACE,GAAC,EAAEC,CAAC,EAAE,CAAL,EAAD,EAAWtB,SAAX,CADF;AAEE,GAAC,EAAEsB,CAAC,EAAE,CAAL,EAAD,EAAWtB,SAAX,CAFF;AAGE,GAAC,EAAEqB,CAAC,EAAE,CAAL,EAAD,EAAWrB,SAAX,CAHF,CALF;;;AAWAS,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC,CAACM,aAAF,GAAkBQ,gBAAlB,CAAmC,aAAa;AAC9C,WAAOtC,sBAAsB,CAAC4B,OAAvB,CAA+B,GAA/B,EAAoC,CAAC,CAAD,EAAI,CAAJ,CAApC,CAAP;AACA,UAAM,EAAEW,CAAC,EAAE,CAAL,EAAN;AACD,GAHD,CADF;AAKE,GAAC,CAAC,EAAD,EAAK,CAAC,EAAEC,CAAC,EAAE,CAAL,EAAD,EAAW,EAAEA,CAAC,EAAE,CAAL,EAAX,EAAqB,EAAED,CAAC,EAAE,CAAL,EAArB,CAAL,CAAD,CALF;;;AAQA;AACAZ,EAAAA,CAAC,CAAClB,YAAF;;;;;;;;;;AAUEe,EAAAA,CAAC;AACEO,EAAAA,iBADH,CACqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CADrB;;AAKGK,EAAAA,gBALH,CAKoB,WAAWJ,CAAX,EAAc;AAC9B,QAAIA,CAAC,CAACtB,CAAN,EAAS;AACP,YAAM,EAAE4B,CAAC,EAAE,CAAL,EAAN;AACA,YAAM,EAAEA,CAAC,EAAE,CAAL,EAAN;AACD,KAHD,MAGO;AACL,YAAM,EAAED,CAAC,EAAE,CAAL,EAAN;AACD;AACF,GAZH,CAVF;AAuBE;AACE,GAAC,EAAE3B,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EAAiBQ,CAAC,EAAE,CAApB,EAAD,EAA0BtB,SAA1B,CADF;AAEE,GAAC,EAAEN,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EAAiBQ,CAAC,EAAE,CAApB,EAAD,EAA0BtB,SAA1B,CAFF;AAGE,GAAC,EAAEN,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAAkBM,CAAC,EAAE,CAArB,EAAD,EAA2BrB,SAA3B,CAHF,CAvBF;;;AA6BAS,EAAAA,CAAC,CAAClB,YAAF;;;;AAIEe,EAAAA,CAAC;AACEO,EAAAA,iBADH,CACqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CADrB;;AAKGH,EAAAA,aALH;AAMGQ,EAAAA,gBANH,CAMoB,WAAWJ,CAAX,EAAc;AAC9B,QAAIA,CAAC,CAACtB,CAAN,EAAS;AACP,YAAM,EAAE4B,CAAC,EAAE,CAAL,EAAN;AACA,YAAM,EAAEA,CAAC,EAAE,CAAL,EAAN;AACD,KAHD,MAGO;AACL,YAAM,EAAED,CAAC,EAAE,CAAL,EAAN;AACD;AACF,GAbH,CAJF;AAkBE;AACE,GAAC,EAAE3B,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EAAD,EAAoB,CAAC,EAAEQ,CAAC,EAAE,CAAL,EAAD,EAAW,EAAEA,CAAC,EAAE,CAAL,EAAX,CAApB,CADF;AAEE,GAAC,EAAE5B,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAAD,EAAqB,CAAC,EAAEM,CAAC,EAAE,CAAL,EAAD,CAArB,CAFF,CAlBF;;;AAuBD,CApFD;;AAsFAhB,CAAC,CAACE,IAAF,CAAO,QAAP,EAAiBC,EAAjB,CAAoB,CAAAC,CAAC,KAAI;AACvB;AACAA,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC,CAACiB,MAAF,CAAS,GAAT,EAAc,aAAa,CAAE,CAA7B,CADF;AAEE,IAFF;;AAIAd,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC,CAACiB,MAAF,CAAS,GAAT,EAAc,aAAa;AACzB,UAAM,CAAN;AACA,UAAM,CAAN;AACD,GAHD,CADF;AAKE;AACE,GAAC,EAAED,CAAC,EAAE,CAAL,EAAD,EAAWtB,SAAX,CADF;AAEE,GAAC,EAAEsB,CAAC,EAAE,CAAL,EAAD,EAAWtB,SAAX,CAFF,CALF;;;AAUAS,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC,CAACM,aAAF,GAAkBW,MAAlB,CAAyB,GAAzB,EAA8B,aAAa;AACzC,UAAM,CAAN;AACA,UAAM,CAAN;AACD,GAHD,CADF;AAKE,GAAC,CAAC,EAAD,EAAK,CAAC,EAAED,CAAC,EAAE,CAAL,EAAD,EAAW,EAAEA,CAAC,EAAE,CAAL,EAAX,CAAL,CAAD,CALF;;;AAQA;AACAb,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC;AACEO,EAAAA,iBADH,CACqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CADrB;;AAKGQ,EAAAA,MALH,CAKU,GALV,EAKe,WAAWP,CAAX,EAAc;AACzB,QAAIA,CAAC,CAACtB,CAAN,EAAS;AACP,YAAM,CAAN;AACD,KAFD,MAEO;AACL,YAAM,CAAN;AACD;AACF,GAXH,CADF;AAaE;AACE,GAAC,EAAEA,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EAAiBQ,CAAC,EAAE,CAApB,EAAD,EAA0BtB,SAA1B,CADF;AAEE,GAAC,EAAEN,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAAkBO,CAAC,EAAE,CAArB,EAAD,EAA2BtB,SAA3B,CAFF,CAbF;;;AAkBAS,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC;AACEO,EAAAA,iBADH,CACqB;AACjB,IAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,IAAEpB,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAFiB,CADrB;;AAKGH,EAAAA,aALH;AAMGW,EAAAA,MANH,CAMU,GANV,EAMe,WAAWP,CAAX,EAAc;AACzB,QAAIA,CAAC,CAACtB,CAAN,EAAS;AACP,YAAM,CAAN;AACD,KAFD,MAEO;AACL,YAAM,CAAN;AACD;AACF,GAZH,CADF;AAcE;AACE,GAAC,EAAEA,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EAAD,EAAoB,CAAC,EAAEQ,CAAC,EAAE,CAAL,EAAD,CAApB,CADF;AAEE,GAAC,EAAE5B,CAAC,EAAE,KAAL,EAAYqB,CAAC,EAAE,CAAf,EAAD,EAAqB,CAAC,EAAEO,CAAC,EAAE,CAAL,EAAD,CAArB,CAFF,CAdF;;;AAmBD,CA9DD;;AAgEAjB,CAAC,CAACE,IAAF,CAAO,mBAAP,EAA4BC,EAA5B,CAA+B,CAAAC,CAAC,KAAI;AAClC;AACA;AACE,UAAMO,CAAC,GAAGV,CAAC;AACRO,IAAAA,iBADO,CACW;AACjB,MAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,MAAEpB,CAAC,EAAE,KAAL,EAAYoB,CAAC,EAAE,CAAf,EAFiB,CADX;;AAKPM,IAAAA,gBALO,CAKU,WAAWJ,CAAX,EAAc;AAC9B,UAAIA,CAAC,CAACtB,CAAN,EAAS;AACP,cAAM,EAAEoB,CAAC,EAAE,CAAL,EAAN;AACD,OAFD,MAEO;AACL,cAAM,EAAEO,CAAC,EAAE,CAAL,EAAN;AACD;AACF,KAXO,CAAV;AAYA;AACAZ,IAAAA,CAAC,CAACe,WAAF,CAAc,OAAd,EAAuB,MAAM;AAC3B7B,MAAAA,KAAK,CAACC,IAAN,CAAWoB,CAAC,CAACS,wBAAF,EAAX;AACD,KAFD;AAGD;AACD;AACA;AACE,UAAMT,CAAC,GAAGV,CAAC;AACRM,IAAAA,aADO;AAEPC,IAAAA,iBAFO,CAEW;AACjB,MAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,MAAEpB,CAAC,EAAE,KAAL,EAAYoB,CAAC,EAAE,CAAf,EAFiB,CAFX;;AAMPM,IAAAA,gBANO,CAMU,WAAWJ,CAAX,EAAc;AAC9B,UAAIA,CAAC,CAACtB,CAAN,EAAS;AACP,cAAM,EAAEoB,CAAC,EAAE,CAAL,EAAN;AACD,OAFD,MAEO;AACL,cAAM,EAAEO,CAAC,EAAE,CAAL,EAAN;AACD;AACF,KAZO,CAAV;AAaA;AACAZ,IAAAA,CAAC,CAACe,WAAF,CAAc,OAAd,EAAuB,MAAM;AAC3B7B,MAAAA,KAAK,CAACC,IAAN,CAAWoB,CAAC,CAACS,wBAAF,EAAX;AACD,KAFD;AAGD;AACD;AACA;AACE,UAAMT,CAAC,GAAGV,CAAC;AACRO,IAAAA,iBADO,CACW;AACjB,MAAEnB,CAAC,EAAE,IAAL,EAAWoB,CAAC,EAAE,CAAd,EADiB;AAEjB,MAAEpB,CAAC,EAAE,KAAL,EAAYoB,CAAC,EAAE,CAAf,EAFiB,CADX;;AAKPF,IAAAA,aALO;AAMPQ,IAAAA,gBANO,CAMU,WAAWJ,CAAX,EAAc;AAC9B,UAAIA,CAAC,CAACtB,CAAN,EAAS;AACP,cAAM,EAAEoB,CAAC,EAAE,CAAL,EAAN;AACD,OAFD,MAEO;AACL,cAAM,EAAEO,CAAC,EAAE,CAAL,EAAN;AACD;AACF,KAZO,CAAV;AAaA,UAAMK,KAAK,GAAG/B,KAAK,CAACC,IAAN,CAAWoB,CAAC,CAACS,wBAAF,EAAX,CAAd;AACA;AACA,SAAK,MAAM,CAAC3B,KAAD,EAAQC,QAAR,CAAX,IAAgC2B,KAAhC,EAAuC;AACrCvC,MAAAA,MAAM,CAACY,QAAQ,KAAKC,SAAd,CAAN;AACA;AACA,WAAK,MAAM2B,QAAX,IAAuB5B,QAAvB,EAAiC;AAC/B,YAAID,KAAK,CAACJ,CAAV,EAAa;AACXP,UAAAA,MAAM,CAACY,QAAQ,KAAKC,SAAd,CAAN;AACA;AACAS,UAAAA,CAAC,CAACe,WAAF,CAAc,OAAd,EAAuB,MAAM;AAC3BvC,YAAAA,WAAW,CAACa,KAAD,EAAQ6B,QAAR,CAAX;AACD,WAFD;AAGD,SAND,MAMO;AACL1C,UAAAA,WAAW,CAACa,KAAD,EAAQ6B,QAAR,CAAX;AACD;AACF;AACF;AACF;AACF,CAzED;;AA2EAtB,CAAC,CAACE,IAAF,CAAO,WAAP,EAAoBC,EAApB,CAAuB,CAAAC,CAAC,KAAI;AAC1BA,EAAAA,CAAC,CAACP,MAAF,CAAS,CAAChB,kBAAkB,CAAC,EAAEQ,CAAC,EAAEM,SAAL,EAAD,EAAmB,EAAnB,CAA5B;AACAS,EAAAA,CAAC,CAACP,MAAF,CAAS,CAAChB,kBAAkB,CAAC,EAAD,EAAK,EAAEQ,CAAC,EAAEM,SAAL,EAAL,CAA5B;AACD,CAHD;;AAKAK,CAAC,CAACE,IAAF,CAAO,SAAP,EAAkBC,EAAlB,CAAqB,CAAAC,CAAC,KAAI;AACxBA,EAAAA,CAAC,CAACP,MAAF,CAAShB,kBAAkB,CAAC,EAAE0C,EAAE,EAAE,CAAN,EAAD,EAAY,EAAZ,CAA3B;AACAnB,EAAAA,CAAC,CAACP,MAAF,CAAShB,kBAAkB,CAAC,EAAD,EAAK,EAAE0C,EAAE,EAAE,CAAN,EAAL,CAA3B;AACD,CAHD;;AAKAvB,CAAC,CAACE,IAAF,CAAO,aAAP,EAAsBC,EAAtB,CAAyB,CAAAC,CAAC,KAAI;AAC5BA,EAAAA,CAAC,CAAClB,YAAF,CAAoCe,CAAC,CAACO,iBAAF,CAAoB,CAAC,EAAEnB,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAL,EAAD,CAApB,CAApC,EAA0E;AACxE,GAAC,EAAEA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAL,EAAD,EAAgBM,SAAhB,CADwE,CAC5C;AAD4C,GAA1E;AAGAS,EAAAA,CAAC,CAAClB,YAAF,CAAoCe,CAAC,CAACM,aAAF,GAAkBC,iBAAlB,CAAoC,CAAC,EAAEnB,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAL,EAAD,CAApC,CAApC,EAA0F;AACxF,GAAC,EAAD,EAAK,CAAC,EAAEA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAL,EAAD,CAAL,CADwF,CACjE;AADiE,GAA1F;AAGD,CAPD;;AASAW,CAAC,CAACE,IAAF,CAAO,cAAP,EAAuBC,EAAvB,CAA0B,CAAAC,CAAC,KAAI;AAC7BA,EAAAA,CAAC,CAAClB,YAAF,CAAmDe,CAAC,CAACO,iBAAF,CAAoB,CAAC,EAAEnB,CAAC,EAAE,EAAEoB,CAAC,EAAE,CAAL,EAAL,EAAD,CAApB,CAAnD,EAA2F;AACzF,GAAC,EAAEpB,CAAC,EAAE,EAAEoB,CAAC,EAAE,CAAL,EAAL,EAAD,EAAkBd,SAAlB,CADyF,CAC3D;AAD2D,GAA3F;AAGAS,EAAAA,CAAC,CAAClB,YAAF;AACEe,EAAAA,CAAC,CAACM,aAAF,GAAkBC,iBAAlB,CAAoC,CAAC,EAAEnB,CAAC,EAAE,EAAEoB,CAAC,EAAE,CAAL,EAAL,EAAD,CAApC,CADF;AAEE;AACE,GAAC,EAAD,EAAK,CAAC,EAAEpB,CAAC,EAAE,EAAEoB,CAAC,EAAE,CAAL,EAAL,EAAD,CAAL,CADF,CAC2B;AAD3B,GAFF;;AAMD,CAVD","sourcesContent":["export const description = `\nUnit tests for parameterization helpers.\n`;\n\nimport {\n  kUnitCaseParamsBuilder,\n  CaseSubcaseIterable,\n  ParamsBuilderBase,\n  builderIterateCasesWithSubcases,\n} from '../common/framework/params_builder.js';\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { mergeParams, publicParamsEquals } from '../common/internal/params_utils.js';\nimport { assert, objectEquals } from '../common/util/util.js';\n\nimport { UnitTest } from './unit_test.js';\n\nclass ParamsTest extends UnitTest {\n  expectParams<CaseP, SubcaseP>(\n    act: ParamsBuilderBase<CaseP, SubcaseP>,\n    exp: CaseSubcaseIterable<{}, {}>\n  ): void {\n    const a = Array.from(builderIterateCasesWithSubcases(act)).map(([caseP, subcases]) => [\n      caseP,\n      subcases ? Array.from(subcases) : undefined,\n    ]);\n    const e = Array.from(exp);\n    this.expect(\n      objectEquals(a, e),\n      `\ngot      ${JSON.stringify(a)}\nexpected ${JSON.stringify(e)}`\n    );\n  }\n}\n\nexport const g = makeTestGroup(ParamsTest);\n\nconst u = kUnitCaseParamsBuilder;\n\ng.test('combine').fn(t => {\n  t.expectParams<{ hello: number }, {}>(u.combine('hello', [1, 2, 3]), [\n    [{ hello: 1 }, undefined],\n    [{ hello: 2 }, undefined],\n    [{ hello: 3 }, undefined],\n  ]);\n  t.expectParams<{ hello: 1 | 2 | 3 }, {}>(u.combine('hello', [1, 2, 3] as const), [\n    [{ hello: 1 }, undefined],\n    [{ hello: 2 }, undefined],\n    [{ hello: 3 }, undefined],\n  ]);\n  t.expectParams<{}, { hello: number }>(u.beginSubcases().combine('hello', [1, 2, 3]), [\n    [{}, [{ hello: 1 }, { hello: 2 }, { hello: 3 }]],\n  ]);\n  t.expectParams<{}, { hello: 1 | 2 | 3 }>(u.beginSubcases().combine('hello', [1, 2, 3] as const), [\n    [{}, [{ hello: 1 }, { hello: 2 }, { hello: 3 }]],\n  ]);\n});\n\ng.test('empty').fn(t => {\n  t.expectParams<{}, {}>(u, [\n    [{}, undefined], //\n  ]);\n  t.expectParams<{}, {}>(u.beginSubcases(), [\n    [{}, [{}]], //\n  ]);\n});\n\ng.test('combine,zeroes_and_ones').fn(t => {\n  t.expectParams<{}, {}>(u.combineWithParams([]).combineWithParams([]), []);\n  t.expectParams<{}, {}>(u.combineWithParams([]).combineWithParams([{}]), []);\n  t.expectParams<{}, {}>(u.combineWithParams([{}]).combineWithParams([]), []);\n  t.expectParams<{}, {}>(u.combineWithParams([{}]).combineWithParams([{}]), [\n    [{}, undefined], //\n  ]);\n\n  t.expectParams<{}, {}>(u.combine('x', []).combine('y', []), []);\n  t.expectParams<{}, {}>(u.combine('x', []).combine('y', [1]), []);\n  t.expectParams<{}, {}>(u.combine('x', [1]).combine('y', []), []);\n  t.expectParams<{}, {}>(u.combine('x', [1]).combine('y', [1]), [\n    [{ x: 1, y: 1 }, undefined], //\n  ]);\n});\n\ng.test('combine,mixed').fn(t => {\n  t.expectParams<{ x: number; y: string; p: number | undefined; q: number | undefined }, {}>(\n    u\n      .combine('x', [1, 2])\n      .combine('y', ['a', 'b'])\n      .combineWithParams([{ p: 4 }, { q: 5 }])\n      .combineWithParams([{}]),\n    [\n      [{ x: 1, y: 'a', p: 4 }, undefined],\n      [{ x: 1, y: 'a', q: 5 }, undefined],\n      [{ x: 1, y: 'b', p: 4 }, undefined],\n      [{ x: 1, y: 'b', q: 5 }, undefined],\n      [{ x: 2, y: 'a', p: 4 }, undefined],\n      [{ x: 2, y: 'a', q: 5 }, undefined],\n      [{ x: 2, y: 'b', p: 4 }, undefined],\n      [{ x: 2, y: 'b', q: 5 }, undefined],\n    ]\n  );\n});\n\ng.test('filter').fn(t => {\n  t.expectParams<{ a: boolean; x: number | undefined; y: number | undefined }, {}>(\n    u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .filter(p => p.a),\n    [\n      [{ a: true, x: 1 }, undefined], //\n    ]\n  );\n\n  t.expectParams<{ a: boolean; x: number | undefined; y: number | undefined }, {}>(\n    u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .beginSubcases()\n      .filter(p => p.a),\n    [\n      [{ a: true, x: 1 }, [{}]], //\n      // Case with no subcases is filtered out.\n    ]\n  );\n\n  t.expectParams<{}, { a: boolean; x: number | undefined; y: number | undefined }>(\n    u\n      .beginSubcases()\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .filter(p => p.a),\n    [\n      [{}, [{ a: true, x: 1 }]], //\n    ]\n  );\n});\n\ng.test('unless').fn(t => {\n  t.expectParams<{ a: boolean; x: number | undefined; y: number | undefined }, {}>(\n    u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .unless(p => p.a),\n    [\n      [{ a: false, y: 2 }, undefined], //\n    ]\n  );\n\n  t.expectParams<{ a: boolean; x: number | undefined; y: number | undefined }, {}>(\n    u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .beginSubcases()\n      .unless(p => p.a),\n    [\n      // Case with no subcases is filtered out.\n      [{ a: false, y: 2 }, [{}]], //\n    ]\n  );\n\n  t.expectParams<{}, { a: boolean; x: number | undefined; y: number | undefined }>(\n    u\n      .beginSubcases()\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .unless(p => p.a),\n    [\n      [{}, [{ a: false, y: 2 }]], //\n    ]\n  );\n});\n\ng.test('expandP').fn(t => {\n  // simple\n  t.expectParams<{}, {}>(\n    u.expandWithParams(function* () {}),\n    []\n  );\n  t.expectParams<{}, {}>(\n    u.expandWithParams(function* () {\n      yield {};\n    }),\n    [[{}, undefined]]\n  );\n  t.expectParams<{ z: number | undefined; w: number | undefined }, {}>(\n    u.expandWithParams(function* () {\n      yield* kUnitCaseParamsBuilder.combine('z', [3, 4]);\n      yield { w: 5 };\n    }),\n    [\n      [{ z: 3 }, undefined],\n      [{ z: 4 }, undefined],\n      [{ w: 5 }, undefined],\n    ]\n  );\n  t.expectParams<{}, { z: number | undefined; w: number | undefined }>(\n    u.beginSubcases().expandWithParams(function* () {\n      yield* kUnitCaseParamsBuilder.combine('z', [3, 4]);\n      yield { w: 5 };\n    }),\n    [[{}, [{ z: 3 }, { z: 4 }, { w: 5 }]]]\n  );\n\n  // more complex\n  t.expectParams<\n    {\n      a: boolean;\n      x: number | undefined;\n      y: number | undefined;\n      z: number | undefined;\n      w: number | undefined;\n    },\n    {}\n  >(\n    u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .expandWithParams(function* (p) {\n        if (p.a) {\n          yield { z: 3 };\n          yield { z: 4 };\n        } else {\n          yield { w: 5 };\n        }\n      }),\n    [\n      [{ a: true, x: 1, z: 3 }, undefined],\n      [{ a: true, x: 1, z: 4 }, undefined],\n      [{ a: false, y: 2, w: 5 }, undefined],\n    ]\n  );\n  t.expectParams<\n    { a: boolean; x: number | undefined; y: number | undefined },\n    { z: number | undefined; w: number | undefined }\n  >(\n    u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .beginSubcases()\n      .expandWithParams(function* (p) {\n        if (p.a) {\n          yield { z: 3 };\n          yield { z: 4 };\n        } else {\n          yield { w: 5 };\n        }\n      }),\n    [\n      [{ a: true, x: 1 }, [{ z: 3 }, { z: 4 }]],\n      [{ a: false, y: 2 }, [{ w: 5 }]],\n    ]\n  );\n});\n\ng.test('expand').fn(t => {\n  // simple\n  t.expectParams<{}, {}>(\n    u.expand('x', function* () {}),\n    []\n  );\n  t.expectParams<{ z: number }, {}>(\n    u.expand('z', function* () {\n      yield 3;\n      yield 4;\n    }),\n    [\n      [{ z: 3 }, undefined],\n      [{ z: 4 }, undefined],\n    ]\n  );\n  t.expectParams<{}, { z: number }>(\n    u.beginSubcases().expand('z', function* () {\n      yield 3;\n      yield 4;\n    }),\n    [[{}, [{ z: 3 }, { z: 4 }]]]\n  );\n\n  // more complex\n  t.expectParams<{ a: boolean; x: number | undefined; y: number | undefined; z: number }, {}>(\n    u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .expand('z', function* (p) {\n        if (p.a) {\n          yield 3;\n        } else {\n          yield 5;\n        }\n      }),\n    [\n      [{ a: true, x: 1, z: 3 }, undefined],\n      [{ a: false, y: 2, z: 5 }, undefined],\n    ]\n  );\n  t.expectParams<{ a: boolean; x: number | undefined; y: number | undefined }, { z: number }>(\n    u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, y: 2 },\n      ])\n      .beginSubcases()\n      .expand('z', function* (p) {\n        if (p.a) {\n          yield 3;\n        } else {\n          yield 5;\n        }\n      }),\n    [\n      [{ a: true, x: 1 }, [{ z: 3 }]],\n      [{ a: false, y: 2 }, [{ z: 5 }]],\n    ]\n  );\n});\n\ng.test('invalid,shadowing').fn(t => {\n  // Existing CaseP is shadowed by a new CaseP.\n  {\n    const p = u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, x: 2 },\n      ])\n      .expandWithParams(function* (p) {\n        if (p.a) {\n          yield { x: 3 };\n        } else {\n          yield { w: 5 };\n        }\n      });\n    // Iterating causes e.g. mergeParams({x:1}, {x:3}), which fails.\n    t.shouldThrow('Error', () => {\n      Array.from(p.iterateCasesWithSubcases());\n    });\n  }\n  // Existing SubcaseP is shadowed by a new SubcaseP.\n  {\n    const p = u\n      .beginSubcases()\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, x: 2 },\n      ])\n      .expandWithParams(function* (p) {\n        if (p.a) {\n          yield { x: 3 };\n        } else {\n          yield { w: 5 };\n        }\n      });\n    // Iterating causes e.g. mergeParams({x:1}, {x:3}), which fails.\n    t.shouldThrow('Error', () => {\n      Array.from(p.iterateCasesWithSubcases());\n    });\n  }\n  // Existing CaseP is shadowed by a new SubcaseP.\n  {\n    const p = u\n      .combineWithParams([\n        { a: true, x: 1 },\n        { a: false, x: 2 },\n      ])\n      .beginSubcases()\n      .expandWithParams(function* (p) {\n        if (p.a) {\n          yield { x: 3 };\n        } else {\n          yield { w: 5 };\n        }\n      });\n    const cases = Array.from(p.iterateCasesWithSubcases());\n    // Iterating cases is fine...\n    for (const [caseP, subcases] of cases) {\n      assert(subcases !== undefined);\n      // Iterating subcases is fine...\n      for (const subcaseP of subcases) {\n        if (caseP.a) {\n          assert(subcases !== undefined);\n          // Only errors once we try to e.g. mergeParams({x:1}, {x:3}).\n          t.shouldThrow('Error', () => {\n            mergeParams(caseP, subcaseP);\n          });\n        } else {\n          mergeParams(caseP, subcaseP);\n        }\n      }\n    }\n  }\n});\n\ng.test('undefined').fn(t => {\n  t.expect(!publicParamsEquals({ a: undefined }, {}));\n  t.expect(!publicParamsEquals({}, { a: undefined }));\n});\n\ng.test('private').fn(t => {\n  t.expect(publicParamsEquals({ _a: 0 }, {}));\n  t.expect(publicParamsEquals({}, { _a: 0 }));\n});\n\ng.test('value,array').fn(t => {\n  t.expectParams<{ a: number[] }, {}>(u.combineWithParams([{ a: [1, 2] }]), [\n    [{ a: [1, 2] }, undefined], //\n  ]);\n  t.expectParams<{}, { a: number[] }>(u.beginSubcases().combineWithParams([{ a: [1, 2] }]), [\n    [{}, [{ a: [1, 2] }]], //\n  ]);\n});\n\ng.test('value,object').fn(t => {\n  t.expectParams<{ a: { [k: string]: number } }, {}>(u.combineWithParams([{ a: { x: 1 } }]), [\n    [{ a: { x: 1 } }, undefined], //\n  ]);\n  t.expectParams<{}, { a: { [k: string]: number } }>(\n    u.beginSubcases().combineWithParams([{ a: { x: 1 } }]),\n    [\n      [{}, [{ a: { x: 1 } }]], //\n    ]\n  );\n});\n"],"file":"params_builder_and_utils.spec.js"}