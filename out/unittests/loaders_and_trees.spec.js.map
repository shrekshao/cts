{"version":3,"sources":["../../src/unittests/loaders_and_trees.spec.ts"],"names":["description","makeTestGroup","TestFileLoader","Logger","parseQuery","TestQuerySingleCase","TestQueryMultiCase","TestQueryMultiTest","TestQueryMultiFile","makeTestGroupForUnitTesting","assert","objectEquals","UnitTest","listingData","suite1","file","readme","suite2","specsData","g","test","fn","desc","paramsSimple","x","a","b","_c","t","debug","fail","FakeTestFileLoader","listing","suite","import","path","LoadingTest","loader","events","isListenersAdded","collectEvents","addEventListener","ev","push","data","url","load","query","Array","from","loadCases","loadNames","map","c","toString","shouldReject","expect","length","s","runTestcase","log","testcases","i","expectations","status","logs","name","rec","res","record","run","results","get","timems","undefined","l","JSON","stringify","overrideDebugMode","startsWith","indexOf","zedCases","zedExpectationsSkipA1B2","expectation","zedExpectationsSkipA1B0","zedExpectationsSkipB3","zedExpectationsSkipA1","zedExpectationsSkipZed","suite1Cases","expectationsSkipAllInBaz","expectationsSkipAllInFoo","expectationsSkipAll","suite2Cases","expectedFailures","testIterateCollapsed","alwaysExpandThroughLevel","expectedResult","includeEmptySubtrees","treePromise","loadTree","tree","actualIter","iterateCollapsedNodes","testingTODOs","actual","subtreeCounts","nodesWithTODO"],"mappings":"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","sourcesContent":["export const description = `\nTests for queries/filtering, loading, and running.\n`;\n\nimport { Fixture } from '../common/framework/fixture.js';\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { TestFileLoader, SpecFile } from '../common/internal/file_loader.js';\nimport { Logger } from '../common/internal/logging/logger.js';\nimport { Status } from '../common/internal/logging/result.js';\nimport { parseQuery } from '../common/internal/query/parseQuery.js';\nimport {\n  TestQuery,\n  TestQuerySingleCase,\n  TestQueryMultiCase,\n  TestQueryMultiTest,\n  TestQueryMultiFile,\n  TestQueryWithExpectation,\n} from '../common/internal/query/query.js';\nimport { makeTestGroupForUnitTesting } from '../common/internal/test_group.js';\nimport { TestSuiteListing, TestSuiteListingEntry } from '../common/internal/test_suite_listing.js';\nimport { ExpandThroughLevel, TestTreeLeaf } from '../common/internal/tree.js';\nimport { assert, objectEquals } from '../common/util/util.js';\n\nimport { UnitTest } from './unit_test.js';\n\nconst listingData: { [k: string]: TestSuiteListingEntry[] } = {\n  suite1: [\n    { file: [], readme: 'desc 1a' },\n    { file: ['foo'] },\n    { file: ['bar'], readme: 'desc 1h' },\n    { file: ['bar', 'biz'] },\n    { file: ['bar', 'buzz', 'buzz'] },\n    { file: ['baz'] },\n    { file: ['empty'], readme: 'desc 1z' }, // directory with no files\n  ],\n  suite2: [{ file: [], readme: 'desc 2a' }, { file: ['foof'] }],\n};\n\nconst specsData: { [k: string]: SpecFile } = {\n  'suite1/foo.spec.js': {\n    description: 'desc 1b',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('hello').fn(() => {});\n      g.test('bonjour').fn(() => {});\n      g.test('hola')\n        .desc('TODO TODO')\n        .fn(() => {});\n      return g;\n    })(),\n  },\n  'suite1/bar/biz.spec.js': {\n    description: 'desc 1f TODO TODO',\n    g: makeTestGroupForUnitTesting(UnitTest), // file with no tests\n  },\n  'suite1/bar/buzz/buzz.spec.js': {\n    description: 'desc 1d TODO',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('zap').fn(() => {});\n      return g;\n    })(),\n  },\n  'suite1/baz.spec.js': {\n    description: 'desc 1e',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('wye')\n        .paramsSimple([{}, { x: 1 }])\n        .fn(() => {});\n      g.test('zed')\n        .paramsSimple([\n          { a: 1, b: 2, _c: 0 },\n          { b: 3, a: 1, _c: 0 },\n        ])\n        .fn(() => {});\n      return g;\n    })(),\n  },\n  'suite2/foof.spec.js': {\n    description: 'desc 2b',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('blah').fn(t => {\n        t.debug('OK');\n      });\n      g.test('bleh')\n        .paramsSimple([{ a: 1 }])\n        .fn(t => {\n          t.debug('OK');\n          t.debug('OK');\n        });\n      g.test('bluh,a').fn(t => {\n        t.fail('goodbye');\n      });\n      return g;\n    })(),\n  },\n};\n\nclass FakeTestFileLoader extends TestFileLoader {\n  async listing(suite: string): Promise<TestSuiteListing> {\n    return listingData[suite];\n  }\n\n  async import(path: string): Promise<SpecFile> {\n    assert(path in specsData, '[test] mock file ' + path + ' does not exist');\n    return specsData[path];\n  }\n}\n\nclass LoadingTest extends UnitTest {\n  loader: FakeTestFileLoader = new FakeTestFileLoader();\n  events: (string | null)[] = [];\n  private isListenersAdded = false;\n\n  collectEvents(): void {\n    this.events = [];\n    if (!this.isListenersAdded) {\n      this.isListenersAdded = true;\n      this.loader.addEventListener('import', ev => this.events.push(ev.data.url));\n      this.loader.addEventListener('finish', ev => this.events.push(null));\n    }\n  }\n\n  async load(query: string): Promise<TestTreeLeaf[]> {\n    return Array.from(await this.loader.loadCases(parseQuery(query)));\n  }\n\n  async loadNames(query: string): Promise<string[]> {\n    return (await this.load(query)).map(c => c.query.toString());\n  }\n}\n\nexport const g = makeTestGroup(LoadingTest);\n\ng.test('suite').fn(async t => {\n  t.shouldReject('Error', t.load('suite1'));\n  t.shouldReject('Error', t.load('suite1:'));\n});\n\ng.test('group').fn(async t => {\n  t.collectEvents();\n  t.expect((await t.load('suite1:*')).length === 8);\n  t.expect(\n    objectEquals(t.events, [\n      'suite1/foo.spec.js',\n      'suite1/bar/biz.spec.js',\n      'suite1/bar/buzz/buzz.spec.js',\n      'suite1/baz.spec.js',\n      null,\n    ])\n  );\n\n  t.collectEvents();\n  t.expect((await t.load('suite1:foo,*')).length === 3); // x:foo,* matches x:foo:\n  t.expect(objectEquals(t.events, ['suite1/foo.spec.js', null]));\n\n  t.collectEvents();\n  t.expect((await t.load('suite1:bar,*')).length === 1);\n  t.expect(\n    objectEquals(t.events, ['suite1/bar/biz.spec.js', 'suite1/bar/buzz/buzz.spec.js', null])\n  );\n\n  t.collectEvents();\n  t.expect((await t.load('suite1:bar,buzz,buzz,*')).length === 1);\n  t.expect(objectEquals(t.events, ['suite1/bar/buzz/buzz.spec.js', null]));\n\n  t.shouldReject('Error', t.load('suite1:f*'));\n\n  {\n    const s = new TestQueryMultiFile('suite1', ['bar', 'buzz']).toString();\n    t.collectEvents();\n    t.expect((await t.load(s)).length === 1);\n    t.expect(objectEquals(t.events, ['suite1/bar/buzz/buzz.spec.js', null]));\n  }\n});\n\ng.test('test').fn(async t => {\n  t.shouldReject('Error', t.load('suite1::'));\n  t.shouldReject('Error', t.load('suite1:bar:'));\n  t.shouldReject('Error', t.load('suite1:bar,:'));\n\n  t.shouldReject('Error', t.load('suite1::*'));\n  t.shouldReject('Error', t.load('suite1:bar,:*'));\n  t.shouldReject('Error', t.load('suite1:bar:*'));\n\n  t.expect((await t.load('suite1:foo:*')).length === 3);\n  t.expect((await t.load('suite1:bar,buzz,buzz:*')).length === 1);\n  t.expect((await t.load('suite1:baz:*')).length === 4);\n\n  t.expect((await t.load('suite2:foof:bluh,*')).length === 1);\n  t.expect((await t.load('suite2:foof:bluh,a,*')).length === 1);\n\n  {\n    const s = new TestQueryMultiTest('suite2', ['foof'], ['bluh']).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n});\n\ng.test('case').fn(async t => {\n  t.shouldReject('Error', t.load('suite1:foo::'));\n  t.shouldReject('Error', t.load('suite1:bar:zed,:'));\n\n  t.shouldReject('Error', t.load('suite1:foo:h*'));\n\n  t.shouldReject('Error', t.load('suite1:foo::*'));\n  t.shouldReject('Error', t.load('suite1:baz::*'));\n  t.shouldReject('Error', t.load('suite1:baz:zed,:*'));\n\n  t.shouldReject('Error', t.load('suite1:baz:zed:'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1;b=2*'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1;b=2;'));\n  t.shouldReject('SyntaxError', t.load('suite1:baz:zed:a=1;b=2,')); // tries to parse '2,' as JSON\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1,b=2')); // '=' not allowed in value '1,b=2'\n  t.shouldReject('Error', t.load('suite1:baz:zed:b=2*'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:b=2;a=1;_c=0'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1,*'));\n\n  t.expect((await t.load('suite1:baz:zed:*')).length === 2);\n  t.expect((await t.load('suite1:baz:zed:a=1;*')).length === 2);\n  t.expect((await t.load('suite1:baz:zed:a=1;b=2')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:a=1;b=2;*')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=2;*')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=2;a=1')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=2;a=1;*')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=3;a=1')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:a=1;b=3')).length === 1);\n  t.expect((await t.load('suite1:foo:hello:')).length === 1);\n\n  {\n    const s = new TestQueryMultiCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n  {\n    const s = new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n});\n\nasync function runTestcase(\n  t: Fixture,\n  log: Logger,\n  testcases: TestTreeLeaf[],\n  i: number,\n  query: TestQuery,\n  expectations: TestQueryWithExpectation[],\n  status: Status,\n  logs: (s: string[]) => boolean\n) {\n  t.expect(objectEquals(testcases[i].query, query));\n  const name = testcases[i].query.toString();\n  const [rec, res] = log.record(name);\n  await testcases[i].run(rec, expectations);\n\n  t.expect(log.results.get(name) === res);\n  t.expect(res.status === status);\n  t.expect(res.timems >= 0);\n  assert(res.logs !== undefined); // only undefined while pending\n  t.expect(logs(res.logs.map(l => JSON.stringify(l))));\n}\n\ng.test('end2end').fn(async t => {\n  const l = await t.load('suite2:foof:*');\n  assert(l.length === 3, 'listing length');\n\n  const log = new Logger({ overrideDebugMode: true });\n\n  await runTestcase(\n    t,\n    log,\n    l,\n    0,\n    new TestQuerySingleCase('suite2', ['foof'], ['blah'], {}),\n    [],\n    'pass',\n    logs => objectEquals(logs, ['\"DEBUG: OK\"'])\n  );\n  await runTestcase(\n    t,\n    log,\n    l,\n    1,\n    new TestQuerySingleCase('suite2', ['foof'], ['bleh'], { a: 1 }),\n    [],\n    'pass',\n    logs => objectEquals(logs, ['\"DEBUG: OK\"', '\"DEBUG: OK\"'])\n  );\n  await runTestcase(\n    t,\n    log,\n    l,\n    2,\n    new TestQuerySingleCase('suite2', ['foof'], ['bluh', 'a'], {}),\n    [],\n    'fail',\n    logs =>\n      logs.length === 1 &&\n      logs[0].startsWith('\"EXPECTATION FAILED: goodbye\\\\n') &&\n      logs[0].indexOf('loaders_and_trees.spec.') !== -1\n  );\n});\n\ng.test('expectations,single_case').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n\n  // Single-case. Covers one case.\n  const zedExpectationsSkipA1B2 = [\n    {\n      query: new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipA1B2,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipA1B2,\n    'pass',\n    logs => logs.length === 0\n  );\n});\n\ng.test('expectations,single_case,none').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n  // Single-case. Doesn't cover any cases.\n  const zedExpectationsSkipA1B0 = [\n    {\n      query: new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 0 }),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipA1B0,\n    'pass',\n    logs => logs.length === 0\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipA1B0,\n    'pass',\n    logs => logs.length === 0\n  );\n});\n\ng.test('expectations,multi_case').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n  // Multi-case, not all cases covered.\n  const zedExpectationsSkipB3 = [\n    {\n      query: new TestQueryMultiCase('suite1', ['baz'], ['zed'], { b: 3 }),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipB3,\n    'pass',\n    logs => logs.length === 0\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipB3,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,multi_case_all').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n  // Multi-case, all cases covered.\n  const zedExpectationsSkipA1 = [\n    {\n      query: new TestQueryMultiCase('suite1', ['baz'], ['zed'], { a: 1 }),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipA1,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipA1,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,multi_case_none').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const zedCases = await t.load('suite1:baz:zed:*');\n  // Multi-case, no params, all cases covered.\n  const zedExpectationsSkipZed = [\n    {\n      query: new TestQueryMultiCase('suite1', ['baz'], ['zed'], {}),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    0,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    zedExpectationsSkipZed,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    zedCases,\n    1,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 3 }),\n    zedExpectationsSkipZed,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,multi_test').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite1Cases = await t.load('suite1:*');\n\n  // Multi-test, all cases covered.\n  const expectationsSkipAllInBaz = [\n    {\n      query: new TestQueryMultiTest('suite1', ['baz'], []),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    4,\n    new TestQuerySingleCase('suite1', ['baz'], ['wye'], {}),\n    expectationsSkipAllInBaz,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    6,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    expectationsSkipAllInBaz,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,multi_test,none').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite1Cases = await t.load('suite1:*');\n\n  // Multi-test, no cases covered.\n  const expectationsSkipAllInFoo = [\n    {\n      query: new TestQueryMultiTest('suite1', ['foo'], []),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    4,\n    new TestQuerySingleCase('suite1', ['baz'], ['wye'], {}),\n    expectationsSkipAllInFoo,\n    'pass',\n    logs => logs.length === 0\n  );\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    6,\n    new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }),\n    expectationsSkipAllInFoo,\n    'pass',\n    logs => logs.length === 0\n  );\n});\n\ng.test('expectations,multi_file').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite1Cases = await t.load('suite1:*');\n\n  // Multi-file\n  const expectationsSkipAll = [\n    {\n      query: new TestQueryMultiFile('suite1', []),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    0,\n    new TestQuerySingleCase('suite1', ['foo'], ['hello'], {}),\n    expectationsSkipAll,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    suite1Cases,\n    3,\n    new TestQuerySingleCase('suite1', ['bar', 'buzz', 'buzz'], ['zap'], {}),\n    expectationsSkipAll,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,catches_failure').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite2Cases = await t.load('suite2:*');\n\n  // Catches failure\n  const expectedFailures = [\n    {\n      query: new TestQueryMultiCase('suite2', ['foof'], ['bluh', 'a'], {}),\n      expectation: 'fail' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    0,\n    new TestQuerySingleCase('suite2', ['foof'], ['blah'], {}),\n    expectedFailures,\n    'pass',\n    logs => objectEquals(logs, ['\"DEBUG: OK\"'])\n  );\n\n  // Status is passed, but failure is logged.\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    2,\n    new TestQuerySingleCase('suite2', ['foof'], ['bluh', 'a'], {}),\n    expectedFailures,\n    'pass',\n    logs => logs.length === 1 && logs[0].startsWith('\"EXPECTATION FAILED: goodbye\\\\n')\n  );\n});\n\ng.test('expectations,skip_dominates_failure').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite2Cases = await t.load('suite2:*');\n\n  const expectedFailures = [\n    {\n      query: new TestQueryMultiCase('suite2', ['foof'], ['bluh', 'a'], {}),\n      expectation: 'fail' as const,\n    },\n    {\n      query: new TestQueryMultiCase('suite2', ['foof'], ['bluh', 'a'], {}),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    2,\n    new TestQuerySingleCase('suite2', ['foof'], ['bluh', 'a'], {}),\n    expectedFailures,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n});\n\ng.test('expectations,skip_inside_failure').fn(async t => {\n  const log = new Logger({ overrideDebugMode: true });\n  const suite2Cases = await t.load('suite2:*');\n\n  const expectedFailures = [\n    {\n      query: new TestQueryMultiFile('suite2', []),\n      expectation: 'fail' as const,\n    },\n    {\n      query: new TestQueryMultiCase('suite2', ['foof'], ['blah'], {}),\n      expectation: 'skip' as const,\n    },\n  ];\n\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    0,\n    new TestQuerySingleCase('suite2', ['foof'], ['blah'], {}),\n    expectedFailures,\n    'skip',\n    logs => logs.length === 1 && logs[0].startsWith('\"SKIP: Skipped by expectations\"')\n  );\n\n  await runTestcase(\n    t,\n    log,\n    suite2Cases,\n    2,\n    new TestQuerySingleCase('suite2', ['foof'], ['bluh', 'a'], {}),\n    expectedFailures,\n    'pass',\n    logs => logs.length === 1 && logs[0].startsWith('\"EXPECTATION FAILED: goodbye\\\\n')\n  );\n});\n\nasync function testIterateCollapsed(\n  t: LoadingTest,\n  alwaysExpandThroughLevel: ExpandThroughLevel,\n  expectations: string[],\n  expectedResult: 'throws' | string[] | [string, number | undefined][],\n  includeEmptySubtrees = false\n) {\n  t.debug(`expandThrough=${alwaysExpandThroughLevel} expectations=${expectations}`);\n  const treePromise = t.loader.loadTree(new TestQueryMultiFile('suite1', []), expectations);\n  if (expectedResult === 'throws') {\n    t.shouldReject('Error', treePromise, 'loadTree should have thrown Error');\n    return;\n  }\n  const tree = await treePromise;\n  const actualIter = tree.iterateCollapsedNodes({\n    includeEmptySubtrees,\n    alwaysExpandThroughLevel,\n  });\n  const testingTODOs = expectedResult.length > 0 && expectedResult[0] instanceof Array;\n  const actual = Array.from(actualIter, ({ query, subtreeCounts }) =>\n    testingTODOs ? [query.toString(), subtreeCounts?.nodesWithTODO] : query.toString()\n  );\n  if (!objectEquals(actual, expectedResult)) {\n    t.fail(\n      `iterateCollapsed failed:\n  got ${JSON.stringify(actual)}\n  exp ${JSON.stringify(expectedResult)}\n${tree.toString()}`\n    );\n  }\n}\n\ng.test('print').fn(async t => {\n  const tree = await t.loader.loadTree(new TestQueryMultiFile('suite1', []));\n  tree.toString();\n});\n\ng.test('iterateCollapsed').fn(async t => {\n  await testIterateCollapsed(\n    t,\n    1,\n    [],\n    [\n      ['suite1:foo:*', 1], // to-do propagated up from foo:hola\n      ['suite1:bar,buzz,buzz:*', 1], // to-do in file description\n      ['suite1:baz:*', 0],\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    [],\n    [\n      ['suite1:foo:hello:*', 0],\n      ['suite1:foo:bonjour:*', 0],\n      ['suite1:foo:hola:*', 1], // to-do in test description\n      ['suite1:bar,buzz,buzz:zap:*', 0],\n      ['suite1:baz:wye:*', 0],\n      ['suite1:baz:zed:*', 0],\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    3,\n    [],\n    [\n      ['suite1:foo:hello:', undefined],\n      ['suite1:foo:bonjour:', undefined],\n      ['suite1:foo:hola:', undefined],\n      ['suite1:bar,buzz,buzz:zap:', undefined],\n      ['suite1:baz:wye:', undefined],\n      ['suite1:baz:wye:x=1', undefined],\n      ['suite1:baz:zed:a=1;b=2', undefined],\n      ['suite1:baz:zed:b=3;a=1', undefined],\n    ]\n  );\n\n  // Expectations lists that have no effect\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:foo:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:*']\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:bar,buzz,buzz:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:*']\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    ['suite1:baz:wye:*'],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:*',\n      'suite1:baz:zed:*',\n    ]\n  );\n  // Test with includeEmptySubtrees=true\n  await testIterateCollapsed(\n    t,\n    1,\n    [],\n    [\n      'suite1:foo:*',\n      'suite1:bar,biz:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:*',\n      'suite1:empty,*',\n    ],\n    true\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    [],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,biz:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:*',\n      'suite1:baz:zed:*',\n      'suite1:empty,*',\n    ],\n    true\n  );\n\n  // Expectations lists that have some effect\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:wye:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:wye:*', 'suite1:baz:zed,*']\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:zed:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:wye,*', 'suite1:baz:zed:*']\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:wye:*', 'suite1:baz:zed:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:wye:*', 'suite1:baz:zed:*']\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:wye:'],\n    [\n      'suite1:foo:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed,*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:baz:wye:x=1'],\n    [\n      'suite1:foo:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1',\n      'suite1:baz:zed,*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    1,\n    ['suite1:foo:*', 'suite1:baz:wye:'],\n    [\n      'suite1:foo:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed,*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    ['suite1:baz:wye:'],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed:*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    ['suite1:baz:wye:x=1'],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1',\n      'suite1:baz:zed:*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    2,\n    ['suite1:foo:hello:*', 'suite1:baz:wye:'],\n    [\n      'suite1:foo:hello:*',\n      'suite1:foo:bonjour:*',\n      'suite1:foo:hola:*',\n      'suite1:bar,buzz,buzz:zap:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed:*',\n    ]\n  );\n\n  // Invalid expectation queries\n  await testIterateCollapsed(t, 1, ['*'], 'throws');\n  await testIterateCollapsed(t, 1, ['garbage'], 'throws');\n  await testIterateCollapsed(t, 1, ['garbage*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:foo*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:foo:he*'], 'throws');\n\n  // Valid expectation queries but they don't match anything\n  await testIterateCollapsed(t, 1, ['garbage:*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:doesntexist:*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite2:foo:*'], 'throws');\n  // Can't expand subqueries bigger than one file.\n  await testIterateCollapsed(t, 1, ['suite1:*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:bar,*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:bar:hello,*'], 'throws');\n  await testIterateCollapsed(t, 1, ['suite1:baz,*'], 'throws');\n});\n"],"file":"loaders_and_trees.spec.js"}