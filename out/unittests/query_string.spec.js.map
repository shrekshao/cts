{"version":3,"sources":["../../src/unittests/query_string.spec.ts"],"names":["description","makeTestGroup","compareQueries","Ordering","TestQuerySingleCase","TestQueryMultiCase","TestQueryMultiTest","TestQueryMultiFile","relativeQueryString","UnitTest","T","expectQueryString","q","exp","s","toString","expect","expectRelativeQueryString","parent","child","Equal","shouldThrow","g","test","fn","t","f","_pri1","x","_pri2","p","a","h"],"mappings":";AAAA;AACA,GADA,OAAO,MAAMA,WAAW,GAAI;AAC5B;AACA,CAFO,CAIP,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,qCAAzC;AACA;;AAEEC,mBAFF;AAGEC,kBAHF;AAIEC,kBAJF;AAKEC,kBALF;AAMEC,mBANF;AAOO,mCAPP;;AASA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,MAAMC,CAAN,SAAgBD,QAAhB,CAAyB;AACvBE,EAAAA,iBAAiB,CAACC,CAAD,EAAeC,GAAf,EAAkC;AACjD,UAAMC,CAAC,GAAGF,CAAC,CAACG,QAAF,EAAV;AACA,SAAKC,MAAL,CAAYF,CAAC,KAAKD,GAAlB,EAAwB,OAAMC,CAAE,aAAYD,GAAI,EAAhD;AACD;;AAEDI,EAAAA,yBAAyB,CAACC,MAAD,EAAoBC,KAApB,EAAsCN,GAAtC,EAAyD;AAChF,UAAMC,CAAC,GAAGN,mBAAmB,CAACU,MAAD,EAASC,KAAT,CAA7B;AACA,SAAKH,MAAL,CAAYF,CAAC,KAAKD,GAAlB,EAAwB,OAAMC,CAAE,aAAYD,GAAI,EAAhD;;AAEA,QAAIX,cAAc,CAACgB,MAAD,EAASC,KAAT,CAAd,KAAkChB,QAAQ,CAACiB,KAA/C,EAAsD;AACpD;AACA,WAAKC,WAAL,CAAiB,OAAjB,EAA0B,MAAM;AAC9Bb,QAAAA,mBAAmB,CAACW,KAAD,EAAQD,MAAR,CAAnB;AACD,OAFD;AAGD;AACF,GAhBsB;;;AAmBzB,OAAO,MAAMI,CAAC,GAAGrB,aAAa,CAACS,CAAD,CAAvB;;AAEPY,CAAC,CAACC,IAAF,CAAO,4BAAP,EAAqCC,EAArC,CAAwCC,CAAC,IAAI;AAC3CA,EAAAA,CAAC,CAACd,iBAAF;AACE,MAAIP,mBAAJ,CAAwB,GAAxB,EAA6B,CAAC,KAAD,EAAQ,KAAR,CAA7B,EAA6C,CAAC,KAAD,EAAQ,KAAR,CAA7C,EAA6D;AAC3DsB,IAAAA,CAAC,EAAE,GADwD;AAE3DC,IAAAA,KAAK,EAAE,CAFoD;AAG3DC,IAAAA,CAAC,EAAE,CAHwD;AAI3DC,IAAAA,KAAK,EAAE,CAJoD,EAA7D,CADF;;AAOE,+BAPF;;AASD,CAVD;;AAYAP,CAAC,CAACC,IAAF,CAAO,iCAAP,EAA0CC,EAA1C,CAA6CC,CAAC,IAAI;AAChDA,EAAAA,CAAC,CAACd,iBAAF;AACE,MAAIP,mBAAJ,CAAwB,GAAxB,EAA6B,CAAC,KAAD,EAAQ,KAAR,CAA7B,EAA6C,CAAC,KAAD,EAAQ,KAAR,CAA7C,EAA6D;AAC3DsB,IAAAA,CAAC,EAAE,GADwD;AAE3DE,IAAAA,CAAC,EAAE,EAAEE,CAAC,EAAE,CAAL,EAAQlB,CAAC,EAAE,GAAX,EAFwD,EAA7D,CADF;;AAKE,6CALF;;AAOD,CARD;;AAUAU,CAAC,CAACC,IAAF,CAAO,2BAAP,EAAoCC,EAApC,CAAuCC,CAAC,IAAI;AAC1CA,EAAAA,CAAC,CAACd,iBAAF;AACE,MAAIN,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,KAAD,EAAQ,KAAR,CAA5B,EAA4C,CAAC,KAAD,EAAQ,KAAR,CAA5C,EAA4D;AAC1DqB,IAAAA,CAAC,EAAE,GADuD;AAE1DC,IAAAA,KAAK,EAAE,CAFmD;AAG1DI,IAAAA,CAAC,EAAE,CAHuD;AAI1DF,IAAAA,KAAK,EAAE,CAJmD,EAA5D,CADF;;AAOE,iCAPF;;;AAUAJ,EAAAA,CAAC,CAACd,iBAAF;AACE,MAAIN,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,KAAD,EAAQ,KAAR,CAA5B,EAA4C,CAAC,KAAD,EAAQ,KAAR,CAA5C,EAA4D,EAA5D,CADF;AAEE,uBAFF;;AAID,CAfD;;AAiBAiB,CAAC,CAACC,IAAF,CAAO,2BAAP,EAAoCC,EAApC,CAAuCC,CAAC,IAAI;AAC1CA,EAAAA,CAAC,CAACd,iBAAF;AACE,MAAIL,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,KAAD,EAAQ,KAAR,CAA5B,EAA4C,CAAC,KAAD,EAAQ,KAAR,CAA5C,CADF;AAEE,uBAFF;;;AAKAmB,EAAAA,CAAC,CAACd,iBAAF;AACE,MAAIL,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,KAAD,EAAQ,KAAR,CAA5B,EAA4C,EAA5C,CADF,EACmD;AACjD,eAFF;;AAID,CAVD;;AAYAgB,CAAC,CAACC,IAAF,CAAO,2BAAP,EAAoCC,EAApC,CAAuCC,CAAC,IAAI;AAC1CA,EAAAA,CAAC,CAACd,iBAAF;AACE,MAAIJ,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,KAAD,EAAQ,KAAR,CAA5B,CADF,EAC+C;AAC7C,eAFF;;;AAKAkB,EAAAA,CAAC,CAACd,iBAAF;AACE,MAAIJ,kBAAJ,CAAuB,GAAvB,EAA4B,EAA5B,CADF,EACmC;AACjC,OAFF;;AAID,CAVD;;AAYAe,CAAC,CAACC,IAAF,CAAO,oCAAP,EAA6CC,EAA7C,CAAgDC,CAAC,IAAI;AACnD;AACAA,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,EAA5B,CADF,EACmC;AACjC,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,EAA5B,CAFF,EAEmC;AACjC,IAHF;;AAKAkB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,CADF,EAC2C;AACzC,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,CAFF,EAE2C;AACzC,IAHF;;AAKAkB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIX,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CADF,EACuD;AACrD,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CAFF,EAEuD;AACrD,IAHF;;AAKAmB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIZ,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAApD,CADF,EACiE;AAC/D,MAAIrB,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAApD,CAFF,EAEiE;AAC/D,IAHF;;AAKAD,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIb,mBAAJ,CAAwB,GAAxB,EAA6B,CAAC,GAAD,EAAM,GAAN,CAA7B,EAAyC,CAAC,GAAD,EAAM,GAAN,CAAzC,EAAqD,EAAEsB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAArD,CADF,EACwE;AACtE,MAAIlB,mBAAJ,CAAwB,GAAxB,EAA6B,CAAC,GAAD,EAAM,GAAN,CAA7B,EAAyC,CAAC,GAAD,EAAM,GAAN,CAAzC,EAAqD,EAAEsB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAArD,CAFF,EAEwE;AACtE,IAHF;;;AAMA;AACAG,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,EAA5B,CADF,EACmC;AACjC,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,CAA5B,CAFF,EAEsC;AACpC,QAHF;;AAKAkB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,CAA5B,CADF,EACsC;AACpC,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,CAFF,EAE2C;AACzC,QAHF;;AAKAkB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,CADF,EAC2C;AACzC,MAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,EAAxC,CAFF,EAE+C;AAC7C,MAHF;;AAKAmB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIX,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,EAAxC,CADF,EAC+C;AAC7C,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,CAAxC,CAFF,EAEkD;AAChD,QAHF;;AAKAmB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIX,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,CAAxC,CADF,EACkD;AAChD,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CAFF,EAEuD;AACrD,QAHF;;AAKAmB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIX,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CADF,EACuD;AACrD,MAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAApD,CAFF,EAE2D;AACzD,MAHF;;AAKAoB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIZ,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAApD,CADF,EAC2D;AACzD,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAApD,CAFF,EAEiE;AAC/D,UAHF;;AAKAD,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIZ,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAApD,CADF,EACiE;AAC/D,MAAIrB,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAApD,CAFF,EAEuE;AACrE,UAHF;;AAKAG,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIZ,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAApD,CADF,EACuE;AACrE,MAAIlB,mBAAJ,CAAwB,GAAxB,EAA6B,CAAC,GAAD,EAAM,GAAN,CAA7B,EAAyC,CAAC,GAAD,EAAM,GAAN,CAAzC,EAAqD,EAAEsB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAArD,CAFF,EAEwE;AACtE,IAHF;;;AAMA;AACAG,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,EAA5B,CADF,EACmC;AACjC,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,CAFF,EAE2C;AACzC,UAHF;;AAKAkB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,CADF,EAC2C;AACzC,MAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,CAAxC,CAFF,EAEkD;AAChD,QAHF;;AAKAmB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIX,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,CAAxC,CADF,EACkD;AAChD,MAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAApD,CAFF,EAE2D;AACzD,QAHF;;AAKAoB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIZ,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAApD,CADF,EAC2D;AACzD,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAApD,CAFF,EAEuE;AACrE,cAHF;;AAKAG,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIZ,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAApD,CADF,EACuE;AACrE,MAAIlB,mBAAJ,CAAwB,GAAxB,EAA6B,CAAC,GAAD,EAAM,GAAN,CAA7B,EAAyC,CAAC,GAAD,EAAM,GAAN,CAAzC,EAAqD,EAAEsB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAAcU,CAAC,EAAE,CAAjB,EAArD,CAFF,EAE8E;AAC5E,QAHF;;AAKA;AACAP,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,CAA5B,CADF,EACsC;AACpC,MAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,EAAxC,CAFF,EAE+C;AAC7C,QAHF;;AAKAmB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIX,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,EAAxC,CADF,EAC+C;AAC7C,MAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CAFF,EAEuD;AACrD,UAHF;;AAKAmB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIX,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CADF,EACuD;AACrD,MAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAApD,CAFF,EAEiE;AAC/D,UAHF;;AAKAD,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIZ,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAApD,CADF,EACiE;AAC/D,MAAItB,mBAAJ,CAAwB,GAAxB,EAA6B,CAAC,GAAD,EAAM,GAAN,CAA7B,EAAyC,CAAC,GAAD,EAAM,GAAN,CAAzC,EAAqD,EAAEsB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAArD,CAFF,EAEwE;AACtE,QAHF;;;AAMA;AACAG,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,EAA5B,CADF,EACmC;AACjC,MAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,CAAxC,CAFF,EAEkD;AAChD,YAHF;;AAKAmB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIX,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,CAAxC,CADF,EACkD;AAChD,MAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAApD,CAFF,EAEuE;AACrE,gBAHF;;AAKA;AACAG,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIV,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,CAA5B,CADF,EACsC;AACpC,MAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CAFF,EAEuD;AACrD,YAHF;;AAKAmB,EAAAA,CAAC,CAACR,yBAAF;AACE,MAAIX,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CADF,EACuD;AACrD,MAAIF,mBAAJ,CAAwB,GAAxB,EAA6B,CAAC,GAAD,EAAM,GAAN,CAA7B,EAAyC,CAAC,GAAD,EAAM,GAAN,CAAzC,EAAqD,EAAEsB,CAAC,EAAE,CAAL,EAAQJ,CAAC,EAAE,CAAX,EAArD,CAFF,EAEwE;AACtE,YAHF;;AAKD,CAjJD;;AAmJAA,CAAC,CAACC,IAAF,CAAO,+BAAP,EAAwCC,EAAxC,CAA2CC,CAAC,IAAI;AAC9CA,EAAAA,CAAC,CAACJ,WAAF,CAAc,OAAd,EAAuB,MAAM;AAC3Bb,IAAAA,mBAAmB;AACjB,QAAID,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,CADiB,EACwB;AACzC,QAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,CAFiB,CAEuB;AAFvB,KAAnB;AAID,GALD;AAMAkB,EAAAA,CAAC,CAACJ,WAAF,CAAc,OAAd,EAAuB,MAAM;AAC3Bb,IAAAA,mBAAmB;AACjB,QAAIF,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CADiB,EACoC;AACrD,QAAIA,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,CAFiB,CAEmC;AAFnC,KAAnB;AAID,GALD;AAMAmB,EAAAA,CAAC,CAACJ,WAAF,CAAc,OAAd,EAAuB,MAAM;AAC3Bb,IAAAA,mBAAmB;AACjB,QAAIH,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAApD,CADiB,EAC8C;AAC/D,QAAIrB,kBAAJ,CAAuB,GAAvB,EAA4B,CAAC,GAAD,EAAM,GAAN,CAA5B,EAAwC,CAAC,GAAD,EAAM,GAAN,CAAxC,EAAoD,EAAEqB,CAAC,EAAE,CAAL,EAApD,CAFiB,CAE6C;AAF7C,KAAnB;AAID,GALD;AAMD,CAnBD","sourcesContent":["export const description = `\nUnit tests for TestQuery strings.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { compareQueries, Ordering } from '../common/internal/query/compare.js';\nimport {\n  TestQuery,\n  TestQuerySingleCase,\n  TestQueryMultiCase,\n  TestQueryMultiTest,\n  TestQueryMultiFile,\n  relativeQueryString,\n} from '../common/internal/query/query.js';\n\nimport { UnitTest } from './unit_test.js';\n\nclass T extends UnitTest {\n  expectQueryString(q: TestQuery, exp: string): void {\n    const s = q.toString();\n    this.expect(s === exp, `got ${s} expected ${exp}`);\n  }\n\n  expectRelativeQueryString(parent: TestQuery, child: TestQuery, exp: string): void {\n    const s = relativeQueryString(parent, child);\n    this.expect(s === exp, `got ${s} expected ${exp}`);\n\n    if (compareQueries(parent, child) !== Ordering.Equal) {\n      // Test in reverse\n      this.shouldThrow('Error', () => {\n        relativeQueryString(child, parent);\n      });\n    }\n  }\n}\n\nexport const g = makeTestGroup(T);\n\ng.test('stringifyQuery,single_case').fn(t => {\n  t.expectQueryString(\n    new TestQuerySingleCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {\n      f: 'g',\n      _pri1: 0,\n      x: 3,\n      _pri2: 1,\n    }),\n    'a:b_1,2_c:d_3,4_e:f=\"g\";x=3'\n  );\n});\n\ng.test('stringifyQuery,single_case,json').fn(t => {\n  t.expectQueryString(\n    new TestQuerySingleCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {\n      f: 'g',\n      x: { p: 2, q: 'Q' },\n    }),\n    'a:b_1,2_c:d_3,4_e:f=\"g\";x={\"p\":2,\"q\":\"Q\"}'\n  );\n});\n\ng.test('stringifyQuery,multi_case').fn(t => {\n  t.expectQueryString(\n    new TestQueryMultiCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {\n      f: 'g',\n      _pri1: 0,\n      a: 3,\n      _pri2: 1,\n    }),\n    'a:b_1,2_c:d_3,4_e:f=\"g\";a=3;*'\n  );\n\n  t.expectQueryString(\n    new TestQueryMultiCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {}),\n    'a:b_1,2_c:d_3,4_e:*'\n  );\n});\n\ng.test('stringifyQuery,multi_test').fn(t => {\n  t.expectQueryString(\n    new TestQueryMultiTest('a', ['b_1', '2_c'], ['d_3', '4_e']),\n    'a:b_1,2_c:d_3,4_e,*'\n  );\n\n  t.expectQueryString(\n    new TestQueryMultiTest('a', ['b_1', '2_c'], []), //\n    'a:b_1,2_c:*'\n  );\n});\n\ng.test('stringifyQuery,multi_file').fn(t => {\n  t.expectQueryString(\n    new TestQueryMultiFile('a', ['b_1', '2_c']), //\n    'a:b_1,2_c,*'\n  );\n\n  t.expectQueryString(\n    new TestQueryMultiFile('a', []), //\n    'a:*'\n  );\n});\n\ng.test('relativeQueryString,equal_or_child').fn(t => {\n  // Depth difference = 0\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', []), //\n    new TestQueryMultiFile('a', []), //\n    ''\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    ''\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    ''\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    ''\n  );\n  t.expectRelativeQueryString(\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ''\n  );\n\n  // Depth difference = 1\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', []), //\n    new TestQueryMultiFile('a', ['b']), //\n    ':b,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b']), //\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    ',c,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    new TestQueryMultiTest('a', ['b', 'c'], []), //\n    ':*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], []), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    ':d,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    ',e,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], {}), //\n    ':*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], {}), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    ':f=0;*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ';g=1;*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ''\n  );\n\n  // Depth difference = 2\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', []), //\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    ':b,c,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b', 'c']), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    ':d,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], {}), //\n    ',e:*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], {}), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ':f=0;g=1;*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1, h: 2 }), //\n    ';h=2'\n  );\n  // Depth difference = 2\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b']), //\n    new TestQueryMultiTest('a', ['b', 'c'], []), //\n    ',c:*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], []), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    ':d,e,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    ':f=0;*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ';g=1'\n  );\n\n  // Depth difference = 4\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', []), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    ':b,c:d,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d']), //\n    new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ',e:f=0;g=1;*'\n  );\n  // Depth difference = 4\n  t.expectRelativeQueryString(\n    new TestQueryMultiFile('a', ['b']), //\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    ',c:d,e,*'\n  );\n  t.expectRelativeQueryString(\n    new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']), //\n    new TestQuerySingleCase('a', ['b', 'c'], ['d', 'e'], { f: 0, g: 1 }), //\n    ':f=0;g=1'\n  );\n});\n\ng.test('relativeQueryString,unrelated').fn(t => {\n  t.shouldThrow('Error', () => {\n    relativeQueryString(\n      new TestQueryMultiFile('a', ['b', 'x']), //\n      new TestQueryMultiFile('a', ['b', 'c']) //\n    );\n  });\n  t.shouldThrow('Error', () => {\n    relativeQueryString(\n      new TestQueryMultiTest('a', ['b', 'c'], ['d', 'x']), //\n      new TestQueryMultiTest('a', ['b', 'c'], ['d', 'e']) //\n    );\n  });\n  t.shouldThrow('Error', () => {\n    relativeQueryString(\n      new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 0 }), //\n      new TestQueryMultiCase('a', ['b', 'c'], ['d', 'e'], { f: 1 }) //\n    );\n  });\n});\n"],"file":"query_string.spec.js"}