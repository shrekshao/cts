{"version":3,"sources":["../../src/unittests/async_expectations.spec.ts"],"names":["description","makeTestGroup","makeTestGroupForUnitTesting","assert","objectEquals","rejectOnTimeout","resolveOnTimeout","TestGroupTest","UnitTest","FixtureToTest","immediateAsyncExpectation","fn","eventualAsyncExpectation","g","test","t0","runState","runStateIndex","t","idx","resultsPromise","run","statuses","Array","from","map","v","status","toString"],"mappings":"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","sourcesContent":["export const description = `\nTests for eventualAsyncExpectation and immediateAsyncExpectation.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { makeTestGroupForUnitTesting } from '../common/internal/test_group.js';\nimport { assert, objectEquals, rejectOnTimeout, resolveOnTimeout } from '../common/util/util.js';\n\nimport { TestGroupTest } from './test_group_test.js';\nimport { UnitTest } from './unit_test.js';\n\nclass FixtureToTest extends UnitTest {\n  public immediateAsyncExpectation<T>(fn: () => Promise<T>): Promise<T> {\n    return super.immediateAsyncExpectation(fn);\n  }\n  public eventualAsyncExpectation<T>(fn: (niceStack: Error) => Promise<T>): void {\n    super.eventualAsyncExpectation(fn);\n  }\n}\n\nexport const g = makeTestGroup(TestGroupTest);\n\ng.test('eventual').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(FixtureToTest);\n\n  const runState = [0, 0, 0, 0];\n  let runStateIndex = 0;\n\n  // Should pass in state 3\n  g.test('noawait,resolve').fn(t => {\n    const idx = runStateIndex++;\n\n    runState[idx] = 1;\n    t.eventualAsyncExpectation(async () => {\n      runState[idx] = 2;\n      await resolveOnTimeout(50);\n      runState[idx] = 3;\n    });\n    runState[idx] = 4;\n  });\n\n  // Should fail in state 4\n  g.test('noawait,reject').fn(t => {\n    const idx = runStateIndex++;\n\n    runState[idx] = 1;\n    t.eventualAsyncExpectation(async () => {\n      runState[idx] = 2;\n      await rejectOnTimeout(50, 'rejected 1');\n      runState[idx] = 3;\n    });\n    runState[idx] = 4;\n  });\n\n  // Should fail in state 3\n  g.test('nested,2').fn(t => {\n    const idx = runStateIndex++;\n\n    runState[idx] = 1;\n    t.eventualAsyncExpectation(async () => {\n      runState[idx] = 2;\n      await resolveOnTimeout(50); // Wait a bit before adding a new eventualAsyncExpectation\n      t.eventualAsyncExpectation(() => rejectOnTimeout(100, 'inner rejected 1'));\n      runState[idx] = 3;\n    });\n    runState[idx] = 4;\n  });\n\n  // Should fail in state 3\n  g.test('nested,4').fn(t => {\n    const idx = runStateIndex++;\n\n    runState[idx] = 1;\n    t.eventualAsyncExpectation(async () => {\n      t.eventualAsyncExpectation(async () => {\n        t.eventualAsyncExpectation(async () => {\n          runState[idx] = 2;\n          await resolveOnTimeout(50); // Wait a bit before adding a new eventualAsyncExpectation\n          t.eventualAsyncExpectation(() => rejectOnTimeout(100, 'inner rejected 2'));\n          runState[idx] = 3;\n        });\n      });\n    });\n    runState[idx] = 4;\n  });\n\n  const resultsPromise = t0.run(g);\n  assert(objectEquals(runState, [0, 0, 0, 0]));\n\n  const statuses = Array.from(await resultsPromise).map(([, v]) => v.status);\n  assert(objectEquals(runState, [3, 4, 3, 3]), () => runState.toString());\n  assert(objectEquals(statuses, ['pass', 'fail', 'fail', 'fail']), () => statuses.toString());\n});\n\ng.test('immediate').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(FixtureToTest);\n\n  const runState = [0, 0, 0, 0, 0];\n\n  g.test('noawait,resolve').fn(t => {\n    runState[0] = 1;\n    void t.immediateAsyncExpectation(async () => {\n      runState[0] = 2;\n      await resolveOnTimeout(50);\n      runState[0] = 3;\n    });\n    runState[0] = 4;\n  });\n\n  // (Can't g.test('noawait,reject') because it causes a top-level Promise\n  // rejection which crashes Node.)\n\n  g.test('await,resolve').fn(async t => {\n    runState[1] = 1;\n    await t.immediateAsyncExpectation(async () => {\n      runState[1] = 2;\n      await resolveOnTimeout(50);\n      runState[1] = 3;\n    });\n  });\n\n  g.test('await,reject').fn(async t => {\n    runState[2] = 1;\n    await t.immediateAsyncExpectation(async () => {\n      runState[2] = 2;\n      await rejectOnTimeout(50, 'rejected 3');\n      runState[2] = 3;\n    });\n  });\n\n  // (Similarly can't test 'nested,noawait'.)\n\n  g.test('nested,await,2').fn(t => {\n    runState[3] = 1;\n    t.eventualAsyncExpectation(async () => {\n      runState[3] = 2;\n      await resolveOnTimeout(50); // Wait a bit before adding a new immediateAsyncExpectation\n      runState[3] = 3;\n      await t.immediateAsyncExpectation(() => rejectOnTimeout(100, 'inner rejected 3'));\n      runState[3] = 5;\n    });\n    runState[3] = 4;\n  });\n\n  g.test('nested,await,4').fn(t => {\n    runState[4] = 1;\n    t.eventualAsyncExpectation(async () => {\n      t.eventualAsyncExpectation(async () => {\n        t.eventualAsyncExpectation(async () => {\n          runState[4] = 2;\n          await resolveOnTimeout(50); // Wait a bit before adding a new immediateAsyncExpectation\n          runState[4] = 3;\n          await t.immediateAsyncExpectation(() => rejectOnTimeout(100, 'inner rejected 3'));\n          runState[4] = 5;\n        });\n      });\n    });\n    runState[4] = 4;\n  });\n\n  const resultsPromise = t0.run(g);\n  assert(objectEquals(runState, [0, 0, 0, 0, 0]));\n\n  const statuses = Array.from(await resultsPromise).map(([, v]) => v.status);\n  assert(objectEquals(runState, [3, 3, 2, 3, 3]));\n  assert(objectEquals(statuses, ['fail', 'pass', 'fail', 'fail', 'fail']));\n});\n"],"file":"async_expectations.spec.js"}