{"version":3,"sources":["../../src/unittests/async_expectations.spec.ts"],"names":["description","makeTestGroup","makeTestGroupForUnitTesting","assert","objectEquals","rejectOnTimeout","resolveOnTimeout","TestGroupTest","UnitTest","FixtureToTest","immediateAsyncExpectation","fn","eventualAsyncExpectation","g","test","t0","runState","t","resultsPromise","run","statuses","Array","from","map","v","status"],"mappings":"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","sourcesContent":["export const description = `\nTests for eventualAsyncExpectation and immediateAsyncExpectation.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { makeTestGroupForUnitTesting } from '../common/internal/test_group.js';\nimport { assert, objectEquals, rejectOnTimeout, resolveOnTimeout } from '../common/util/util.js';\n\nimport { TestGroupTest } from './test_group_test.js';\nimport { UnitTest } from './unit_test.js';\n\nclass FixtureToTest extends UnitTest {\n  public immediateAsyncExpectation<T>(fn: () => Promise<T>): Promise<T> {\n    return super.immediateAsyncExpectation(fn);\n  }\n  public eventualAsyncExpectation<T>(fn: (niceStack: Error) => Promise<T>): Promise<T> {\n    return super.eventualAsyncExpectation(fn);\n  }\n}\n\nexport const g = makeTestGroup(TestGroupTest);\n\ng.test('eventual').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(FixtureToTest);\n\n  const runState = [0, 0, 0, 0, 0, 0];\n\n  g.test('noawait,resolve').fn(t => {\n    runState[0] = 1;\n    t.eventualAsyncExpectation(async () => {\n      runState[0] = 2;\n      await resolveOnTimeout(50);\n      runState[0] = 3;\n    });\n    runState[0] = 4;\n  });\n\n  g.test('noawait,reject').fn(t => {\n    runState[1] = 1;\n    t.eventualAsyncExpectation(async () => {\n      runState[1] = 2;\n      await rejectOnTimeout(50, 'rejected 1');\n      runState[1] = 3;\n    });\n    runState[1] = 4;\n  });\n\n  g.test('await,resolve').fn(async t => {\n    runState[2] = 1;\n    await t.eventualAsyncExpectation(async () => {\n      runState[2] = 2;\n      await resolveOnTimeout(50);\n      runState[2] = 3;\n    });\n  });\n\n  g.test('await,reject').fn(async t => {\n    runState[3] = 1;\n    await t.eventualAsyncExpectation(async () => {\n      runState[3] = 2;\n      await rejectOnTimeout(50, 'rejected 2');\n      runState[3] = 3;\n    });\n  });\n\n  g.test('nested,2').fn(t => {\n    runState[4] = 1;\n    t.eventualAsyncExpectation(async () => {\n      runState[4] = 2;\n      await resolveOnTimeout(50); // Wait a bit before adding a new eventualAsyncExpectation\n      t.eventualAsyncExpectation(() => rejectOnTimeout(100, 'inner rejected 1'));\n      runState[4] = 3;\n    });\n    runState[4] = 4;\n  });\n\n  g.test('nested,4').fn(t => {\n    runState[5] = 1;\n    t.eventualAsyncExpectation(async () => {\n      t.eventualAsyncExpectation(async () => {\n        t.eventualAsyncExpectation(async () => {\n          runState[5] = 2;\n          await resolveOnTimeout(50); // Wait a bit before adding a new eventualAsyncExpectation\n          t.eventualAsyncExpectation(() => rejectOnTimeout(100, 'inner rejected 2'));\n          runState[5] = 3;\n        });\n      });\n    });\n    runState[5] = 4;\n  });\n\n  const resultsPromise = t0.run(g);\n  assert(objectEquals(runState, [0, 0, 0, 0, 0, 0]));\n\n  const statuses = Array.from(await resultsPromise).map(([, v]) => v.status);\n  assert(objectEquals(runState, [3, 4, 3, 2, 3, 3]));\n  assert(objectEquals(statuses, ['pass', 'fail', 'pass', 'fail', 'fail', 'fail']));\n});\n\ng.test('immediate').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(FixtureToTest);\n\n  const runState = [0, 0, 0, 0, 0];\n\n  g.test('noawait,resolve').fn(t => {\n    runState[0] = 1;\n    t.immediateAsyncExpectation(async () => {\n      runState[0] = 2;\n      await resolveOnTimeout(50);\n      runState[0] = 3;\n    });\n    runState[0] = 4;\n  });\n\n  // (Can't g.test('noawait,reject') because it causes a top-level Promise\n  // rejection which crashes Node.)\n\n  g.test('await,resolve').fn(async t => {\n    runState[1] = 1;\n    await t.immediateAsyncExpectation(async () => {\n      runState[1] = 2;\n      await resolveOnTimeout(50);\n      runState[1] = 3;\n    });\n  });\n\n  g.test('await,reject').fn(async t => {\n    runState[2] = 1;\n    await t.immediateAsyncExpectation(async () => {\n      runState[2] = 2;\n      await rejectOnTimeout(50, 'rejected 3');\n      runState[2] = 3;\n    });\n  });\n\n  // (Similarly can't test 'nested,noawait'.)\n\n  g.test('nested,await,2').fn(t => {\n    runState[3] = 1;\n    t.eventualAsyncExpectation(async () => {\n      runState[3] = 2;\n      await resolveOnTimeout(50); // Wait a bit before adding a new immediateAsyncExpectation\n      runState[3] = 3;\n      await t.immediateAsyncExpectation(() => rejectOnTimeout(100, 'inner rejected 3'));\n      runState[3] = 5;\n    });\n    runState[3] = 4;\n  });\n\n  g.test('nested,await,4').fn(t => {\n    runState[4] = 1;\n    t.eventualAsyncExpectation(async () => {\n      t.eventualAsyncExpectation(async () => {\n        t.eventualAsyncExpectation(async () => {\n          runState[4] = 2;\n          await resolveOnTimeout(50); // Wait a bit before adding a new immediateAsyncExpectation\n          runState[4] = 3;\n          await t.immediateAsyncExpectation(() => rejectOnTimeout(100, 'inner rejected 3'));\n          runState[4] = 5;\n        });\n      });\n    });\n    runState[4] = 4;\n  });\n\n  const resultsPromise = t0.run(g);\n  assert(objectEquals(runState, [0, 0, 0, 0, 0]));\n\n  const statuses = Array.from(await resultsPromise).map(([, v]) => v.status);\n  assert(objectEquals(runState, [3, 3, 2, 3, 3]));\n  assert(objectEquals(statuses, ['fail', 'pass', 'fail', 'fail', 'fail']));\n});\n"],"file":"async_expectations.spec.js"}