{"version":3,"file":"floating_point.spec.js","names":["description","makeTestGroup","objectEquals","unreachable","kValue","FP","hexToF32","hexToF64","oneULPF32","UnitTest","g","kAnyBounds","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","plusNULPF32","x","n","plusOneULPF32","minusNULPF32","minusOneULPF32","applyError","expected","error","unpack","Array","length","begin","end","test","paramsSubcasesOnly","input","f32","infinity","positive","negative","max","min","subnormal","fn","t","toInterval","params","got","absInterval","expect","acosInterval","acoshAlternativeInterval","acoshPrimaryInterval","asinInterval","asinhInterval","pi","third","quarter","sixth","atanInterval","atanhInterval","powTwo","to30","ceilInterval","whole","_","cosInterval","coshInterval","three_quarters","half","degreesInterval","e","Math","abs","expInterval","exp2Interval","floorInterval","less_than_one","fractInterval","inverseSqrtInterval","lengthInterval","logInterval","log2Interval","negationInterval","f16","quantizeToF16Interval","radiansInterval","roundInterval","saturateInterval","signInterval","sinInterval","sinhInterval","sqrtInterval","tanInterval","tanhInterval","truncInterval","y","additionInterval","nearest_max","nearest_min","atan2Interval","distanceInterval","divisionInterval","i32","ldexpInterval","maxInterval","minInterval","multiplicationInterval","powInterval","remainderInterval","edge","stepInterval","subtractionInterval","z","clampMedianInterval","clampMinMaxInterval","fmaInterval","join","mixImpreciseInterval","mixPreciseInterval","low","high","smoothStepInterval","kZeroBounds","kOneBoundsSnorm","kOneBoundsUnorm","kNegOneBoundsSnorm","kHalfBounds2x16snorm","kNegHalfBounds2x16snorm","toVector","unpack2x16snormInterval","unpack2x16floatInterval","kHalfBounds2x16unorm","unpack2x16unormInterval","kHalfBounds4x8snorm","kNegHalfBounds4x8snorm","unpack4x8snormInterval","kHalfBounds4x8unorm","unpack4x8unormInterval","dotInterval","normalizeInterval","crossInterval","reflectInterval","JSON","stringify"],"sources":["../../src/unittests/floating_point.spec.ts"],"sourcesContent":["export const description = `\nFloating Point unit tests.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { objectEquals, unreachable } from '../common/util/util.js';\nimport { kValue } from '../webgpu/util/constants.js';\nimport { FP, IntervalBounds } from '../webgpu/util/floating_point.js';\nimport { hexToF32, hexToF64, oneULPF32 } from '../webgpu/util/math.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\n/** Bounds indicating an expectation of an interval of all possible values */\nconst kAnyBounds: IntervalBounds = [Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY];\n\n/** @returns a number N * ULP greater than the provided number, treats input as f32 */\nfunction plusNULPF32(x: number, n: number): number {\n  return x + n * oneULPF32(x);\n}\n\n/** @returns a number one ULP greater than the provided number, treats input as f32 */\nfunction plusOneULPF32(x: number): number {\n  return plusNULPF32(x, 1);\n}\n\n/** @returns a number N * ULP less than the provided number, treats input as f32 */\nfunction minusNULPF32(x: number, n: number): number {\n  return x - n * oneULPF32(x);\n}\n\n/** @returns a number one ULP less than the provided number, treats input as f32 */\nfunction minusOneULPF32(x: number): number {\n  return minusNULPF32(x, 1);\n}\n\n/** @returns the expected IntervalBounds adjusted by the given error function\n *\n * @param expected the bounds to be adjusted\n * @param error error function to adjust the bounds via\n */\nfunction applyError(\n  expected: number | IntervalBounds,\n  error: (n: number) => number\n): IntervalBounds {\n  // Avoiding going through FPInterval to avoid tying this to a specific kind\n  const unpack = (n: number | IntervalBounds): [number, number] => {\n    if (expected instanceof Array) {\n      switch (expected.length) {\n        case 1:\n          return [expected[0], expected[0]];\n        case 2:\n          return [expected[0], expected[1]];\n      }\n      unreachable(`Tried to unpack an IntervalBounds with length other than 1 or 2`);\n    } else {\n      // TS doesn't narrow this to number automatically\n      return [n as number, n as number];\n    }\n  };\n\n  let [begin, end] = unpack(expected);\n\n  begin -= error(begin);\n  end += error(end);\n\n  if (begin === end) {\n    return [begin];\n  }\n  return [begin, end];\n}\n\ninterface ScalarToIntervalCase {\n  input: number;\n  expected: number | IntervalBounds;\n}\n\ng.test('absInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Common usages\n      { input: 1, expected: 1 },\n      { input: -1, expected: 1 },\n      { input: 0.1, expected: [hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)] },\n      { input: -0.1, expected: [hexToF32(0x3dcccccc), hexToF32(0x3dcccccd)] },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: kValue.f32.positive.min },\n      { input: kValue.f32.negative.min, expected: kValue.f32.positive.max },\n      { input: kValue.f32.negative.max, expected: kValue.f32.positive.min },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // 64-bit subnormals\n      { input: hexToF64(0x0000_0000_0000_0001n), expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: hexToF64(0x800f_ffff_ffff_ffffn), expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // Zero\n      { input: 0, expected: 0 },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.absInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.absInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('acosInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the complexity of\n      // their derivation.\n      //\n      // The acceptance interval @ x = -1 and 1 is kAnyBounds, because\n      // sqrt(1 - x*x) = sqrt(0), and sqrt is defined in terms of inverseqrt\n      // The acceptance interval @ x = 0 is kAnyBounds, because atan2 is not\n      // well-defined/implemented at 0.\n      // Near 1, the absolute error should be larger and, away from 1 the atan2\n      // inherited error should be larger.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: -1/2, expected: [hexToF32(0x4005fa91), hexToF32(0x40061a94)] },  // ~2π/3\n      { input: 0, expected: kAnyBounds },\n      { input: 1/2, expected: [hexToF32(0x3f85fa8f), hexToF32(0x3f861a94)] },  // ~π/3\n      { input: minusOneULPF32(1), expected: [hexToF64(0x3f2f_fdff_6000_0000n), hexToF64(0x3f3b_106f_c933_4fb9n)] },  // ~0.0003\n      { input: 1, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.acosInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.acosInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('acoshAlternativeInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 1, expected: kAnyBounds },  // 1/0 occurs in inverseSqrt in this formulation\n      { input: 1.1, expected: [hexToF64(0x3fdc_6368_8000_0000n), hexToF64(0x3fdc_636f_2000_0000n)] },  // ~0.443..., differs from the primary in the later digits\n      { input: 10, expected: [hexToF64(0x4007_f21e_4000_0000n), hexToF64(0x4007_f21f_6000_0000n)] },  // ~2.993...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.acoshAlternativeInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.acoshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('acoshPrimaryInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 1, expected: kAnyBounds },  // 1/0 occurs in inverseSqrt in this formulation\n      { input: 1.1, expected: [hexToF64(0x3fdc_6368_2000_0000n), hexToF64(0x3fdc_636f_8000_0000n)] }, // ~0.443..., differs from the alternative in the later digits\n      { input: 10, expected: [hexToF64(0x4007_f21e_4000_0000n), hexToF64(0x4007_f21f_6000_0000n)] },  // ~2.993...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.acoshPrimaryInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.acoshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('asinInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a simple human-readable form due to the complexity of their derivation.\n      //\n      // The acceptance interval @ x = -1 and 1 is kAnyBounds, because\n      // sqrt(1 - x*x) = sqrt(0), and sqrt is defined in terms of inversqrt.\n      // The acceptance interval @ x = 0 is kAnyBounds, because atan2 is not\n      // well-defined/implemented at 0.\n      // Near 0, but not subnormal the absolute error should be larger, so will\n      // be +/- 6.77e-5, away from 0 the atan2 inherited error should be larger.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: -1/2, expected: [hexToF64(0xbfe0_c352_c000_0000n), hexToF64(0xbfe0_bf51_c000_0000n)] },  // ~-π/6\n      { input: kValue.f32.negative.max, expected: [-6.77e-5, 6.77e-5] },  // ~0\n      { input: 0, expected: kAnyBounds },\n      { input: kValue.f32.positive.min, expected: [-6.77e-5, 6.77e-5] },  // ~0\n      { input: 1/2, expected: [hexToF64(0x3fe0_bf51_c000_0000n), hexToF64(0x3fe0_c352_c000_0000n)] },  // ~π/6\n      { input: 1, expected: kAnyBounds },  // ~π/2\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.asinInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.asinInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('asinhInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: [hexToF64(0xbfec_343a_8000_0000n), hexToF64(0xbfec_3432_8000_0000n)] },  // ~-0.88137...\n      { input: 0, expected: [hexToF64(0xbeaa_0000_2000_0000n), hexToF64(0x3eb1_ffff_d000_0000n)] },  // ~0\n      { input: 1, expected: [hexToF64(0x3fec_3435_4000_0000n), hexToF64(0x3fec_3437_8000_0000n)] },  // ~0.88137...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.asinhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.asinhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('atanInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: hexToF32(0xbfddb3d7), expected: [kValue.f32.negative.pi.third, plusOneULPF32(kValue.f32.negative.pi.third)] }, // x = -√3\n      { input: -1, expected: [kValue.f32.negative.pi.quarter, plusOneULPF32(kValue.f32.negative.pi.quarter)] },\n      { input: hexToF32(0xbf13cd3a), expected: [kValue.f32.negative.pi.sixth, plusOneULPF32(kValue.f32.negative.pi.sixth)] },  // x = -1/√3\n      { input: 0, expected: 0 },\n      { input: hexToF32(0x3f13cd3a), expected: [minusOneULPF32(kValue.f32.positive.pi.sixth), kValue.f32.positive.pi.sixth] },  // x = 1/√3\n      { input: 1, expected: [minusOneULPF32(kValue.f32.positive.pi.quarter), kValue.f32.positive.pi.quarter] },\n      { input: hexToF32(0x3fddb3d7), expected: [minusOneULPF32(kValue.f32.positive.pi.third), kValue.f32.positive.pi.third] }, // x = √3\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      return 4096 * oneULPF32(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.atanInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.atanInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('atanhInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: kAnyBounds },\n      { input: -0.1, expected: [hexToF64(0xbfb9_af9a_6000_0000n), hexToF64(0xbfb9_af8c_c000_0000n)] },  // ~-0.1003...\n      { input: 0, expected: [hexToF64(0xbe96_0000_2000_0000n), hexToF64(0x3e98_0000_0000_0000n)] },  // ~0\n      { input: 0.1, expected: [hexToF64(0x3fb9_af8b_8000_0000n), hexToF64(0x3fb9_af9b_0000_0000n)] },  // ~0.1003...\n      { input: 1, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.atanhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.atanhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('ceilInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: 1 },\n      { input: 0.9, expected: 1 },\n      { input: 1.0, expected: 1 },\n      { input: 1.1, expected: 2 },\n      { input: 1.9, expected: 2 },\n      { input: -0.1, expected: 0 },\n      { input: -0.9, expected: 0 },\n      { input: -1.0, expected: -1 },\n      { input: -1.1, expected: -1 },\n      { input: -1.9, expected: -1 },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: 1 },\n      { input: kValue.f32.negative.min, expected: kValue.f32.negative.min },\n      { input: kValue.f32.negative.max, expected: 0 },\n      { input: kValue.powTwo.to30, expected: kValue.powTwo.to30 },\n      { input: -kValue.powTwo.to30, expected: -kValue.powTwo.to30 },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0, 1] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, 1] },\n      { input: kValue.f32.subnormal.negative.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.max, expected: 0 },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.ceilInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.ceilInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('cosInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // This test does not include some common cases. i.e. f(x = π/2) = 0,\n      // because the difference between true x and x as a f32 is sufficiently\n      // large, such that the high slope of f @ x causes the results to be\n      // substantially different, so instead of getting 0 you get a value on the\n      // order of 10^-8 away from 0, thus difficult to express in a\n      // human-readable manner.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.pi.whole, expected: [-1, plusOneULPF32(-1)] },\n      { input: kValue.f32.negative.pi.third, expected: [minusOneULPF32(1/2), 1/2] },\n      { input: 0, expected: [1, 1] },\n      { input: kValue.f32.positive.pi.third, expected: [minusOneULPF32(1/2), 1/2] },\n      { input: kValue.f32.positive.pi.whole, expected: [-1, plusOneULPF32(-1)] },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (_: number): number => {\n      return 2 ** -11;\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.cosInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.cosInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('coshInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: [ hexToF32(0x3fc583a4), hexToF32(0x3fc583b1)] },  // ~1.1543...\n      { input: 0, expected: [hexToF32(0x3f7ffffd), hexToF32(0x3f800002)] },  // ~1\n      { input: 1, expected: [ hexToF32(0x3fc583a4), hexToF32(0x3fc583b1)] },  // ~1.1543...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.coshInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.coshInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('degreesInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.pi.whole, expected: [minusOneULPF32(-180), plusOneULPF32(-180)] },\n      { input: kValue.f32.negative.pi.three_quarters, expected: [minusOneULPF32(-135), plusOneULPF32(-135)] },\n      { input: kValue.f32.negative.pi.half, expected: [minusOneULPF32(-90), plusOneULPF32(-90)] },\n      { input: kValue.f32.negative.pi.third, expected: [minusOneULPF32(-60), plusOneULPF32(-60)] },\n      { input: kValue.f32.negative.pi.quarter, expected: [minusOneULPF32(-45), plusOneULPF32(-45)] },\n      { input: kValue.f32.negative.pi.sixth, expected: [minusOneULPF32(-30), plusOneULPF32(-30)] },\n      { input: 0, expected: 0 },\n      { input: kValue.f32.positive.pi.sixth, expected: [minusOneULPF32(30), plusOneULPF32(30)] },\n      { input: kValue.f32.positive.pi.quarter, expected: [minusOneULPF32(45), plusOneULPF32(45)] },\n      { input: kValue.f32.positive.pi.third, expected: [minusOneULPF32(60), plusOneULPF32(60)] },\n      { input: kValue.f32.positive.pi.half, expected: [minusOneULPF32(90), plusOneULPF32(90)] },\n      { input: kValue.f32.positive.pi.three_quarters, expected: [minusOneULPF32(135), plusOneULPF32(135)] },\n      { input: kValue.f32.positive.pi.whole, expected: [minusOneULPF32(180), plusOneULPF32(180)] },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.degreesInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.degreesInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('expInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: 0, expected: 1 },\n      { input: 1, expected: [kValue.f32.positive.e, plusOneULPF32(kValue.f32.positive.e)] },\n      { input: 89, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (x: number): number => {\n      const n = 3 + 2 * Math.abs(t.params.input);\n      return n * oneULPF32(x);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.expInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.expInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('exp2Interval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: 0, expected: 1 },\n      { input: 1, expected: 2 },\n      { input: 128, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (x: number): number => {\n      const n = 3 + 2 * Math.abs(t.params.input);\n      return n * oneULPF32(x);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.exp2Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.exp2Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('floorInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: 0 },\n      { input: 0.9, expected: 0 },\n      { input: 1.0, expected: 1 },\n      { input: 1.1, expected: 1 },\n      { input: 1.9, expected: 1 },\n      { input: -0.1, expected: -1 },\n      { input: -0.9, expected: -1 },\n      { input: -1.0, expected: -1 },\n      { input: -1.1, expected: -2 },\n      { input: -1.9, expected: -2 },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: 0 },\n      { input: kValue.f32.negative.min, expected: kValue.f32.negative.min },\n      { input: kValue.f32.negative.max, expected: -1 },\n      { input: kValue.powTwo.to30, expected: kValue.powTwo.to30 },\n      { input: -kValue.powTwo.to30, expected: -kValue.powTwo.to30 },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: 0 },\n      { input: kValue.f32.subnormal.positive.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.min, expected: [-1, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [-1, 0] },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.floorInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.floorInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('fractInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] }, // ~0.1\n      { input: 0.9, expected: [hexToF32(0x3f666666), plusOneULPF32(hexToF32(0x3f666666))] },  // ~0.9\n      { input: 1.0, expected: 0 },\n      { input: 1.1, expected: [hexToF64(0x3fb9_9998_0000_0000n), hexToF64(0x3fb9_999a_0000_0000n)] }, // ~0.1\n      { input: -0.1, expected: [hexToF32(0x3f666666), plusOneULPF32(hexToF32(0x3f666666))] },  // ~0.9\n      { input: -0.9, expected: [hexToF64(0x3fb9_9999_0000_0000n), hexToF64(0x3fb9_999a_0000_0000n)] }, // ~0.1\n      { input: -1.0, expected: 0 },\n      { input: -1.1, expected: [hexToF64(0x3fec_cccc_c000_0000n), hexToF64(0x3fec_cccd_0000_0000n), ] }, // ~0.9\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: 0 },\n      { input: kValue.f32.positive.min, expected: [kValue.f32.positive.min, kValue.f32.positive.min] },\n      { input: kValue.f32.negative.min, expected: 0 },\n      { input: kValue.f32.negative.max, expected: [kValue.f32.positive.less_than_one, 1.0] },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.fractInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.fractInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('inverseSqrtInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 0.04, expected: [minusOneULPF32(5), plusOneULPF32(5)] },\n      { input: 1, expected: 1 },\n      { input: 100, expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: kValue.f32.positive.max, expected: [hexToF32(0x1f800000), plusNULPF32(hexToF32(0x1f800000), 2)] },  // ~5.421...e-20, i.e. 1/√max f32\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      return 2 * oneULPF32(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.inverseSqrtInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.inverseSqrtInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('lengthIntervalScalar_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      //\n      // length(0) = kAnyBounds, because length uses sqrt, which is defined as 1/inversesqrt\n      {input: 0, expected: kAnyBounds },\n      {input: 1.0, expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: -1.0, expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: 0.1, expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      {input: -0.1, expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      {input: 10.0, expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n      {input: -10.0, expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n\n      // Subnormal Cases\n      { input: kValue.f32.subnormal.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.subnormal.negative.max, expected: kAnyBounds },\n      { input: kValue.f32.subnormal.positive.min, expected: kAnyBounds },\n      { input: kValue.f32.subnormal.positive.max, expected: kAnyBounds },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.max, expected: kAnyBounds },\n      { input: kValue.f32.positive.min, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.lengthInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.lengthInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('logInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 1, expected: 0 },\n      { input: kValue.f32.positive.e, expected: [minusOneULPF32(1), 1] },\n      { input: kValue.f32.positive.max, expected: [minusOneULPF32(hexToF32(0x42b17218)), hexToF32(0x42b17218)] },  // ~88.72...\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      if (t.params.input >= 0.5 && t.params.input <= 2.0) {\n        return 2 ** -21;\n      }\n      return 3 * oneULPF32(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.logInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.logInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('log2Interval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 1, expected: 0 },\n      { input: 2, expected: 1 },\n      { input: kValue.f32.positive.max, expected: [minusOneULPF32(128), 128] },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      if (t.params.input >= 0.5 && t.params.input <= 2.0) {\n        return 2 ** -21;\n      }\n      return 3 * oneULPF32(n);\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.log2Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.log2Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('negationInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] }, // ~-0.1\n      { input: 1.0, expected: -1.0 },\n      { input: 1.9, expected: [hexToF32(0xbff33334), plusOneULPF32(hexToF32(0xbff33334))] },  // ~-1.9\n      { input: -0.1, expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] }, // ~0.1\n      { input: -1.0, expected: 1 },\n      { input: -1.9, expected: [minusOneULPF32(hexToF32(0x3ff33334)), hexToF32(0x3ff33334)] },  // ~1.9\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.negative.min },\n      { input: kValue.f32.positive.min, expected: kValue.f32.negative.max },\n      { input: kValue.f32.negative.min, expected: kValue.f32.positive.max },\n      { input: kValue.f32.negative.max, expected: kValue.f32.positive.min },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: kValue.f32.subnormal.positive.min, expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: kValue.f32.subnormal.negative.min, expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.negative.max, expected: [0, kValue.f32.subnormal.positive.min] },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.negationInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.negationInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('quantizeToF16Interval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f16.negative.min, expected: kValue.f16.negative.min },\n      { input: -1, expected: -1 },\n      { input: -0.1, expected: [hexToF32(0xbdcce000), hexToF32(0xbdccc000)] },  // ~-0.1\n      { input: kValue.f16.negative.max, expected: kValue.f16.negative.max },\n      { input: kValue.f16.subnormal.negative.min, expected: [kValue.f16.subnormal.negative.min, 0] },\n      { input: kValue.f16.subnormal.negative.max, expected: [kValue.f16.subnormal.negative.max, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [kValue.f16.subnormal.negative.max, 0] },\n      { input: 0, expected: 0 },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, kValue.f16.subnormal.positive.min] },\n      { input: kValue.f16.subnormal.positive.min, expected: [0, kValue.f16.subnormal.positive.min] },\n      { input: kValue.f16.subnormal.positive.max, expected: [0, kValue.f16.subnormal.positive.max] },\n      { input: kValue.f16.positive.min, expected: kValue.f16.positive.min },\n      { input: 0.1, expected: [hexToF32(0x3dccc000), hexToF32(0x3dcce000)] },  // ~0.1\n      { input: 1, expected: 1 },\n      { input: kValue.f16.positive.max, expected: kValue.f16.positive.max },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.quantizeToF16Interval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.quantizeToF16Interval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('radiansInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: -180, expected: [minusOneULPF32(kValue.f32.negative.pi.whole), plusOneULPF32(kValue.f32.negative.pi.whole)] },\n      { input: -135, expected: [minusOneULPF32(kValue.f32.negative.pi.three_quarters), plusOneULPF32(kValue.f32.negative.pi.three_quarters)] },\n      { input: -90, expected: [minusOneULPF32(kValue.f32.negative.pi.half), plusOneULPF32(kValue.f32.negative.pi.half)] },\n      { input: -60, expected: [minusOneULPF32(kValue.f32.negative.pi.third), plusOneULPF32(kValue.f32.negative.pi.third)] },\n      { input: -45, expected: [minusOneULPF32(kValue.f32.negative.pi.quarter), plusOneULPF32(kValue.f32.negative.pi.quarter)] },\n      { input: -30, expected: [minusOneULPF32(kValue.f32.negative.pi.sixth), plusOneULPF32(kValue.f32.negative.pi.sixth)] },\n      { input: 0, expected: 0 },\n      { input: 30, expected: [minusOneULPF32(kValue.f32.positive.pi.sixth), plusOneULPF32(kValue.f32.positive.pi.sixth)] },\n      { input: 45, expected: [minusOneULPF32(kValue.f32.positive.pi.quarter), plusOneULPF32(kValue.f32.positive.pi.quarter)] },\n      { input: 60, expected: [minusOneULPF32(kValue.f32.positive.pi.third), plusOneULPF32(kValue.f32.positive.pi.third)] },\n      { input: 90, expected: [minusOneULPF32(kValue.f32.positive.pi.half), plusOneULPF32(kValue.f32.positive.pi.half)] },\n      { input: 135, expected: [minusOneULPF32(kValue.f32.positive.pi.three_quarters), plusOneULPF32(kValue.f32.positive.pi.three_quarters)] },\n      { input: 180, expected: [minusOneULPF32(kValue.f32.positive.pi.whole), plusOneULPF32(kValue.f32.positive.pi.whole)] },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.radiansInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.radiansInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('roundInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: 0 },\n      { input: 0.5, expected: 0 },  // Testing tie breaking\n      { input: 0.9, expected: 1 },\n      { input: 1.0, expected: 1 },\n      { input: 1.1, expected: 1 },\n      { input: 1.5, expected: 2 },  // Testing tie breaking\n      { input: 1.9, expected: 2 },\n      { input: -0.1, expected: 0 },\n      { input: -0.5, expected: 0 },  // Testing tie breaking\n      { input: -0.9, expected: -1 },\n      { input: -1.0, expected: -1 },\n      { input: -1.1, expected: -1 },\n      { input: -1.5, expected: -2 },  // Testing tie breaking\n      { input: -1.9, expected: -2 },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: 0 },\n      { input: kValue.f32.negative.min, expected: kValue.f32.negative.min },\n      { input: kValue.f32.negative.max, expected: 0 },\n      { input: kValue.powTwo.to30, expected: kValue.powTwo.to30 },\n      { input: -kValue.powTwo.to30, expected: -kValue.powTwo.to30 },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: 0 },\n      { input: kValue.f32.subnormal.positive.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.max, expected: 0 },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.roundInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.roundInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('saturateInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Normals\n      { input: 0, expected: 0 },\n      { input: 1, expected: 1.0 },\n      { input: -0.1, expected: 0 },\n      { input: -1, expected: 0 },\n      { input: -10, expected: 0 },\n      { input: 0.1, expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: 10, expected: 1.0 },\n      { input: 11.1, expected: 1.0 },\n      { input: kValue.f32.positive.max, expected: 1.0 },\n      { input: kValue.f32.positive.min, expected: kValue.f32.positive.min },\n      { input: kValue.f32.negative.max, expected: 0.0 },\n      { input: kValue.f32.negative.min, expected: 0.0 },\n\n      // Subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: [0.0, kValue.f32.subnormal.positive.max] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0.0, kValue.f32.subnormal.positive.min] },\n      { input: kValue.f32.subnormal.negative.min, expected: [kValue.f32.subnormal.negative.min, 0.0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [kValue.f32.subnormal.negative.max, 0.0] },\n\n      // Infinities\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.saturateInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.saturationInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('signInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: -1 },\n      { input: -10, expected: -1 },\n      { input: -1, expected: -1 },\n      { input: -0.1, expected: -1 },\n      { input: kValue.f32.negative.max, expected:  -1 },\n      { input: kValue.f32.subnormal.negative.min, expected: [-1, 0] },\n      { input: kValue.f32.subnormal.negative.max, expected: [-1, 0] },\n      { input: 0, expected: 0 },\n      { input: kValue.f32.subnormal.positive.max, expected: [0, 1] },\n      { input: kValue.f32.subnormal.positive.min, expected: [0, 1] },\n      { input: kValue.f32.positive.min, expected: 1 },\n      { input: 0.1, expected: 1 },\n      { input: 1, expected: 1 },\n      { input: 10, expected: 1 },\n      { input: kValue.f32.positive.max, expected: 1 },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.signInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.signInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sinInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // This test does not include some common cases, i.e. f(x = -π|π) = 0,\n      // because the difference between true x and x as a f32 is sufficiently\n      // large, such that the high slope of f @ x causes the results to be\n      // substantially different, so instead of getting 0 you get a value on the\n      // order of 10^-8 away from it, thus difficult to express in a\n      // human-readable manner.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.pi.half, expected: [-1, plusOneULPF32(-1)] },\n      { input: 0, expected: 0 },\n      { input: kValue.f32.positive.pi.half, expected: [minusOneULPF32(1), 1] },\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (_: number): number => {\n      return 2 ** -11;\n    };\n\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.sinInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.sinInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sinhInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: [ hexToF32(0xbf966d05), hexToF32(0xbf966cf8)] },  // ~-1.175...\n      { input: 0, expected: [hexToF32(0xb4600000), hexToF32(0x34600000)] },  // ~0\n      { input: 1, expected: [ hexToF32(0x3f966cf8), hexToF32(0x3f966d05)] },  // ~1.175...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.sinhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.sinhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('sqrtInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: -1, expected: kAnyBounds },\n      { input: 0, expected: kAnyBounds },\n      { input: 0.01, expected: [hexToF64(0x3fb9_9998_b000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      { input: 1, expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: 4, expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      { input: 100, expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.sqrtInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.sqrtInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('tanInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // All of these are hard coded, since the error intervals are difficult to\n      // express in a closed human--readable form.\n      // Some easy looking cases like f(x = -π|π) = 0 are actually quite\n      // difficult. This is because the interval is calculated from the results\n      // of sin(x)/cos(x), which becomes very messy at x = -π|π, since π is\n      // irrational, thus does not have an exact representation as a f32.\n      //\n      // Even at 0, which has a precise f32 value, there is still the problem\n      // that result of sin(0) and cos(0) will be intervals due to the inherited\n      // nature of errors, so the proper interval will be an interval calculated\n      // from dividing an interval by another interval and applying an error\n      // function to that.\n      //\n      // This complexity is why the entire interval framework was developed.\n      //\n      // The examples here have been manually traced to confirm the expectation\n      // values are correct.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: kValue.f32.negative.pi.whole, expected: [hexToF64(0xbf40_02bc_9000_0000n), hexToF64(0x3f40_0144_f000_0000n)] },  // ~0.0\n      { input: kValue.f32.negative.pi.half, expected: kAnyBounds },\n      { input: 0, expected: [hexToF64(0xbf40_0200_b000_0000n), hexToF64(0x3f40_0200_b000_0000n)] },  // ~0.0\n      { input: kValue.f32.positive.pi.half, expected: kAnyBounds },\n      { input: kValue.f32.positive.pi.whole, expected: [hexToF64(0xbf40_0144_f000_0000n), hexToF64(0x3f40_02bc_9000_0000n)] },  // ~0.0\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.tanInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.tanInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('tanhInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.negative.min, expected: kAnyBounds },\n      { input: -1, expected: [hexToF64(0xbfe8_5efd_1000_0000n), hexToF64(0xbfe8_5ef8_9000_0000n)] },  // ~-0.7615...\n      { input: 0, expected: [hexToF64(0xbe8c_0000_b000_0000n), hexToF64(0x3e8c_0000_b000_0000n)] },  // ~0\n      { input: 1, expected: [hexToF64(0x3fe8_5ef8_9000_0000n), hexToF64(0x3fe8_5efd_1000_0000n)] },  // ~0.7615...\n      { input: kValue.f32.positive.max, expected: kAnyBounds },\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.tanhInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.tanhInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('truncInterval_f32')\n  .paramsSubcasesOnly<ScalarToIntervalCase>(\n    // prettier-ignore\n    [\n      { input: 0, expected: 0 },\n      { input: 0.1, expected: 0 },\n      { input: 0.9, expected: 0 },\n      { input: 1.0, expected: 1 },\n      { input: 1.1, expected: 1 },\n      { input: 1.9, expected: 1 },\n      { input: -0.1, expected: 0 },\n      { input: -0.9, expected: 0 },\n      { input: -1.0, expected: -1 },\n      { input: -1.1, expected: -1 },\n      { input: -1.9, expected: -1 },\n\n      // Edge cases\n      { input: kValue.f32.infinity.positive, expected: kAnyBounds },\n      { input: kValue.f32.infinity.negative, expected: kAnyBounds },\n      { input: kValue.f32.positive.max, expected: kValue.f32.positive.max },\n      { input: kValue.f32.positive.min, expected: 0 },\n      { input: kValue.f32.negative.min, expected: kValue.f32.negative.min },\n      { input: kValue.f32.negative.max, expected: 0 },\n\n      // 32-bit subnormals\n      { input: kValue.f32.subnormal.positive.max, expected: 0 },\n      { input: kValue.f32.subnormal.positive.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.min, expected: 0 },\n      { input: kValue.f32.subnormal.negative.max, expected: 0 },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.truncInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.truncInterval(${t.params.input}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface ScalarPairToIntervalCase {\n  // input is a pair of independent values, not a range, so should not be\n  // converted to a FPInterval.\n  input: [number, number];\n  expected: number | IntervalBounds;\n}\n\ng.test('additionInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: 0 },\n      { input: [1, 0], expected: 1 },\n      { input: [0, 1], expected: 1 },\n      { input: [-1, 0], expected: -1 },\n      { input: [0, -1], expected: -1 },\n      { input: [1, 1], expected: 2 },\n      { input: [1, -1], expected: 0 },\n      { input: [-1, 1], expected: 0 },\n      { input: [-1, -1], expected: -2 },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0, 0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, 0], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0.1, 0.1], expected: [minusOneULPF32(hexToF32(0x3e4ccccd)), hexToF32(0x3e4ccccd)] },  // ~0.2\n      { input: [0.1, -0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULPF32(hexToF32(0x3dcccccd))] }, // ~0\n      { input: [-0.1, 0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULPF32(hexToF32(0x3dcccccd))] }, // ~0\n      { input: [-0.1, -0.1], expected: [hexToF32(0xbe4ccccd), plusOneULPF32(hexToF32(0xbe4ccccd))] },  // ~-0.2\n\n      // 32-bit subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [kValue.f32.subnormal.negative.min, 0] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.additionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.additionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\n// Note: atan2's parameters are labelled (y, x) instead of (x, y)\ng.test('atan2Interval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      //\n      // The positive x & y quadrant is tested in more detail, and the other\n      // quadrants are spot checked that values are pointing in the right\n      // direction.\n      //\n      // Some of the intervals appear slightly asymmetric,\n      // i.e. [π/4 - 4097 * ULPF32(π/4), π/4 + 4096 * ULPF32(π/4)],\n      // this is because π/4 is not precisely expressible as a f32, so the\n      // higher precision value can be rounded up or down when converting to\n      // f32. Thus, one option will be 1 ULP off of the constant value being\n      // used.\n\n      // positive y, positive x\n      { input: [1, hexToF32(0x3fddb3d7)], expected: [minusNULPF32(kValue.f32.positive.pi.sixth, 4097), plusNULPF32(kValue.f32.positive.pi.sixth, 4096)] },  // x = √3\n      { input: [1, 1], expected: [minusNULPF32(kValue.f32.positive.pi.quarter, 4097), plusNULPF32(kValue.f32.positive.pi.quarter, 4096)] },\n      // { input: [hexToF32(0x3fddb3d7), 1], expected: [hexToF64(0x3ff0_bf52_0000_0000n), hexToF64(0x3ff0_c352_6000_0000n)] },  // y = √3\n      { input: [Number.POSITIVE_INFINITY, 1], expected: kAnyBounds },\n\n      // positive y, negative x\n      { input: [1, -1], expected: [minusNULPF32(kValue.f32.positive.pi.three_quarters, 4096), plusNULPF32(kValue.f32.positive.pi.three_quarters, 4097)] },\n      { input: [Number.POSITIVE_INFINITY, -1], expected: kAnyBounds },\n\n      // negative y, negative x\n      { input: [-1, -1], expected: [minusNULPF32(kValue.f32.negative.pi.three_quarters, 4097), plusNULPF32(kValue.f32.negative.pi.three_quarters, 4096)] },\n      { input: [Number.NEGATIVE_INFINITY, -1], expected: kAnyBounds },\n\n      // negative y, positive x\n      { input: [-1, 1], expected: [minusNULPF32(kValue.f32.negative.pi.quarter, 4096), plusNULPF32(kValue.f32.negative.pi.quarter, 4097)] },\n      { input: [Number.NEGATIVE_INFINITY, 1], expected: kAnyBounds },\n\n      // Discontinuity @ origin (0,0)\n      { input: [0, 0], expected: kAnyBounds },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: kAnyBounds },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: kAnyBounds },\n      { input: [0, kValue.f32.positive.min], expected: kAnyBounds },\n      { input: [0, kValue.f32.negative.max], expected: kAnyBounds },\n      { input: [0, kValue.f32.positive.max], expected: kAnyBounds },\n      { input: [0, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [0, 1], expected: kAnyBounds },\n      { input: [kValue.f32.subnormal.positive.max, 1], expected: kAnyBounds },\n      { input: [kValue.f32.subnormal.negative.min, 1], expected: kAnyBounds },\n\n      // When atan(y/x) ~ 0, test that ULP applied to result of atan2, not the intermediate atan(y/x) value\n      {input: [hexToF32(0x80800000), hexToF32(0xbf800000)], expected: [minusNULPF32(kValue.f32.negative.pi.whole, 4096), plusNULPF32(kValue.f32.negative.pi.whole, 4096)] },\n      {input: [hexToF32(0x00800000), hexToF32(0xbf800000)], expected: [minusNULPF32(kValue.f32.positive.pi.whole, 4096), plusNULPF32(kValue.f32.positive.pi.whole, 4096)] },\n\n      // Very large |x| values should cause kAnyBounds to be returned, due to the restrictions on division\n      { input: [1, kValue.f32.positive.max], expected: kAnyBounds },\n      { input: [1, kValue.f32.positive.nearest_max], expected: kAnyBounds },\n      { input: [1, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [1, kValue.f32.negative.nearest_min], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [y, x] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.atan2Interval(y, x);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.atan2Interval(${y}, ${x}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('distanceIntervalScalar_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable  form due to the inherited nature\n      // of the errors.\n      //\n      // distance(x, y), where x - y = 0 has an acceptance interval of kAnyBounds,\n      // because distance(x, y) = length(x - y), and length(0) = kAnyBounds\n      { input: [0, 0], expected: kAnyBounds },\n      { input: [1.0, 0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [0.0, 1.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [1.0, 1.0], expected: kAnyBounds },\n      { input: [-0.0, -1.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [0.0, -1.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [-1.0, -1.0], expected: kAnyBounds },\n      { input: [0.1, 0], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      { input: [0, 0.1], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      { input: [-0.1, 0], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      { input: [0, -0.1], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      { input: [10.0, 0], expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n      { input: [0, 10.0], expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n      { input: [-10.0, 0], expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n      { input: [0, -10.0], expected: [hexToF64(0x4023_ffff_7000_0000n), hexToF64(0x4024_0000_b000_0000n)] },  // ~10\n\n      // Subnormal Cases\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: kAnyBounds },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: kAnyBounds },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: kAnyBounds },\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: kAnyBounds },\n\n      // Edge cases\n      { input: [kValue.f32.infinity.positive, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAnyBounds },\n      { input: [kValue.f32.negative.min, 0], expected: kAnyBounds },\n      { input: [kValue.f32.negative.max, 0], expected: kAnyBounds },\n      { input: [kValue.f32.positive.min, 0], expected: kAnyBounds },\n      { input: [kValue.f32.positive.max, 0], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.distanceInterval(...t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.distanceInterval(${t.params.input[0]}, ${t.params.input[1]}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('divisionInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 1], expected: 0 },\n      { input: [0, -1], expected: 0 },\n      { input: [1, 1], expected: 1 },\n      { input: [1, -1], expected: -1 },\n      { input: [-1, 1], expected: -1 },\n      { input: [-1, -1], expected: 1 },\n      { input: [4, 2], expected: 2 },\n      { input: [-4, 2], expected: -2 },\n      { input: [4, -2], expected: -2 },\n      { input: [-4, -2], expected: 2 },\n\n      // 64-bit normals\n      { input: [0, 0.1], expected: 0 },\n      { input: [0, -0.1], expected: 0 },\n      { input: [1, 0.1], expected: [minusOneULPF32(10), plusOneULPF32(10)] },\n      { input: [-1, 0.1], expected: [minusOneULPF32(-10), plusOneULPF32(-10)] },\n      { input: [1, -0.1], expected: [minusOneULPF32(-10), plusOneULPF32(-10)] },\n      { input: [-1, -0.1], expected: [minusOneULPF32(10), plusOneULPF32(10)] },\n\n      // Denominator out of range\n      { input: [1, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [1, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [1, kValue.f32.positive.max], expected: kAnyBounds },\n      { input: [1, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [1, 0], expected: kAnyBounds },\n      { input: [1, kValue.f32.subnormal.positive.max], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const error = (n: number): number => {\n      return 2.5 * oneULPF32(n);\n    };\n\n    const [x, y] = t.params.input;\n    t.params.expected = applyError(t.params.expected, error);\n    const expected = FP.f32.toInterval(t.params.expected);\n\n    const got = FP.f32.divisionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.divisionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('ldexpInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: 0 },\n      { input: [0, 1], expected: 0 },\n      { input: [0, -1], expected: 0 },\n      { input: [1, 1], expected: 2 },\n      { input: [1, -1], expected: 0.5 },\n      { input: [-1, 1], expected: -2 },\n      { input: [-1, -1], expected: -0.5 },\n\n      // 64-bit normals\n      { input: [0, 0.1], expected: 0 },\n      { input: [0, -0.1], expected: 0 },\n      { input: [1.0000000001, 1], expected: [2, plusNULPF32(2, 2)] },  // ~2, additional ULP error due to first param not being f32 precise\n      { input: [-1.0000000001, 1], expected: [minusNULPF32(-2, 2), -2] },  // ~-2, additional ULP error due to first param not being f32 precise\n\n      // Edge Cases\n      { input: [1.9999998807907104, 127], expected: kValue.f32.positive.max },\n      { input: [1, -126], expected: kValue.f32.positive.min },\n      { input: [0.9999998807907104, -126], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [1.1920928955078125e-07, -126], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [-1.1920928955078125e-07, -126], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [-0.9999998807907104, -126], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [-1, -126], expected: kValue.f32.negative.max },\n      { input: [-1.9999998807907104, 127], expected: kValue.f32.negative.min },\n\n      // Out of Bounds\n      { input: [1, 128], expected: kAnyBounds },\n      { input: [-1, 128], expected: kAnyBounds },\n      { input: [100, 126], expected: kAnyBounds },\n      { input: [-100, 126], expected: kAnyBounds },\n      { input: [kValue.f32.positive.max, kValue.i32.positive.max], expected: kAnyBounds },\n      { input: [kValue.f32.negative.min, kValue.i32.positive.max], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.ldexpInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.ldexpInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('maxInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: 0 },\n      { input: [1, 0], expected: 1 },\n      { input: [0, 1], expected: 1 },\n      { input: [-1, 0], expected: 0 },\n      { input: [0, -1], expected: 0 },\n      { input: [1, 1], expected: 1 },\n      { input: [1, -1], expected: 1 },\n      { input: [-1, 1], expected: 1 },\n      { input: [-1, -1], expected: -1 },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0, 0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, 0], expected: 0 },\n      { input: [0, -0.1], expected: 0 },\n      { input: [0.1, 0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0.1, -0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, 0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [-0.1, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n\n      // 32-bit subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [1, kValue.f32.subnormal.positive.max], expected: 1 },\n      { input: [kValue.f32.subnormal.negative.min, kValue.f32.subnormal.positive.max], expected: [kValue.f32.subnormal.negative.min, kValue.f32.subnormal.positive.max] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.maxInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.maxInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('minInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: 0 },\n      { input: [1, 0], expected: 0 },\n      { input: [0, 1], expected: 0 },\n      { input: [-1, 0], expected: -1 },\n      { input: [0, -1], expected: -1 },\n      { input: [1, 1], expected: 1 },\n      { input: [1, -1], expected: -1 },\n      { input: [-1, 1], expected: -1 },\n      { input: [-1, -1], expected: -1 },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: 0 },\n      { input: [0, 0.1], expected: 0 },\n      { input: [-0.1, 0], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0.1, 0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0.1, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [-0.1, 0.1], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [-0.1, -0.1], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n\n      // 32-bit subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [-1, kValue.f32.subnormal.positive.max], expected: -1 },\n      { input: [kValue.f32.subnormal.negative.min, kValue.f32.subnormal.positive.max], expected: [kValue.f32.subnormal.negative.min, kValue.f32.subnormal.positive.max] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.minInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.minInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('multiplicationInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: 0 },\n      { input: [1, 0], expected: 0 },\n      { input: [0, 1], expected: 0 },\n      { input: [-1, 0], expected: 0 },\n      { input: [0, -1], expected: 0 },\n      { input: [1, 1], expected: 1 },\n      { input: [1, -1], expected: -1 },\n      { input: [-1, 1], expected: -1 },\n      { input: [-1, -1], expected: 1 },\n      { input: [2, 1], expected: 2 },\n      { input: [1, -2], expected: -2 },\n      { input: [-2, 1], expected: -2 },\n      { input: [-2, -1], expected: 2 },\n      { input: [2, 2], expected: 4 },\n      { input: [2, -2], expected: -4 },\n      { input: [-2, 2], expected: -4 },\n      { input: [-2, -2], expected: 4 },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: 0 },\n      { input: [0, 0.1], expected: 0 },\n      { input: [-0.1, 0], expected: 0 },\n      { input: [0, -0.1], expected: 0 },\n      { input: [0.1, 0.1], expected: [minusNULPF32(hexToF32(0x3c23d70a), 2), plusOneULPF32(hexToF32(0x3c23d70a))] },  // ~0.01\n      { input: [0.1, -0.1], expected: [minusOneULPF32(hexToF32(0xbc23d70a)), plusNULPF32(hexToF32(0xbc23d70a), 2)] },  // ~-0.01\n      { input: [-0.1, 0.1], expected: [minusOneULPF32(hexToF32(0xbc23d70a)), plusNULPF32(hexToF32(0xbc23d70a), 2)] },  // ~-0.01\n      { input: [-0.1, -0.1], expected: [minusNULPF32(hexToF32(0x3c23d70a), 2), plusOneULPF32(hexToF32(0x3c23d70a))] },  // ~0.01\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [1, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [-1, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [1, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [-1, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAnyBounds },\n\n      // Edge of f32\n      { input: [kValue.f32.positive.max, kValue.f32.positive.max], expected: kAnyBounds },\n      { input: [kValue.f32.negative.min, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [kValue.f32.positive.max, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [kValue.f32.negative.min, kValue.f32.positive.max], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.multiplicationInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.multiplicationInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('powInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      { input: [-1, 0], expected: kAnyBounds },\n      { input: [0, 0], expected: kAnyBounds },\n      { input: [1, 0], expected: [minusNULPF32(1, 3), hexToF64(0x3ff0_0000_3000_0000n)] },  // ~1\n      { input: [2, 0], expected: [minusNULPF32(1, 3), hexToF64(0x3ff0_0000_3000_0000n)] },  // ~1\n      { input: [kValue.f32.positive.max, 0], expected: [minusNULPF32(1, 3), hexToF64(0x3ff0_0000_3000_0000n)] },  // ~1\n      { input: [0, 1], expected: kAnyBounds },\n      { input: [1, 1], expected: [hexToF64(0x3fef_fffe_dfff_fe00n), hexToF64(0x3ff0_0000_c000_0200n)] },  // ~1\n      { input: [1, 100], expected: [hexToF64(0x3fef_ffba_3fff_3800n), hexToF64(0x3ff0_0023_2000_c800n)] },  // ~1\n      { input: [1, kValue.f32.positive.max], expected: kAnyBounds },\n      { input: [2, 1], expected: [hexToF64(0x3fff_fffe_a000_0200n), hexToF64(0x4000_0001_0000_0200n)] },  // ~2\n      { input: [2, 2], expected: [hexToF64(0x400f_fffd_a000_0400n), hexToF64(0x4010_0001_a000_0400n)] },  // ~4\n      { input: [10, 10], expected: [hexToF64(0x4202_a04f_51f7_7000n), hexToF64(0x4202_a070_ee08_e000n)] },  // ~10000000000\n      { input: [10, 1], expected: [hexToF64(0x4023_fffe_0b65_8b00n), hexToF64(0x4024_0002_149a_7c00n)] },  // ~10\n      { input: [kValue.f32.positive.max, 1], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.powInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.powInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('remainderInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 1], expected: [0, 0] },\n      { input: [0, -1], expected: [0, 0] },\n      { input: [1, 1], expected: [0, 1] },\n      { input: [1, -1], expected: [0, 1] },\n      { input: [-1, 1], expected: [-1, 0] },\n      { input: [-1, -1], expected: [-1, 0] },\n      { input: [4, 2], expected: [0, 2] },\n      { input: [-4, 2], expected: [-2, 0] },\n      { input: [4, -2], expected: [0, 2] },\n      { input: [-4, -2], expected: [-2, 0] },\n      { input: [2, 4], expected: [2, 2] },\n      { input: [-2, 4], expected: [-2, -2] },\n      { input: [2, -4], expected: [2, 2] },\n      { input: [-2, -4], expected: [-2, -2] },\n\n      // 64-bit normals\n      { input: [0, 0.1], expected: [0, 0] },\n      { input: [0, -0.1], expected: [0, 0] },\n      { input: [1, 0.1], expected: [hexToF32(0xb4000000), hexToF32(0x3dccccd8)] }, // ~[0, 0.1]\n      { input: [-1, 0.1], expected: [hexToF32(0xbdccccd8), hexToF32(0x34000000)] }, // ~[-0.1, 0]\n      { input: [1, -0.1], expected: [hexToF32(0xb4000000), hexToF32(0x3dccccd8)] }, // ~[0, 0.1]\n      { input: [-1, -0.1], expected: [hexToF32(0xbdccccd8), hexToF32(0x34000000)] }, // ~[-0.1, 0]\n\n      // Denominator out of range\n      { input: [1, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [1, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [1, kValue.f32.positive.max], expected: kAnyBounds },\n      { input: [1, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [1, 0], expected: kAnyBounds },\n      { input: [1, kValue.f32.subnormal.positive.max], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.remainderInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.remainderInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('stepInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: 1 },\n      { input: [1, 1], expected: 1 },\n      { input: [0, 1], expected: 1 },\n      { input: [1, 0], expected: 0 },\n      { input: [-1, -1], expected: 1 },\n      { input: [0, -1], expected: 0 },\n      { input: [-1, 0], expected: 1 },\n      { input: [-1, 1], expected: 1 },\n      { input: [1, -1], expected: 0 },\n\n      // 64-bit normals\n      { input: [0.1, 0.1], expected: [0, 1] },\n      { input: [0, 0.1], expected: 1 },\n      { input: [0.1, 0], expected: 0 },\n      { input: [0.1, 1], expected: 1 },\n      { input: [1, 0.1], expected: 0 },\n      { input: [-0.1, -0.1], expected: [0, 1] },\n      { input: [0, -0.1], expected: 0 },\n      { input: [-0.1, 0], expected: 1 },\n      { input: [-0.1, -1], expected: 0 },\n      { input: [-1, -0.1], expected: 1 },\n\n      // Subnormals\n      { input: [0, kValue.f32.subnormal.positive.max], expected: 1 },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: 1 },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [0, 1] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [0, 1] },\n      { input: [1, kValue.f32.subnormal.positive.max], expected: 0 },\n      { input: [1, kValue.f32.subnormal.positive.min], expected: 0 },\n      { input: [1, kValue.f32.subnormal.negative.max], expected: 0 },\n      { input: [1, kValue.f32.subnormal.negative.min], expected: 0 },\n      { input: [-1, kValue.f32.subnormal.positive.max], expected: 1 },\n      { input: [-1, kValue.f32.subnormal.positive.min], expected: 1 },\n      { input: [-1, kValue.f32.subnormal.negative.max], expected: 1 },\n      { input: [-1, kValue.f32.subnormal.negative.min], expected: 1 },\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, 1] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, 1] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: 1 },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: 1 },\n      { input: [kValue.f32.subnormal.positive.max, 1], expected: 1 },\n      { input: [kValue.f32.subnormal.positive.min, 1], expected: 1 },\n      { input: [kValue.f32.subnormal.negative.max, 1], expected: 1 },\n      { input: [kValue.f32.subnormal.negative.min, 1], expected: 1 },\n      { input: [kValue.f32.subnormal.positive.max, -1], expected: 0 },\n      { input: [kValue.f32.subnormal.positive.min, -1], expected: 0 },\n      { input: [kValue.f32.subnormal.negative.max, -1], expected: 0 },\n      { input: [kValue.f32.subnormal.negative.min, -1], expected: 0 },\n      { input: [kValue.f32.subnormal.negative.min, kValue.f32.subnormal.positive.max], expected: 1 },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.min], expected: [0, 1] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [edge, x] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.stepInterval(edge, x);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.stepInterval(${edge}, ${x}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('subtractionInterval_f32')\n  .paramsSubcasesOnly<ScalarPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // 32-bit normals\n      { input: [0, 0], expected: 0 },\n      { input: [1, 0], expected: 1 },\n      { input: [0, 1], expected: -1 },\n      { input: [-1, 0], expected: -1 },\n      { input: [0, -1], expected: 1 },\n      { input: [1, 1], expected: 0 },\n      { input: [1, -1], expected: 2 },\n      { input: [-1, 1], expected: -2 },\n      { input: [-1, -1], expected: 0 },\n\n      // 64-bit normals\n      { input: [0.1, 0], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0, 0.1], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [-0.1, 0], expected: [hexToF32(0xbdcccccd), plusOneULPF32(hexToF32(0xbdcccccd))] },  // ~-0.1\n      { input: [0, -0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)), hexToF32(0x3dcccccd)] },  // ~0.1\n      { input: [0.1, 0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULPF32(hexToF32(0x3dcccccd))] },  // ~0.0\n      { input: [0.1, -0.1], expected: [minusOneULPF32(hexToF32(0x3e4ccccd)), hexToF32(0x3e4ccccd)] }, // ~0.2\n      { input: [-0.1, 0.1], expected: [hexToF32(0xbe4ccccd), plusOneULPF32(hexToF32(0xbe4ccccd))] },  // ~-0.2\n      { input: [-0.1, -0.1], expected: [minusOneULPF32(hexToF32(0x3dcccccd)) - hexToF32(0x3dcccccd), hexToF32(0x3dcccccd) - minusOneULPF32(hexToF32(0x3dcccccd))] }, // ~0\n\n      // // 32-bit normals\n      { input: [kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [kValue.f32.subnormal.positive.min, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.min], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.subnormal.negative.max, 0], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [0, kValue.f32.subnormal.negative.max], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.negative.min, 0], expected: [kValue.f32.subnormal.negative.min, 0] },\n      { input: [0, kValue.f32.subnormal.negative.min], expected: [0, kValue.f32.subnormal.positive.max] },\n\n      // Infinities\n      { input: [0, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, 0], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.subtractionInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.subtractionInterval(${x}, ${y}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface ScalarTripleToIntervalCase {\n  input: [number, number, number];\n  expected: number | IntervalBounds;\n}\n\ng.test('clampMedianInterval_f32')\n  .paramsSubcasesOnly<ScalarTripleToIntervalCase>(\n    // prettier-ignore\n    [\n      // Normals\n      { input: [0, 0, 0], expected: 0 },\n      { input: [1, 0, 0], expected: 0 },\n      { input: [0, 1, 0], expected: 0 },\n      { input: [0, 0, 1], expected: 0 },\n      { input: [1, 0, 1], expected: 1 },\n      { input: [1, 1, 0], expected: 1 },\n      { input: [0, 1, 1], expected: 1 },\n      { input: [1, 1, 1], expected: 1 },\n      { input: [1, 10, 100], expected: 10 },\n      { input: [10, 1, 100], expected: 10 },\n      { input: [100, 1, 10], expected: 10 },\n      { input: [-10, 1, 100], expected: 1 },\n      { input: [10, 1, -100], expected: 1 },\n      { input: [-10, 1, -100], expected: -10 },\n      { input: [-10, -10, -10], expected: -10 },\n\n      // Subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0, 0], expected: 0 },\n      { input: [0, kValue.f32.subnormal.positive.max, 0], expected: 0 },\n      { input: [0, 0, kValue.f32.subnormal.positive.max], expected: 0 },\n      { input: [kValue.f32.subnormal.positive.max, 0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.min, kValue.f32.subnormal.negative.max], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.min, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, 0] },\n      { input: [kValue.f32.positive.max, kValue.f32.positive.max, kValue.f32.subnormal.positive.min], expected: kValue.f32.positive.max },\n\n      // Infinities\n      { input: [0, 1, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.clampMedianInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.clampMedianInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('clampMinMaxInterval_f32')\n  .paramsSubcasesOnly<ScalarTripleToIntervalCase>(\n    // prettier-ignore\n    [\n      // Normals\n      { input: [0, 0, 0], expected: 0 },\n      { input: [1, 0, 0], expected: 0 },\n      { input: [0, 1, 0], expected: 0 },\n      { input: [0, 0, 1], expected: 0 },\n      { input: [1, 0, 1], expected: 1 },\n      { input: [1, 1, 0], expected: 0 },\n      { input: [0, 1, 1], expected: 1 },\n      { input: [1, 1, 1], expected: 1 },\n      { input: [1, 10, 100], expected: 10 },\n      { input: [10, 1, 100], expected: 10 },\n      { input: [100, 1, 10], expected: 10 },\n      { input: [-10, 1, 100], expected: 1 },\n      { input: [10, 1, -100], expected: -100 },\n      { input: [-10, 1, -100], expected: -100 },\n      { input: [-10, -10, -10], expected: -10 },\n\n      // Subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, 0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, 0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [0, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.min, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.min, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.min, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.positive.max, kValue.f32.positive.max, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n\n      // Infinities\n      { input: [0, 1, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.clampMinMaxInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.clampMinMaxInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('fmaInterval_f32')\n  .paramsSubcasesOnly<ScalarTripleToIntervalCase>(\n    // prettier-ignore\n    [\n      // Normals\n      { input: [0, 0, 0], expected: 0 },\n      { input: [1, 0, 0], expected: 0 },\n      { input: [0, 1, 0], expected: 0 },\n      { input: [0, 0, 1], expected: 1 },\n      { input: [1, 0, 1], expected: 1 },\n      { input: [1, 1, 0], expected: 1 },\n      { input: [0, 1, 1], expected: 1 },\n      { input: [1, 1, 1], expected: 2 },\n      { input: [1, 10, 100], expected: 110 },\n      { input: [10, 1, 100], expected: 110 },\n      { input: [100, 1, 10], expected: 110 },\n      { input: [-10, 1, 100], expected: 90 },\n      { input: [10, 1, -100], expected: -90 },\n      { input: [-10, 1, -100], expected: -110 },\n      { input: [-10, -10, -10], expected: 90 },\n\n      // Subnormals\n      { input: [kValue.f32.subnormal.positive.max, 0, 0], expected: 0 },\n      { input: [0, kValue.f32.subnormal.positive.max, 0], expected: 0 },\n      { input: [0, 0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, 0, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.max] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.positive.min] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.positive.min, kValue.f32.subnormal.negative.max], expected: [kValue.f32.subnormal.negative.max, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.min, kValue.f32.subnormal.negative.max], expected: [hexToF32(0x80000002), 0] },\n\n      // Infinities\n      { input: [0, 1, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [0, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [kValue.f32.positive.max, kValue.f32.positive.max, kValue.f32.subnormal.positive.min], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.fmaInterval(...t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.fmaInterval(${t.params.input.join(',')}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('mixImpreciseInterval_f32')\n  .paramsSubcasesOnly<ScalarTripleToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n\n      // [0.0, 1.0] cases\n      { input: [0.0, 1.0, -1.0], expected: -1.0 },\n      { input: [0.0, 1.0, 0.0], expected: 0.0 },\n      { input: [0.0, 1.0, 0.1], expected: [hexToF64(0x3fb9_9999_8000_0000n), hexToF64(0x3fb9_9999_a000_0000n)] },  // ~0.1\n      { input: [0.0, 1.0, 0.5], expected: 0.5 },\n      { input: [0.0, 1.0, 0.9], expected: [hexToF64(0x3fec_cccc_c000_0000n), hexToF64(0x3fec_cccc_e000_0000n)] },  // ~0.9\n      { input: [0.0, 1.0, 1.0], expected: 1.0 },\n      { input: [0.0, 1.0, 2.0], expected: 2.0 },\n\n      // [1.0, 0.0] cases\n      { input: [1.0, 0.0, -1.0], expected: 2.0 },\n      { input: [1.0, 0.0, 0.0], expected: 1.0 },\n      { input: [1.0, 0.0, 0.1], expected: [hexToF64(0x3fec_cccc_c000_0000n), hexToF64(0x3fec_cccc_e000_0000n)] },  // ~0.9\n      { input: [1.0, 0.0, 0.5], expected: 0.5 },\n      { input: [1.0, 0.0, 0.9], expected: [hexToF64(0x3fb9_9999_0000_0000n), hexToF64(0x3fb9_999a_0000_0000n)] },  // ~0.1\n      { input: [1.0, 0.0, 1.0], expected: 0.0 },\n      { input: [1.0, 0.0, 2.0], expected: -1.0 },\n\n      // [0.0, 10.0] cases\n      { input: [0.0, 10.0, -1.0], expected: -10.0 },\n      { input: [0.0, 10.0, 0.0], expected: 0.0 },\n      { input: [0.0, 10.0, 0.1], expected: [hexToF64(0x3fef_ffff_e000_0000n), hexToF64(0x3ff0_0000_2000_0000n)] },  // ~1\n      { input: [0.0, 10.0, 0.5], expected: 5.0 },\n      { input: [0.0, 10.0, 0.9], expected: [hexToF64(0x4021_ffff_e000_0000n), hexToF64(0x4022_0000_2000_0000n)] },  // ~9\n      { input: [0.0, 10.0, 1.0], expected: 10.0 },\n      { input: [0.0, 10.0, 2.0], expected: 20.0 },\n\n      // [2.0, 10.0] cases\n      { input: [2.0, 10.0, -1.0], expected: -6.0 },\n      { input: [2.0, 10.0, 0.0], expected: 2.0 },\n      { input: [2.0, 10.0, 0.1], expected: [hexToF64(0x4006_6666_6000_0000n), hexToF64(0x4006_6666_8000_0000n)] },  // ~2.8\n      { input: [2.0, 10.0, 0.5], expected: 6.0 },\n      { input: [2.0, 10.0, 0.9], expected: [hexToF64(0x4022_6666_6000_0000n), hexToF64(0x4022_6666_8000_0000n)] },  // ~9.2\n      { input: [2.0, 10.0, 1.0], expected: 10.0 },\n      { input: [2.0, 10.0, 2.0], expected: 18.0 },\n\n      // [-1.0, 1.0] cases\n      { input: [-1.0, 1.0, -2.0], expected: -5.0 },\n      { input: [-1.0, 1.0, 0.0], expected: -1.0 },\n      { input: [-1.0, 1.0, 0.1], expected: [hexToF64(0xbfe9_9999_a000_0000n), hexToF64(0xbfe9_9999_8000_0000n)] },  // ~-0.8\n      { input: [-1.0, 1.0, 0.5], expected: 0.0 },\n      { input: [-1.0, 1.0, 0.9], expected: [hexToF64(0x3fe9_9999_8000_0000n), hexToF64(0x3fe9_9999_c000_0000n)] },  // ~0.8\n      { input: [-1.0, 1.0, 1.0], expected: 1.0 },\n      { input: [-1.0, 1.0, 2.0], expected: 3.0 },\n\n      // Infinities\n      { input: [0.0, kValue.f32.infinity.positive, 0.5], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, 0.0, 0.5], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, 1.0, 0.5], expected: kAnyBounds },\n      { input: [1.0, kValue.f32.infinity.negative, 0.5], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, 0.5], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative, 0.5], expected: kAnyBounds },\n      { input: [0.0, 1.0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [1.0, 0.0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [0.0, 1.0, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [1.0, 0.0, kValue.f32.infinity.positive], expected: kAnyBounds },\n\n      // Showing how precise and imprecise versions diff\n      { input: [kValue.f32.negative.min, 10.0, 1.0], expected: 0.0 },\n    ]\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.mixImpreciseInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.mixImpreciseInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('mixPreciseInterval_f32')\n  .paramsSubcasesOnly<ScalarTripleToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n\n      // [0.0, 1.0] cases\n      { input: [0.0, 1.0, -1.0], expected: -1.0 },\n      { input: [0.0, 1.0, 0.0], expected: 0.0 },\n      { input: [0.0, 1.0, 0.1], expected: [hexToF64(0x3fb9_9999_8000_0000n), hexToF64(0x3fb9_9999_a000_0000n)] },  // ~0.1\n      { input: [0.0, 1.0, 0.5], expected: 0.5 },\n      { input: [0.0, 1.0, 0.9], expected: [hexToF64(0x3fec_cccc_c000_0000n), hexToF64(0x3fec_cccc_e000_0000n)] },  // ~0.9\n      { input: [0.0, 1.0, 1.0], expected: 1.0 },\n      { input: [0.0, 1.0, 2.0], expected: 2.0 },\n\n      // [1.0, 0.0] cases\n      { input: [1.0, 0.0, -1.0], expected: 2.0 },\n      { input: [1.0, 0.0, 0.0], expected: 1.0 },\n      { input: [1.0, 0.0, 0.1], expected: [hexToF64(0x3fec_cccc_c000_0000n), hexToF64(0x3fec_cccc_e000_0000n)] },  // ~0.9\n      { input: [1.0, 0.0, 0.5], expected: 0.5 },\n      { input: [1.0, 0.0, 0.9], expected: [hexToF64(0x3fb9_9999_0000_0000n), hexToF64(0x3fb9_999a_0000_0000n)] },  // ~0.1\n      { input: [1.0, 0.0, 1.0], expected: 0.0 },\n      { input: [1.0, 0.0, 2.0], expected: -1.0 },\n\n      // [0.0, 10.0] cases\n      { input: [0.0, 10.0, -1.0], expected: -10.0 },\n      { input: [0.0, 10.0, 0.0], expected: 0.0 },\n      { input: [0.0, 10.0, 0.1], expected: [hexToF64(0x3fef_ffff_e000_0000n), hexToF64(0x3ff0_0000_2000_0000n)] },  // ~1\n      { input: [0.0, 10.0, 0.5], expected: 5.0 },\n      { input: [0.0, 10.0, 0.9], expected: [hexToF64(0x4021_ffff_e000_0000n), hexToF64(0x4022_0000_2000_0000n)] },  // ~9\n      { input: [0.0, 10.0, 1.0], expected: 10.0 },\n      { input: [0.0, 10.0, 2.0], expected: 20.0 },\n\n      // [2.0, 10.0] cases\n      { input: [2.0, 10.0, -1.0], expected: -6.0 },\n      { input: [2.0, 10.0, 0.0], expected: 2.0 },\n      { input: [2.0, 10.0, 0.1], expected: [hexToF64(0x4006_6666_4000_0000n), hexToF64(0x4006_6666_8000_0000n)] },  // ~2.8\n      { input: [2.0, 10.0, 0.5], expected: 6.0 },\n      { input: [2.0, 10.0, 0.9], expected: [hexToF64(0x4022_6666_4000_0000n), hexToF64(0x4022_6666_a000_0000n)] },  // ~9.2\n      { input: [2.0, 10.0, 1.0], expected: 10.0 },\n      { input: [2.0, 10.0, 2.0], expected: 18.0 },\n\n      // [-1.0, 1.0] cases\n      { input: [-1.0, 1.0, -2.0], expected: -5.0 },\n      { input: [-1.0, 1.0, 0.0], expected: -1.0 },\n      { input: [-1.0, 1.0, 0.1], expected: [hexToF64(0xbfe9_9999_c000_0000n), hexToF64(0xbfe9_9999_8000_0000n)] },  // ~-0.8\n      { input: [-1.0, 1.0, 0.5], expected: 0.0 },\n      { input: [-1.0, 1.0, 0.9], expected: [hexToF64(0x3fe9_9999_8000_0000n), hexToF64(0x3fe9_9999_c000_0000n)] },  // ~0.8\n      { input: [-1.0, 1.0, 1.0], expected: 1.0 },\n      { input: [-1.0, 1.0, 2.0], expected: 3.0 },\n\n      // Infinities\n      { input: [0.0, kValue.f32.infinity.positive, 0.5], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, 0.0, 0.5], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, 1.0, 0.5], expected: kAnyBounds },\n      { input: [1.0, kValue.f32.infinity.negative, 0.5], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.negative, kValue.f32.infinity.positive, 0.5], expected: kAnyBounds },\n      { input: [kValue.f32.infinity.positive, kValue.f32.infinity.negative, 0.5], expected: kAnyBounds },\n      { input: [0.0, 1.0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [1.0, 0.0, kValue.f32.infinity.negative], expected: kAnyBounds },\n      { input: [0.0, 1.0, kValue.f32.infinity.positive], expected: kAnyBounds },\n      { input: [1.0, 0.0, kValue.f32.infinity.positive], expected: kAnyBounds },\n\n      // Showing how precise and imprecise versions diff\n      { input: [kValue.f32.negative.min, 10.0, 1.0], expected: 10.0 },\n    ]\n  )\n  .fn(t => {\n    const [x, y, z] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.mixPreciseInterval(x, y, z);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.mixPreciseInterval(${x}, ${y}, ${z}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('smoothStepInterval_f32')\n  .paramsSubcasesOnly<ScalarTripleToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n\n      // Normals\n      { input: [0, 1, 0], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, 1, 1], expected: [hexToF32(0x3f7ffffa), hexToF32(0x3f800003)] },  // ~1\n      { input: [0, 1, 10], expected: 1 },\n      { input: [0, 1, -10], expected: 0 },\n      { input: [0, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [0, 2, 0.5], expected: [hexToF32(0x3e1ffffb), hexToF32(0x3e200007)] },  // ~0.15625...\n      { input: [2, 0, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [2, 0, 1.5], expected: [hexToF32(0x3e1ffffb), hexToF32(0x3e200007)] },  // ~0.15625...\n      { input: [0, 100, 50], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [0, 100, 25], expected: [hexToF32(0x3e1ffffb), hexToF32(0x3e200007)] },  // ~0.15625...\n      { input: [0, -2, -1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [0, -2, -0.5], expected: [hexToF32(0x3e1ffffb), hexToF32(0x3e200007)] },  // ~0.15625...\n\n      // Subnormals\n      { input: [0, 2, kValue.f32.subnormal.positive.max], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, 2, kValue.f32.subnormal.positive.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, 2, kValue.f32.subnormal.negative.max], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [0, 2, kValue.f32.subnormal.negative.min], expected: [0, kValue.f32.subnormal.positive.min] },\n      { input: [kValue.f32.subnormal.positive.max, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [kValue.f32.subnormal.positive.min, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [kValue.f32.subnormal.negative.max, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [kValue.f32.subnormal.negative.min, 2, 1], expected: [hexToF32(0x3efffff8), hexToF32(0x3f000007)] },  // ~0.5\n      { input: [0, kValue.f32.subnormal.positive.max, 1], expected: kAnyBounds },\n      { input: [0, kValue.f32.subnormal.positive.min, 1], expected: kAnyBounds },\n      { input: [0, kValue.f32.subnormal.negative.max, 1], expected: kAnyBounds },\n      { input: [0, kValue.f32.subnormal.negative.min, 1], expected: kAnyBounds },\n\n      // Infinities\n      { input: [0, 2, Number.POSITIVE_INFINITY], expected: kAnyBounds },\n      { input: [0, 2, Number.NEGATIVE_INFINITY], expected: kAnyBounds },\n      { input: [Number.POSITIVE_INFINITY, 2, 1], expected: kAnyBounds },\n      { input: [Number.NEGATIVE_INFINITY, 2, 1], expected: kAnyBounds },\n      { input: [0, Number.POSITIVE_INFINITY, 1], expected: kAnyBounds },\n      { input: [0, Number.NEGATIVE_INFINITY, 1], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const [low, high, x] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.smoothStepInterval(low, high, x);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.smoothStepInterval(${low}, ${high}, ${x}) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface ScalarToVectorCase {\n  input: number;\n  expected: (number | IntervalBounds)[];\n}\n\n// Scope for unpack* tests so that they can have constants for magic numbers\n// that don't pollute the global namespace or have unwieldy long names.\n{\n  const kZeroBounds: IntervalBounds = [hexToF32(0x81200000), hexToF32(0x01200000)];\n  const kOneBoundsSnorm: IntervalBounds = [\n    hexToF64(0x3fef_ffff_a000_0000n),\n    hexToF64(0x3ff0_0000_4000_0000n),\n  ];\n  const kOneBoundsUnorm: IntervalBounds = [\n    hexToF64(0x3fef_ffff_b000_0000n),\n    hexToF64(0x3ff0_0000_2800_0000n),\n  ];\n  const kNegOneBoundsSnorm: IntervalBounds = [\n    hexToF64(0xbff0_0000_0000_0000n),\n    hexToF64(0xbfef_ffff_a000_0000n),\n  ];\n\n  const kHalfBounds2x16snorm: IntervalBounds = [\n    hexToF64(0x3fe0_001f_a000_0000n),\n    hexToF64(0x3fe0_0020_8000_0000n),\n  ]; // ~0.5..., due to lack of precision in i16\n  const kNegHalfBounds2x16snorm: IntervalBounds = [\n    hexToF64(0xbfdf_ffc0_6000_0000n),\n    hexToF64(0xbfdf_ffbf_8000_0000n),\n  ]; // ~-0.5..., due to lack of precision in i16\n\n  g.test('unpack2x16snormInterval')\n    .paramsSubcasesOnly<ScalarToVectorCase>(\n      // prettier-ignore\n      [\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds] },\n        { input: 0x00007fff, expected: [kOneBoundsSnorm, kZeroBounds] },\n        { input: 0x7fff0000, expected: [kZeroBounds, kOneBoundsSnorm] },\n        { input: 0x7fff7fff, expected: [kOneBoundsSnorm, kOneBoundsSnorm] },\n        { input: 0x80018001, expected: [kNegOneBoundsSnorm, kNegOneBoundsSnorm] },\n        { input: 0x40004000, expected: [kHalfBounds2x16snorm, kHalfBounds2x16snorm] },\n        { input: 0xc001c001, expected: [kNegHalfBounds2x16snorm, kNegHalfBounds2x16snorm] },\n      ]\n    )\n    .fn(t => {\n      const expected = FP.f32.toVector(t.params.expected);\n      const got = FP.f32.unpack2x16snormInterval(t.params.input);\n      t.expect(\n        objectEquals(expected, got),\n        `unpack2x16snormInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n\n  g.test('unpack2x16floatInterval')\n    .paramsSubcasesOnly<ScalarToVectorCase>(\n      // prettier-ignore\n      [\n        // f16 normals\n        { input: 0x00000000, expected: [0, 0] },\n        { input: 0x80000000, expected: [0, 0] },\n        { input: 0x00008000, expected: [0, 0] },\n        { input: 0x80008000, expected: [0, 0] },\n        { input: 0x00003c00, expected: [1, 0] },\n        { input: 0x3c000000, expected: [0, 1] },\n        { input: 0x3c003c00, expected: [1, 1] },\n        { input: 0xbc00bc00, expected: [-1, -1] },\n        { input: 0x49004900, expected: [10, 10] },\n        { input: 0xc900c900, expected: [-10, -10] },\n\n        // f16 subnormals\n        { input: 0x000003ff, expected: [[0, kValue.f16.subnormal.positive.max], 0] },\n        { input: 0x000083ff, expected: [[kValue.f16.subnormal.negative.min, 0], 0] },\n\n        // f16 out of bounds\n        { input: 0x7c000000, expected: [kAnyBounds, kAnyBounds] },\n        { input: 0xffff0000, expected: [kAnyBounds, kAnyBounds] },\n      ]\n    )\n    .fn(t => {\n      const expected = FP.f32.toVector(t.params.expected);\n      const got = FP.f32.unpack2x16floatInterval(t.params.input);\n      t.expect(\n        objectEquals(expected, got),\n        `unpack2x16floatInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n\n  const kHalfBounds2x16unorm: IntervalBounds = [\n    hexToF64(0x3fe0_000f_b000_0000n),\n    hexToF64(0x3fe0_0010_7000_0000n),\n  ]; // ~0.5..., due to lack of precision in u16\n\n  g.test('unpack2x16unormInterval')\n    .paramsSubcasesOnly<ScalarToVectorCase>(\n      // prettier-ignore\n      [\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds] },\n        { input: 0x0000ffff, expected: [kOneBoundsUnorm, kZeroBounds] },\n        { input: 0xffff0000, expected: [kZeroBounds, kOneBoundsUnorm] },\n        { input: 0xffffffff, expected: [kOneBoundsUnorm, kOneBoundsUnorm] },\n        { input: 0x80008000, expected: [kHalfBounds2x16unorm, kHalfBounds2x16unorm] },\n      ]\n    )\n    .fn(t => {\n      const expected = FP.f32.toVector(t.params.expected);\n      const got = FP.f32.unpack2x16unormInterval(t.params.input);\n      t.expect(\n        objectEquals(expected, got),\n        `unpack2x16unormInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n\n  const kHalfBounds4x8snorm: IntervalBounds = [\n    hexToF64(0x3fe0_2040_2000_0000n),\n    hexToF64(0x3fe0_2041_0000_0000n),\n  ]; // ~0.50196..., due to lack of precision in i8\n  const kNegHalfBounds4x8snorm: IntervalBounds = [\n    hexToF64(0xbfdf_bf7f_6000_0000n),\n    hexToF64(0xbfdf_bf7e_8000_0000n),\n  ]; // ~-0.49606..., due to lack of precision in i8\n\n  g.test('unpack4x8snormInterval')\n    .paramsSubcasesOnly<ScalarToVectorCase>(\n      // prettier-ignore\n      [\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x0000007f, expected: [kOneBoundsSnorm, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x00007f00, expected: [kZeroBounds, kOneBoundsSnorm, kZeroBounds, kZeroBounds] },\n        { input: 0x007f0000, expected: [kZeroBounds, kZeroBounds, kOneBoundsSnorm, kZeroBounds] },\n        { input: 0x7f000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kOneBoundsSnorm] },\n        { input: 0x00007f7f, expected: [kOneBoundsSnorm, kOneBoundsSnorm, kZeroBounds, kZeroBounds] },\n        { input: 0x7f7f0000, expected: [kZeroBounds, kZeroBounds, kOneBoundsSnorm, kOneBoundsSnorm] },\n        { input: 0x7f007f00, expected: [kZeroBounds, kOneBoundsSnorm, kZeroBounds, kOneBoundsSnorm] },\n        { input: 0x007f007f, expected: [kOneBoundsSnorm, kZeroBounds, kOneBoundsSnorm, kZeroBounds] },\n        { input: 0x7f7f7f7f, expected: [kOneBoundsSnorm, kOneBoundsSnorm, kOneBoundsSnorm, kOneBoundsSnorm] },\n        { input: 0x81818181, expected: [kNegOneBoundsSnorm, kNegOneBoundsSnorm, kNegOneBoundsSnorm, kNegOneBoundsSnorm] },\n        { input: 0x40404040, expected: [kHalfBounds4x8snorm, kHalfBounds4x8snorm, kHalfBounds4x8snorm, kHalfBounds4x8snorm] },\n        { input: 0xc1c1c1c1, expected: [kNegHalfBounds4x8snorm, kNegHalfBounds4x8snorm, kNegHalfBounds4x8snorm, kNegHalfBounds4x8snorm] },\n      ]\n    )\n    .fn(t => {\n      const expected = FP.f32.toVector(t.params.expected);\n      const got = FP.f32.unpack4x8snormInterval(t.params.input);\n      t.expect(\n        objectEquals(expected, got),\n        `unpack4x8snormInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n\n  const kHalfBounds4x8unorm: IntervalBounds = [\n    hexToF64(0x3fe0_100f_b000_0000n),\n    hexToF64(0x3fe0_1010_7000_0000n),\n  ]; // ~0.50196..., due to lack of precision in u8\n\n  g.test('unpack4x8unormInterval')\n    .paramsSubcasesOnly<ScalarToVectorCase>(\n      // prettier-ignore\n      [\n        { input: 0x00000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x000000ff, expected: [kOneBoundsUnorm, kZeroBounds, kZeroBounds, kZeroBounds] },\n        { input: 0x0000ff00, expected: [kZeroBounds, kOneBoundsUnorm, kZeroBounds, kZeroBounds] },\n        { input: 0x00ff0000, expected: [kZeroBounds, kZeroBounds, kOneBoundsUnorm, kZeroBounds] },\n        { input: 0xff000000, expected: [kZeroBounds, kZeroBounds, kZeroBounds, kOneBoundsUnorm] },\n        { input: 0x0000ffff, expected: [kOneBoundsUnorm, kOneBoundsUnorm, kZeroBounds, kZeroBounds] },\n        { input: 0xffff0000, expected: [kZeroBounds, kZeroBounds, kOneBoundsUnorm, kOneBoundsUnorm] },\n        { input: 0xff00ff00, expected: [kZeroBounds, kOneBoundsUnorm, kZeroBounds, kOneBoundsUnorm] },\n        { input: 0x00ff00ff, expected: [kOneBoundsUnorm, kZeroBounds, kOneBoundsUnorm, kZeroBounds] },\n        { input: 0xffffffff, expected: [kOneBoundsUnorm, kOneBoundsUnorm, kOneBoundsUnorm, kOneBoundsUnorm] },\n        { input: 0x80808080, expected: [kHalfBounds4x8unorm, kHalfBounds4x8unorm, kHalfBounds4x8unorm, kHalfBounds4x8unorm] },\n      ]\n    )\n    .fn(t => {\n      const expected = FP.f32.toVector(t.params.expected);\n      const got = FP.f32.unpack4x8unormInterval(t.params.input);\n      t.expect(\n        objectEquals(expected, got),\n        `unpack4x8unormInterval(${t.params.input}) returned [${got}]. Expected [${expected}]`\n      );\n    });\n}\n\ninterface VectorToIntervalCase {\n  input: number[];\n  expected: number | IntervalBounds;\n}\n\ng.test('lengthIntervalVector_f32')\n  .paramsSubcasesOnly<VectorToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n\n      // vec2\n      {input: [1.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 1.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [1.0, 1.0], expected: [hexToF64(0x3ff6_a09d_b000_0000n), hexToF64(0x3ff6_a09f_1000_0000n)] },  // ~√2\n      {input: [-1.0, -1.0], expected: [hexToF64(0x3ff6_a09d_b000_0000n), hexToF64(0x3ff6_a09f_1000_0000n)] },  // ~√2\n      {input: [-1.0, 1.0], expected: [hexToF64(0x3ff6_a09d_b000_0000n), hexToF64(0x3ff6_a09f_1000_0000n)] },  // ~√2\n      {input: [0.1, 0.0], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n\n      // vec3\n      {input: [1.0, 0.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 1.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 0.0, 1.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [1.0, 1.0, 1.0], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      {input: [-1.0, -1.0, -1.0], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      {input: [1.0, -1.0, -1.0], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      {input: [0.1, 0.0, 0.0], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n\n      // vec4\n      {input: [1.0, 0.0, 0.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 1.0, 0.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 0.0, 1.0, 0.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [0.0, 0.0, 0.0, 1.0], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      {input: [1.0, 1.0, 1.0, 1.0], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      {input: [-1.0, -1.0, -1.0, -1.0], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      {input: [-1.0, 1.0, -1.0, 1.0], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      {input: [0.1, 0.0, 0.0, 0.0], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n\n      // Test that dot going OOB bounds in the intermediate calculations propagates\n      { input: [kValue.f32.positive.nearest_max, kValue.f32.positive.max, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [kValue.f32.positive.max, kValue.f32.positive.nearest_max, kValue.f32.negative.min], expected: kAnyBounds },\n      { input: [kValue.f32.negative.min, kValue.f32.positive.max, kValue.f32.positive.nearest_max], expected: kAnyBounds },\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.lengthInterval(t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.lengthInterval([${t.params.input}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorPairToIntervalCase {\n  input: [number[], number[]];\n  expected: number | IntervalBounds;\n}\n\ng.test('distanceIntervalVector_f32')\n  .paramsSubcasesOnly<VectorPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // Some of these are hard coded, since the error intervals are difficult\n      // to express in a closed human-readable form due to the inherited nature\n      // of the errors.\n      //\n      // distance(x, y), where x - y = 0 has an acceptance interval of kAnyBounds,\n      // because distance(x, y) = length(x - y), and length(0) = kAnyBounds\n\n      // vec2\n      { input: [[1.0, 0.0], [1.0, 0.0]], expected: kAnyBounds },\n      { input: [[1.0, 0.0], [0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0], [1.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[-1.0, 0.0], [0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0], [-1.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 1.0], [-1.0, 0.0]], expected: [hexToF64(0x3ff6_a09d_b000_0000n), hexToF64(0x3ff6_a09f_1000_0000n)] },  // ~√2\n      { input: [[0.1, 0.0], [0.0, 0.0]], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n\n      // vec3\n      { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: kAnyBounds },\n      { input: [[1.0, 0.0, 0.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 1.0, 0.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 1.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 0.0], [0.0, 1.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 0.0], [0.0, 0.0, 1.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[1.0, 1.0, 1.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      { input: [[0.0, 0.0, 0.0], [1.0, 1.0, 1.0]], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      { input: [[-1.0, -1.0, -1.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      { input: [[0.0, 0.0, 0.0], [-1.0, -1.0, -1.0]], expected: [hexToF64(0x3ffb_b67a_1000_0000n), hexToF64(0x3ffb_b67b_b000_0000n)] },  // ~√3\n      { input: [[0.1, 0.0, 0.0], [0.0, 0.0, 0.0]], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      { input: [[0.0, 0.0, 0.0], [0.1, 0.0, 0.0]], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n\n      // vec4\n      { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: kAnyBounds },\n      { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 1.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 1.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1.0, 0.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.0]], expected: [hexToF64(0x3fef_ffff_7000_0000n), hexToF64(0x3ff0_0000_9000_0000n)] },  // ~1\n      { input: [[1.0, 1.0, 1.0, 1.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      { input: [[0.0, 0.0, 0.0, 0.0], [1.0, 1.0, 1.0, 1.0]], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      { input: [[-1.0, 1.0, -1.0, 1.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      { input: [[0.0, 0.0, 0.0, 0.0], [1.0, -1.0, 1.0, -1.0]], expected: [hexToF64(0x3fff_ffff_7000_0000n), hexToF64(0x4000_0000_9000_0000n)] },  // ~2\n      { input: [[0.1, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n      { input: [[0.0, 0.0, 0.0, 0.0], [0.1, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fb9_9998_9000_0000n), hexToF64(0x3fb9_999a_7000_0000n)] },  // ~0.1\n    ]\n  )\n  .fn(t => {\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.distanceInterval(...t.params.input);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.distanceInterval([${t.params.input[0]}, ${t.params.input[1]}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('dotInterval_f32')\n  .paramsSubcasesOnly<VectorPairToIntervalCase>(\n    // prettier-ignore\n    [\n      // vec2\n      { input: [[1.0, 0.0], [1.0, 0.0]], expected: 1.0 },\n      { input: [[0.0, 1.0], [0.0, 1.0]], expected: 1.0 },\n      { input: [[1.0, 1.0], [1.0, 1.0]], expected: 2.0 },\n      { input: [[-1.0, -1.0], [-1.0, -1.0]], expected: 2.0 },\n      { input: [[-1.0, 1.0], [1.0, -1.0]], expected: -2.0 },\n      { input: [[0.1, 0.0], [1.0, 0.0]], expected: [hexToF64(0x3fb9_9999_8000_0000n), hexToF64(0x3fb9_9999_a000_0000n)]},  // ~0.1\n\n      // vec3\n      { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: 1.0 },\n      { input: [[0.0, 1.0, 0.0], [0.0, 1.0, 0.0]], expected: 1.0 },\n      { input: [[0.0, 0.0, 1.0], [0.0, 0.0, 1.0]], expected: 1.0 },\n      { input: [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], expected: 3.0 },\n      { input: [[-1.0, -1.0, -1.0], [-1.0, -1.0, -1.0]], expected: 3.0 },\n      { input: [[1.0, -1.0, -1.0], [-1.0, 1.0, -1.0]], expected: -1.0 },\n      { input: [[0.1, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [hexToF64(0x3fb9_9999_8000_0000n), hexToF64(0x3fb9_9999_a000_0000n)]},  // ~0.1\n\n      // vec4\n      { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: 1.0 },\n      { input: [[0.0, 1.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0]], expected: 1.0 },\n      { input: [[0.0, 0.0, 1.0, 0.0], [0.0, 0.0, 1.0, 0.0]], expected: 1.0 },\n      { input: [[0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 1.0]], expected: 1.0 },\n      { input: [[1.0, 1.0, 1.0, 1.0], [1.0, 1.0, 1.0, 1.0]], expected: 4.0 },\n      { input: [[-1.0, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, -1.0]], expected: 4.0 },\n      { input: [[-1.0, 1.0, -1.0, 1.0], [1.0, -1.0, 1.0, -1.0]], expected: -4.0 },\n      { input: [[0.1, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [hexToF64(0x3fb9_9999_8000_0000n), hexToF64(0x3fb9_9999_a000_0000n)]},  // ~0.1\n\n      // Test that going out of bounds in the intermediate calculations is caught correctly.\n      { input: [[kValue.f32.positive.nearest_max, kValue.f32.positive.max, kValue.f32.negative.min], [1.0, 1.0, 1.0]], expected: kAnyBounds },\n      { input: [[kValue.f32.positive.nearest_max, kValue.f32.negative.min, kValue.f32.positive.max], [1.0, 1.0, 1.0]], expected: kAnyBounds },\n      { input: [[kValue.f32.positive.max, kValue.f32.positive.nearest_max, kValue.f32.negative.min], [1.0, 1.0, 1.0]], expected: kAnyBounds },\n      { input: [[kValue.f32.negative.min, kValue.f32.positive.nearest_max, kValue.f32.positive.max], [1.0, 1.0, 1.0]], expected: kAnyBounds },\n      { input: [[kValue.f32.positive.max, kValue.f32.negative.min, kValue.f32.positive.nearest_max], [1.0, 1.0, 1.0]], expected: kAnyBounds },\n      { input: [[kValue.f32.negative.min, kValue.f32.positive.max, kValue.f32.positive.nearest_max], [1.0, 1.0, 1.0]], expected: kAnyBounds },\n\n      // https://github.com/gpuweb/cts/issues/2155\n      { input: [[kValue.f32.positive.max, 1.0, 2.0, 3.0], [-1.0, kValue.f32.positive.max, -2.0, -3.0]], expected: [-13, 0] },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toInterval(t.params.expected);\n    const got = FP.f32.dotInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.dotInterval([${x}], [${y}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorToVectorCase {\n  input: number[];\n  expected: (number | IntervalBounds)[];\n}\n\ng.test('normalizeInterval_f32')\n  .paramsSubcasesOnly<VectorToVectorCase>(\n    // prettier-ignore\n    [\n      // vec2\n      {input: [1.0, 0.0], expected: [[hexToF64(0x3fef_fffe_7000_0000n), hexToF64(0x3ff0_0000_b000_0000n)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0]\n      {input: [0.0, 1.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3fef_fffe_7000_0000n), hexToF64(0x3ff0_0000_b000_0000n)]] },  // [ ~0.0, ~1.0]\n      {input: [-1.0, 0.0], expected: [[hexToF64(0xbff0_0000_b000_0000n), hexToF64(0xbfef_fffe_7000_0000n)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0]\n      {input: [1.0, 1.0], expected: [[hexToF64(0x3fe6_a09d_5000_0000n), hexToF64(0x3fe6_a09f_9000_0000n)], [hexToF64(0x3fe6_a09d_5000_0000n), hexToF64(0x3fe6_a09f_9000_0000n)]] },  // [ ~1/√2, ~1/√2]\n\n      // vec3\n      {input: [1.0, 0.0, 0.0], expected: [[hexToF64(0x3fef_fffe_7000_0000n), hexToF64(0x3ff0_0000_b000_0000n)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0]\n      {input: [0.0, 1.0, 0.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3fef_fffe_7000_0000n), hexToF64(0x3ff0_0000_b000_0000n)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~0.0, ~1.0, ~0.0]\n      {input: [0.0, 0.0, 1.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3fef_fffe_7000_0000n), hexToF64(0x3ff0_0000_b000_0000n)]] },  // [ ~0.0, ~0.0, ~1.0]\n      {input: [-1.0, 0.0, 0.0], expected: [[hexToF64(0xbff0_0000_b000_0000n), hexToF64(0xbfef_fffe_7000_0000n)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0]\n      {input: [1.0, 1.0, 1.0], expected: [[hexToF64(0x3fe2_79a6_5000_0000n), hexToF64(0x3fe2_79a8_5000_0000n)], [hexToF64(0x3fe2_79a6_5000_0000n), hexToF64(0x3fe2_79a8_5000_0000n)], [hexToF64(0x3fe2_79a6_5000_0000n), hexToF64(0x3fe2_79a8_5000_0000n)]] },  // [ ~1/√3, ~1/√3, ~1/√3]\n\n      // vec4\n      {input: [1.0, 0.0, 0.0, 0.0], expected: [[hexToF64(0x3fef_fffe_7000_0000n), hexToF64(0x3ff0_0000_b000_0000n)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0, ~0.0]\n      {input: [0.0, 1.0, 0.0, 0.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3fef_fffe_7000_0000n), hexToF64(0x3ff0_0000_b000_0000n)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~0.0, ~1.0, ~0.0, ~0.0]\n      {input: [0.0, 0.0, 1.0, 0.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3fef_fffe_7000_0000n), hexToF64(0x3ff0_0000_b000_0000n)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~0.0, ~0.0, ~1.0, ~0.0]\n      {input: [0.0, 0.0, 0.0, 1.0], expected: [[hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF64(0x3fef_fffe_7000_0000n), hexToF64(0x3ff0_0000_b000_0000n)]] },  // [ ~0.0, ~0.0, ~0.0, ~1.0]\n      {input: [-1.0, 0.0, 0.0, 0.0], expected: [[hexToF64(0xbff0_0000_b000_0000n), hexToF64(0xbfef_fffe_7000_0000n)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)], [hexToF32(0x81200000), hexToF32(0x01200000)]] },  // [ ~1.0, ~0.0, ~0.0, ~0.0]\n      {input: [1.0, 1.0, 1.0, 1.0], expected: [[hexToF64(0x3fdf_fffe_7000_0000n), hexToF64(0x3fe0_0000_b000_0000n)], [hexToF64(0x3fdf_fffe_7000_0000n), hexToF64(0x3fe0_0000_b000_0000n)], [hexToF64(0x3fdf_fffe_7000_0000n), hexToF64(0x3fe0_0000_b000_0000n)], [hexToF64(0x3fdf_fffe_7000_0000n), hexToF64(0x3fe0_0000_b000_0000n)]] },  // [ ~1/√4, ~1/√4, ~1/√4]\n    ]\n  )\n  .fn(t => {\n    const x = t.params.input;\n    const expected = FP.f32.toVector(t.params.expected);\n    const got = FP.f32.normalizeInterval(x);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.normalizeInterval([${x}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ninterface VectorPairToVectorCase {\n  input: [number[], number[]];\n  expected: (number | IntervalBounds)[];\n}\n\ng.test('crossInterval_f32')\n  .paramsSubcasesOnly<VectorPairToVectorCase>(\n    // prettier-ignore\n    [\n      // parallel vectors, AXB == 0\n      { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [0.0, 0.0, 0.0] },\n      { input: [[0.0, 1.0, 0.0], [0.0, 1.0, 0.0]], expected: [0.0, 0.0, 0.0] },\n      { input: [[0.0, 0.0, 1.0], [0.0, 0.0, 1.0]], expected: [0.0, 0.0, 0.0] },\n      { input: [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], expected: [0.0, 0.0, 0.0] },\n      { input: [[-1.0, -1.0, -1.0], [-1.0, -1.0, -1.0]], expected: [0.0, 0.0, 0.0] },\n      { input: [[0.1, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [0.0, 0.0, 0.0] },\n      { input: [[kValue.f32.subnormal.positive.max, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [0.0, 0.0, 0.0] },\n\n      // non-parallel vectors, AXB != 0\n      // f32 normals\n      { input: [[1.0, -1.0, -1.0], [-1.0, 1.0, -1.0]], expected: [2.0, 2.0, 0.0] },\n      { input: [[1.0, 2, 3], [1.0, 5.0, 7.0]], expected: [-1, -4, 3] },\n\n      // f64 normals\n      { input: [[0.1, -0.1, -0.1], [-0.1, 0.1, -0.1]],\n        expected: [[hexToF32(0x3ca3d708), hexToF32(0x3ca3d70b)],  // ~0.02\n          [hexToF32(0x3ca3d708), hexToF32(0x3ca3d70b)],  // ~0.02\n          [hexToF32(0xb1400000), hexToF32(0x31400000)]] },  // ~0\n\n      // f32 subnormals\n      { input: [[kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.max, kValue.f32.subnormal.negative.min],\n          [kValue.f32.subnormal.negative.min, kValue.f32.subnormal.positive.min, kValue.f32.subnormal.negative.max]],\n        expected: [[0.0, hexToF32(0x00000002)],  // ~0\n          [0.0, hexToF32(0x00000002)],  // ~0\n          [hexToF32(0x80000001), hexToF32(0x00000001)]] },  // ~0\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toVector(t.params.expected);\n    const got = FP.f32.crossInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.crossInterval([${x}], [${y}]) returned ${got}. Expected ${expected}`\n    );\n  });\n\ng.test('reflectInterval_f32')\n  .paramsSubcasesOnly<VectorPairToVectorCase>(\n    // prettier-ignore\n    [\n      // vec2s\n      { input: [[1.0, 0.0], [1.0, 0.0]], expected: [-1.0, 0.0] },\n      { input: [[1.0, 0.0], [0.0, 1.0]], expected: [1.0, 0.0] },\n      { input: [[0.0, 1.0], [0.0, 1.0]], expected: [0.0, -1.0] },\n      { input: [[0.0, 1.0], [1.0, 0.0]], expected: [0.0, 1.0] },\n      { input: [[1.0, 1.0], [1.0, 1.0]], expected: [-3.0, -3.0] },\n      { input: [[-1.0, -1.0], [1.0, 1.0]], expected: [3.0, 3.0] },\n      { input: [[0.1, 0.1], [1.0, 1.0]], expected: [[hexToF32(0xbe99999a), hexToF32(0xbe999998)], [hexToF32(0xbe99999a), hexToF32(0xbe999998)]] },  // [~-0.3, ~-0.3]\n      { input: [[kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.max], [1.0, 1.0]], expected: [[hexToF32(0x80fffffe), hexToF32(0x00800001)], [hexToF32(0x80ffffff), hexToF32(0x00000002)]] },  // [~0.0, ~0.0]\n\n      // vec3s\n      { input: [[1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], expected: [-1.0, 0.0, 0.0] },\n      { input: [[0.0, 1.0, 0.0], [1.0, 0.0, 0.0]], expected: [0.0, 1.0, 0.0] },\n      { input: [[0.0, 0.0, 1.0], [1.0, 0.0, 0.0]], expected: [0.0, 0.0, 1.0] },\n      { input: [[1.0, 0.0, 0.0], [0.0, 1.0, 0.0]], expected: [1.0, 0.0, 0.0] },\n      { input: [[1.0, 0.0, 0.0], [0.0, 0.0, 1.0]], expected: [1.0, 0.0, 0.0] },\n      { input: [[1.0, 1.0, 1.0], [1.0, 1.0, 1.0]], expected: [-5.0, -5.0, -5.0] },\n      { input: [[-1.0, -1.0, -1.0], [1.0, 1.0, 1.0]], expected: [5.0, 5.0, 5.0] },\n      { input: [[0.1, 0.1, 0.1], [1.0, 1.0, 1.0]], expected: [[hexToF32(0xbf000001), hexToF32(0xbefffffe)], [hexToF32(0xbf000001), hexToF32(0xbefffffe)], [hexToF32(0xbf000001), hexToF32(0xbefffffe)]] },  // [~-0.5, ~-0.5, ~-0.5]\n      { input: [[kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.max, 0.0], [1.0, 1.0, 1.0]], expected: [[hexToF32(0x80fffffe), hexToF32(0x00800001)], [hexToF32(0x80ffffff), hexToF32(0x00000002)], [hexToF32(0x80fffffe), hexToF32(0x00000002)]] },  // [~0.0, ~0.0, ~0.0]\n\n      // vec4s\n      { input: [[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [-1.0, 0.0, 0.0, 0.0] },\n      { input: [[0.0, 1.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [0.0, 1.0, 0.0, 0.0] },\n      { input: [[0.0, 0.0, 1.0, 0.0], [1.0, 0.0, 0.0, 0.0]], expected: [0.0, 0.0, 1.0, 0.0] },\n      { input: [[0.0, 0.0, 0.0, 1.0], [1.0, 0.0, 0.0, 0.0]], expected: [0.0, 0.0, 0.0, 1.0] },\n      { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0]], expected: [1.0, 0.0, 0.0, 0.0] },\n      { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 1.0, 0.0]], expected: [1.0, 0.0, 0.0, 0.0] },\n      { input: [[1.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.0]], expected: [1.0, 0.0, 0.0, 0.0] },\n      { input: [[-1.0, -1.0, -1.0, -1.0], [1.0, 1.0, 1.0, 1.0]], expected: [7.0, 7.0, 7.0, 7.0] },\n      { input: [[0.1, 0.1, 0.1, 0.1], [1.0, 1.0, 1.0, 1.0]], expected: [[hexToF32(0xbf333335), hexToF32(0xbf333332)], [hexToF32(0xbf333335), hexToF32(0xbf333332)], [hexToF32(0xbf333335), hexToF32(0xbf333332)], [hexToF32(0xbf333335), hexToF32(0xbf333332)]] },  // [~-0.7, ~-0.7, ~-0.7, ~-0.7]\n      { input: [[kValue.f32.subnormal.positive.max, kValue.f32.subnormal.negative.max, 0.0, 0.0], [1.0, 1.0, 1.0, 1.0]], expected: [[hexToF32(0x80fffffe), hexToF32(0x00800001)], [hexToF32(0x80ffffff), hexToF32(0x00000002)], [hexToF32(0x80fffffe), hexToF32(0x00000002)], [hexToF32(0x80fffffe), hexToF32(0x00000002)]] },  // [~0.0, ~0.0, ~0.0, ~0.0]\n\n      // Test that dot going OOB bounds in the intermediate calculations propagates\n      { input: [[kValue.f32.positive.nearest_max, kValue.f32.positive.max, kValue.f32.negative.min], [1.0, 1.0, 1.0]], expected: [kAnyBounds, kAnyBounds, kAnyBounds] },\n      { input: [[kValue.f32.positive.nearest_max, kValue.f32.negative.min, kValue.f32.positive.max], [1.0, 1.0, 1.0]], expected: [kAnyBounds, kAnyBounds, kAnyBounds] },\n      { input: [[kValue.f32.positive.max, kValue.f32.positive.nearest_max, kValue.f32.negative.min], [1.0, 1.0, 1.0]], expected: [kAnyBounds, kAnyBounds, kAnyBounds] },\n      { input: [[kValue.f32.negative.min, kValue.f32.positive.nearest_max, kValue.f32.positive.max], [1.0, 1.0, 1.0]], expected: [kAnyBounds, kAnyBounds, kAnyBounds] },\n      { input: [[kValue.f32.positive.max, kValue.f32.negative.min, kValue.f32.positive.nearest_max], [1.0, 1.0, 1.0]], expected: [kAnyBounds, kAnyBounds, kAnyBounds] },\n      { input: [[kValue.f32.negative.min, kValue.f32.positive.max, kValue.f32.positive.nearest_max], [1.0, 1.0, 1.0]], expected: [kAnyBounds, kAnyBounds, kAnyBounds] },\n\n      // Test that post-dot going OOB propagates\n      { input: [[kValue.f32.positive.max, 1.0, 2.0, 3.0], [-1.0, kValue.f32.positive.max, -2.0, -3.0]], expected: [kAnyBounds, kAnyBounds, kAnyBounds, kAnyBounds] },\n    ]\n  )\n  .fn(t => {\n    const [x, y] = t.params.input;\n    const expected = FP.f32.toVector(t.params.expected);\n    const got = FP.f32.reflectInterval(x, y);\n    t.expect(\n      objectEquals(expected, got),\n      `f32.reflectInterval([${x}], [${y}]) returned ${JSON.stringify(\n        got\n      )}. Expected ${JSON.stringify(expected)}`\n    );\n  });\n"],"mappings":"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CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAET,QAAQ,EAAE,EAAE,CAAC,CAAC;AACrC,EAAES,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,EAAET,QAAQ,EAAE,EAAE,CAAC,CAAC;AACrC,EAAES,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAET,QAAQ,EAAE,EAAE,CAAC,CAAC;AACrC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACrC,EAAES,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAET,QAAQ,EAAE,CAAC,CAAC,CAAC;AACrC,EAAES,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,E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"}