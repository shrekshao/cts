{"version":3,"sources":["../../src/unittests/check_contents.spec.ts"],"names":["description","Fixture","makeTestGroup","checkElementsEqual","F","test","substr","result","undefined","expect","message","indexOf","g","fn","t","shouldThrow","Uint8Array","Uint16Array","Uint32Array","Float32Array","actual","exp","i","Int32Array","Float64Array"],"mappings":"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","sourcesContent":["export const description = `Unit tests for check_contents`;\n\nimport { Fixture } from '../common/framework/fixture.js';\nimport { makeTestGroup } from '../common/internal/test_group.js';\nimport { ErrorWithExtra } from '../common/util/util.js';\nimport { checkElementsEqual } from '../webgpu/util/check_contents.js';\n\nclass F extends Fixture {\n  test(substr: undefined | string, result: undefined | ErrorWithExtra) {\n    if (substr === undefined) {\n      this.expect(result === undefined, result?.message);\n    } else {\n      this.expect(result !== undefined && result.message.indexOf(substr) !== -1, result?.message);\n    }\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('checkElementsEqual').fn(t => {\n  t.shouldThrow('Error', () => checkElementsEqual(new Uint8Array(), new Uint16Array()));\n  t.shouldThrow('Error', () => checkElementsEqual(new Uint32Array(), new Float32Array()));\n  t.shouldThrow('Error', () => checkElementsEqual(new Uint8Array([]), new Uint8Array([0])));\n  t.shouldThrow('Error', () => checkElementsEqual(new Uint8Array([0]), new Uint8Array([])));\n  {\n    t.test(undefined, checkElementsEqual(new Uint8Array([]), new Uint8Array([])));\n    t.test(undefined, checkElementsEqual(new Uint8Array([0]), new Uint8Array([0])));\n    t.test(undefined, checkElementsEqual(new Uint8Array([1]), new Uint8Array([1])));\n    t.test(\n      `\n Starting at index 0:\n   actual == 0x: 00\n   failed ->     xx\n expected ==     01`,\n      checkElementsEqual(new Uint8Array([0]), new Uint8Array([1]))\n    );\n    t.test(\n      'expected ==     01 02 01',\n      checkElementsEqual(new Uint8Array([1, 1, 1]), new Uint8Array([1, 2, 1]))\n    );\n  }\n  {\n    const actual = new Uint8Array(280);\n    const exp = new Uint8Array(280);\n    for (let i = 2; i < 20; ++i) actual[i] = i - 4;\n    t.test(\n      '00 fe ff 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 00',\n      checkElementsEqual(actual, exp)\n    );\n    for (let i = 2; i < 280; ++i) actual[i] = i - 4;\n    t.test('Starting at index 1:', checkElementsEqual(actual, exp));\n    for (let i = 0; i < 2; ++i) actual[i] = i - 4;\n    t.test('Starting at index 0:', checkElementsEqual(actual, exp));\n  }\n  {\n    const actual = new Int32Array(30);\n    const exp = new Int32Array(30);\n    for (let i = 2; i < 7; ++i) actual[i] = i - 3;\n    t.test('00000002 00000003 00000000\\n', checkElementsEqual(actual, exp));\n    for (let i = 2; i < 30; ++i) actual[i] = i - 3;\n    t.test('00000000 00000000 ...', checkElementsEqual(actual, exp));\n  }\n  {\n    const actual = new Float64Array(30);\n    const exp = new Float64Array(30);\n    for (let i = 2; i < 7; ++i) actual[i] = (i - 4) * 1e100;\n    t.test('2.000e+100 0.000\\n', checkElementsEqual(actual, exp));\n    for (let i = 2; i < 280; ++i) actual[i] = (i - 4) * 1e100;\n    t.test('6.000e+100 7.000e+100 ...', checkElementsEqual(actual, exp));\n  }\n});\n"],"file":"check_contents.spec.js"}