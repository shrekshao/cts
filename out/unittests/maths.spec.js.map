{"version":3,"sources":["../../src/unittests/maths.spec.ts"],"names":["description","makeTestGroup","kBit","kValue","f32","f32Bits","float32ToUint32","biasedRange","correctlyRounded","diffULP","lerp","linearRange","nextAfter","UnitTest","g","hexToF32","hex","Float32Array","Uint32Array","buffer","hexToFloat64","h32","l32","u32Arr","f64Arr","Float64Array","compareArrayOfNumbers","got","expect","length","every","value","index","expected","Number","isNaN","test","paramsSimple","a","b","ulp","fn","t","params","paramsSubcasesOnly","val","NaN","dir","result","POSITIVE_INFINITY","infinity","positive","NEGATIVE_INFINITY","negative","min","max","subnormal","expect_type","got_type","test_val","nan","s","target","is_correct","q","zero","num_steps","Array","fill","bits","val_to_bits","bits_to_val"],"mappings":"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","sourcesContent":["export const description = `\nUtil math unit tests.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { kBit, kValue } from '../webgpu/util/constants.js';\nimport { f32, f32Bits, float32ToUint32, Scalar } from '../webgpu/util/conversion.js';\nimport {\n  biasedRange,\n  correctlyRounded,\n  diffULP,\n  lerp,\n  linearRange,\n  nextAfter,\n} from '../webgpu/util/math.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\n/** Converts a 32-bit hex values to a 32-bit float value */\nfunction hexToF32(hex: number): number {\n  return new Float32Array(new Uint32Array([hex]).buffer)[0];\n}\n\n/** Converts two 32-bit hex values to a 64-bit float value */\nfunction hexToFloat64(h32: number, l32: number): number {\n  const u32Arr = new Uint32Array(2);\n  u32Arr[0] = l32;\n  u32Arr[1] = h32;\n  const f64Arr = new Float64Array(u32Arr.buffer);\n  return f64Arr[0];\n}\n\n/**\n * @returns true if arrays are equal, doing element-wise comparison as needed, and considering NaNs to be equal.\n *\n * Depends on the correctness of diffULP, which is tested in this file.\n **/\nfunction compareArrayOfNumbers(got: Array<number>, expect: Array<number>): boolean {\n  return (\n    got.length === expect.length &&\n    got.every((value, index) => {\n      const expected = expect[index];\n      return 1 >= diffULP(value, expected) || Number.isNaN(value && Number.isNaN(expected));\n    })\n  );\n}\n\ninterface DiffULPCase {\n  a: number;\n  b: number;\n  ulp: number;\n}\n\ng.test('test,math,diffULP')\n  .paramsSimple<DiffULPCase>([\n    { a: 0, b: 0, ulp: 0 },\n    { a: 1, b: 2, ulp: 2 ** 23 }, // Single exponent step\n    { a: 2, b: 1, ulp: 2 ** 23 }, // Single exponent step\n    { a: 2, b: 4, ulp: 2 ** 23 }, // Single exponent step\n    { a: 4, b: 2, ulp: 2 ** 23 }, // Single exponent step\n    { a: -1, b: -2, ulp: 2 ** 23 }, // Single exponent step\n    { a: -2, b: -1, ulp: 2 ** 23 }, // Single exponent step\n    { a: -2, b: -4, ulp: 2 ** 23 }, // Single exponent step\n    { a: -4, b: -2, ulp: 2 ** 23 }, // Single exponent step\n    { a: 1, b: 4, ulp: 2 ** 24 }, // Double exponent step\n    { a: 4, b: 1, ulp: 2 ** 24 }, // Double exponent step\n    { a: -1, b: -4, ulp: 2 ** 24 }, // Double exponent step\n    { a: -4, b: -1, ulp: 2 ** 24 }, // Double exponent step\n    { a: hexToF32(0x00800000), b: hexToF32(0x00800001), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x00800001), b: hexToF32(0x00800000), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x03800000), b: hexToF32(0x03800001), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x03800001), b: hexToF32(0x03800000), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x00800000), b: -hexToF32(0x00800001), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x00800001), b: -hexToF32(0x00800000), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x03800000), b: -hexToF32(0x03800001), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x03800001), b: -hexToF32(0x03800000), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x00800000), b: hexToF32(0x00800002), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x00800002), b: hexToF32(0x00800000), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x03800000), b: hexToF32(0x03800002), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x03800002), b: hexToF32(0x03800000), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x00800000), b: -hexToF32(0x00800002), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x00800002), b: -hexToF32(0x00800000), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x03800000), b: -hexToF32(0x03800002), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x03800002), b: -hexToF32(0x03800000), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x00800000), b: 0, ulp: 1 }, // Normals near 0\n    { a: 0, b: hexToF32(0x00800000), ulp: 1 }, // Normals near 0\n    { a: -hexToF32(0x00800000), b: 0, ulp: 1 }, // Normals near 0\n    { a: 0, b: -hexToF32(0x00800000), ulp: 1 }, // Normals near 0\n    { a: hexToF32(0x00800000), b: -hexToF32(0x00800000), ulp: 2 }, // Normals around 0\n    { a: -hexToF32(0x00800000), b: hexToF32(0x00800000), ulp: 2 }, // Normals around 0\n    { a: hexToF32(0x00000001), b: 0, ulp: 0 }, // Subnormals near 0\n    { a: 0, b: hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: -hexToF32(0x00000001), b: 0, ulp: 0 }, // Subnormals near 0\n    { a: 0, b: -hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: hexToF32(0x00000001), b: -hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: -hexToF32(0x00000001), b: hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: hexToF32(0x00000001), b: hexToF32(0x00800000), ulp: 1 }, // Normal/Subnormal boundary\n    { a: hexToF32(0x00800000), b: hexToF32(0x00000001), ulp: 1 }, // Normal/Subnormal boundary\n    { a: -hexToF32(0x00000001), b: -hexToF32(0x00800000), ulp: 1 }, // Normal/Subnormal boundary\n    { a: -hexToF32(0x00800000), b: -hexToF32(0x00000001), ulp: 1 }, // Normal/Subnormal boundary\n    { a: hexToF32(0x00800001), b: hexToF32(0x00000000), ulp: 2 }, // Just-above-Normal/Subnormal boundary\n    { a: hexToF32(0x00800001), b: hexToF32(0x00000001), ulp: 2 }, // Just-above-Normal/Subnormal boundary\n    { a: hexToF32(0x00800005), b: hexToF32(0x00000001), ulp: 6 }, // Just-above-Normal/Subnormal boundary\n    { a: hexToF32(0x00800005), b: hexToF32(0x00000111), ulp: 6 }, // Just-above-Normal/Subnormal boundary\n  ])\n  .fn(t => {\n    const a = t.params.a;\n    const b = t.params.b;\n    const got = diffULP(a, b);\n    const expect = t.params.ulp;\n    t.expect(got === expect, `diffULP(${a}, ${b}) returned ${got}. Expected ${expect}`);\n  });\n\ninterface nextAfterCase {\n  val: number;\n  dir: boolean;\n  result: Scalar;\n}\n\ng.test('test,math,nextAfterFlushToZero')\n  .paramsSubcasesOnly<nextAfterCase>(\n    // prettier-ignore\n    [\n    // Edge Cases\n    { val: Number.NaN, dir: true, result: f32Bits(0x7fffffff) },\n    { val: Number.NaN, dir: false, result: f32Bits(0x7fffffff) },\n    { val: Number.POSITIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.POSITIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.NEGATIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: Number.NEGATIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n\n    // Zeroes\n    { val: +0, dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: +0, dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: -0, dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: -0, dir: false, result: f32Bits(kBit.f32.negative.max) },\n\n    // Subnormals\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: false, result: f32Bits(kBit.f32.negative.max) },\n\n    // Normals\n    { val: hexToF32(kBit.f32.positive.max), dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: hexToF32(kBit.f32.positive.max), dir: false, result: f32Bits(0x7f7ffffe) },\n    { val: hexToF32(kBit.f32.positive.min), dir: true, result: f32Bits(0x00800001) },\n    { val: hexToF32(kBit.f32.positive.min), dir: false, result: f32(0) },\n    { val: hexToF32(kBit.f32.negative.max), dir: true, result: f32(0) },\n    { val: hexToF32(kBit.f32.negative.max), dir: false, result: f32Bits(0x80800001) },\n    { val: hexToF32(kBit.f32.negative.min), dir: true, result: f32Bits(0xff7ffffe) },\n    { val: hexToF32(kBit.f32.negative.min), dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: hexToF32(0x03800000), dir: true, result: f32Bits(0x03800001) },\n    { val: hexToF32(0x03800000), dir: false, result: f32Bits(0x037fffff) },\n    { val: hexToF32(0x83800000), dir: true, result: f32Bits(0x837fffff) },\n    { val: hexToF32(0x83800000), dir: false, result: f32Bits(0x83800001) },\n  ]\n  )\n  .fn(t => {\n    const val = t.params.val;\n    const dir = t.params.dir;\n    const expect = t.params.result;\n    const expect_type = typeof expect;\n    const got = nextAfter(val, dir, true);\n    const got_type = typeof got;\n    t.expect(\n      got.value === expect.value || (Number.isNaN(got.value) && Number.isNaN(expect.value)),\n      `nextAfter(${val}, ${dir}, true) returned ${got} (${got_type}). Expected ${expect} (${expect_type})`\n    );\n  });\n\ng.test('test,math,nextAfterNoFlush')\n  .paramsSubcasesOnly<nextAfterCase>(\n    // prettier-ignore\n    [\n    // Edge Cases\n    { val: Number.NaN, dir: true, result: f32Bits(0x7fffffff) },\n    { val: Number.NaN, dir: false, result: f32Bits(0x7fffffff) },\n    { val: Number.POSITIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.POSITIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.NEGATIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: Number.NEGATIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n\n    // Zeroes\n    { val: +0, dir: true, result: f32Bits(kBit.f32.subnormal.positive.min) },\n    { val: +0, dir: false, result: f32Bits(kBit.f32.subnormal.negative.max) },\n    { val: -0, dir: true, result: f32Bits(kBit.f32.subnormal.positive.min) },\n    { val: -0, dir: false, result: f32Bits(kBit.f32.subnormal.negative.max) },\n\n    // Subnormals\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: true, result: f32Bits(0x00000002) },\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: false, result: f32(0) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: false, result: f32Bits(0x007ffffe) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: true, result: f32Bits(0x807ffffe) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: true, result: f32(0) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: false, result: f32Bits(0x80000002) },\n\n    // Normals\n    { val: hexToF32(kBit.f32.positive.max), dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: hexToF32(kBit.f32.positive.max), dir: false, result: f32Bits(0x7f7ffffe) },\n    { val: hexToF32(kBit.f32.positive.min), dir: true, result: f32Bits(0x00800001) },\n    { val: hexToF32(kBit.f32.positive.min), dir: false, result: f32Bits(kBit.f32.subnormal.positive.max) },\n    { val: hexToF32(kBit.f32.negative.max), dir: true, result: f32Bits(kBit.f32.subnormal.negative.min) },\n    { val: hexToF32(kBit.f32.negative.max), dir: false, result: f32Bits(0x80800001) },\n    { val: hexToF32(kBit.f32.negative.min), dir: true, result: f32Bits(0xff7ffffe) },\n    { val: hexToF32(kBit.f32.negative.min), dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: hexToF32(0x03800000), dir: true, result: f32Bits(0x03800001) },\n    { val: hexToF32(0x03800000), dir: false, result: f32Bits(0x037fffff) },\n    { val: hexToF32(0x83800000), dir: true, result: f32Bits(0x837fffff) },\n    { val: hexToF32(0x83800000), dir: false, result: f32Bits(0x83800001) },\n  ]\n  )\n  .fn(t => {\n    const val = t.params.val;\n    const dir = t.params.dir;\n    const expect = t.params.result;\n    const expect_type = typeof expect;\n    const got = nextAfter(val, dir, false);\n    const got_type = typeof got;\n    t.expect(\n      got.value === expect.value || (Number.isNaN(got.value) && Number.isNaN(expect.value)),\n      `nextAfter(${val}, ${dir}, false) returned ${got} (${got_type}). Expected ${expect} (${expect_type})`\n    );\n  });\n\ninterface correctlyRoundedCase {\n  test_val: Scalar;\n  target: number;\n  is_correct: boolean;\n}\n\ng.test('test,math,correctlyRounded')\n  .paramsSubcasesOnly<correctlyRoundedCase>(\n    // prettier-ignore\n    [\n    // NaN Cases\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(0x7fffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(0xffffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: NaN, is_correct: false },\n\n    // Infinities\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.POSITIVE_INFINITY, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.POSITIVE_INFINITY, is_correct: false },\n\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.NEGATIVE_INFINITY, is_correct: true },\n\n    // Zeros\n    { test_val: f32Bits(kBit.f32.positive.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: 0, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: -0, is_correct: true },\n\n    // 32-bit subnormals\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n\n    // 64-bit subnormals\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n\n    // 32-bit normals\n    { test_val: f32Bits(kBit.f32.positive.max), target: hexToF32(kBit.f32.positive.max), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.min), target: hexToF32(kBit.f32.positive.min), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.max), target: hexToF32(kBit.f32.negative.max), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.min), target: hexToF32(kBit.f32.negative.min), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800000), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800002), is_correct: false },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800001), is_correct: true },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800010), is_correct: false },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800000), is_correct: true },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800002), is_correct: false },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800001), is_correct: true },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800010), is_correct: false },\n\n    // 64-bit normals\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00010, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00020, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00030, 0x00000002), is_correct: false },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00040, 0x00000002), is_correct: false },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00050, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00060, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00070, 0x00000002), is_correct: false },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00080, 0x00000002), is_correct: false },\n  ]\n  )\n  .fn(t => {\n    const test_val = t.params.test_val;\n    const target = t.params.target;\n    const is_correct = t.params.is_correct;\n\n    const got = correctlyRounded(test_val, target);\n    t.expect(\n      got === is_correct,\n      `correctlyRounded(${test_val}, ${target}) returned ${got}. Expected ${is_correct}`\n    );\n  });\n\ng.test('test,math,correctlyRoundedNoFlushOnly')\n  .paramsSubcasesOnly<correctlyRoundedCase>(\n    // prettier-ignore\n    [\n    // NaN Cases\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(0x7fffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(0xffffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: NaN, is_correct: false },\n\n    // Infinities\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.POSITIVE_INFINITY, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.POSITIVE_INFINITY, is_correct: false },\n\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.NEGATIVE_INFINITY, is_correct: true },\n\n    // Zeros\n    { test_val: f32Bits(kBit.f32.positive.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: 0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: 0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: 0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: 0, is_correct: false },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: -0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: -0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: -0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: -0, is_correct: false },\n\n    // 32-bit subnormals\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n\n    // 64-bit subnormals\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n\n    // 32-bit normals\n    { test_val: f32Bits(kBit.f32.positive.max), target: hexToF32(kBit.f32.positive.max), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.min), target: hexToF32(kBit.f32.positive.min), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.max), target: hexToF32(kBit.f32.negative.max), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.min), target: hexToF32(kBit.f32.negative.min), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800000), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800002), is_correct: false },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800001), is_correct: true },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800010), is_correct: false },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800000), is_correct: true },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800002), is_correct: false },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800001), is_correct: true },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800010), is_correct: false },\n\n    // 64-bit normals\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00010, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00020, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00030, 0x00000002), is_correct: false },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00040, 0x00000002), is_correct: false },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00050, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00060, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00070, 0x00000002), is_correct: false },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00080, 0x00000002), is_correct: false },\n  ]\n  )\n  .fn(t => {\n    const test_val = t.params.test_val;\n    const target = t.params.target;\n    const is_correct = t.params.is_correct;\n\n    const got = correctlyRounded(test_val, target, false, true);\n    t.expect(\n      got === is_correct,\n      `correctlyRounded(${test_val}, ${target}) returned ${got}. Expected ${is_correct}`\n    );\n  });\n\ng.test('test,math,correctlyRoundedFlushToZeroOnly')\n  .paramsSubcasesOnly<correctlyRoundedCase>(\n    // prettier-ignore\n    [\n    // NaN Cases\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(0x7fffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(0xffffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: NaN, is_correct: false },\n\n    // Infinities\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.POSITIVE_INFINITY, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.POSITIVE_INFINITY, is_correct: false },\n\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.NEGATIVE_INFINITY, is_correct: true },\n\n    // Zeros\n    { test_val: f32Bits(kBit.f32.positive.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: 0, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: -0, is_correct: true },\n\n    // 32-bit subnormals\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n\n    // 64-bit subnormals\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n\n    // 32-bit normals\n    { test_val: f32Bits(kBit.f32.positive.max), target: hexToF32(kBit.f32.positive.max), is_correct: true },\n    { test_val: f32Bits(kBit.f32.positive.min), target: hexToF32(kBit.f32.positive.min), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.max), target: hexToF32(kBit.f32.negative.max), is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.min), target: hexToF32(kBit.f32.negative.min), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800000), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800002), is_correct: false },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800001), is_correct: true },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800010), is_correct: false },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800000), is_correct: true },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800002), is_correct: false },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800001), is_correct: true },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800010), is_correct: false },\n\n    // 64-bit normals\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00010, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00020, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00030, 0x00000002), is_correct: false },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00040, 0x00000002), is_correct: false },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00050, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00060, 0x00000001), is_correct: false },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00070, 0x00000002), is_correct: false },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00080, 0x00000002), is_correct: false },\n  ]\n  )\n  .fn(t => {\n    const test_val = t.params.test_val;\n    const target = t.params.target;\n    const is_correct = t.params.is_correct;\n\n    const got = correctlyRounded(test_val, target, true, false);\n    t.expect(\n      got === is_correct,\n      `correctlyRounded(${test_val}, ${target}) returned ${got}. Expected ${is_correct}`\n    );\n  });\n\ninterface lerpCase {\n  a: number;\n  b: number;\n  t: number;\n  result: number;\n}\n\ng.test('test,math,lerp')\n  .paramsSimple<lerpCase>([\n    // Infinite cases\n    { a: 0.0, b: Number.POSITIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { a: Number.POSITIVE_INFINITY, b: 0.0, t: 0.5, result: Number.NaN },\n    { a: Number.NEGATIVE_INFINITY, b: 1.0, t: 0.5, result: Number.NaN },\n    { a: 1.0, b: Number.NEGATIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { a: Number.NEGATIVE_INFINITY, b: Number.POSITIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { a: Number.POSITIVE_INFINITY, b: Number.NEGATIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { a: 0.0, b: 1.0, t: Number.NEGATIVE_INFINITY, result: Number.NaN },\n    { a: 1.0, b: 0.0, t: Number.NEGATIVE_INFINITY, result: Number.NaN },\n    { a: 0.0, b: 1.0, t: Number.POSITIVE_INFINITY, result: Number.NaN },\n    { a: 1.0, b: 0.0, t: Number.POSITIVE_INFINITY, result: Number.NaN },\n\n    // [0.0, 1.0] cases\n    { a: 0.0, b: 1.0, t: -1.0, result: -1.0 },\n    { a: 0.0, b: 1.0, t: 0.0, result: 0.0 },\n    { a: 0.0, b: 1.0, t: 0.1, result: 0.1 },\n    { a: 0.0, b: 1.0, t: 0.01, result: 0.01 },\n    { a: 0.0, b: 1.0, t: 0.001, result: 0.001 },\n    { a: 0.0, b: 1.0, t: 0.25, result: 0.25 },\n    { a: 0.0, b: 1.0, t: 0.5, result: 0.5 },\n    { a: 0.0, b: 1.0, t: 0.9, result: 0.9 },\n    { a: 0.0, b: 1.0, t: 0.99, result: 0.99 },\n    { a: 0.0, b: 1.0, t: 0.999, result: 0.999 },\n    { a: 0.0, b: 1.0, t: 1.0, result: 1.0 },\n    { a: 0.0, b: 1.0, t: 2.0, result: 2.0 },\n\n    // [1.0, 0.0] cases\n    { a: 1.0, b: 0.0, t: -1.0, result: 2.0 },\n    { a: 1.0, b: 0.0, t: 0.0, result: 1.0 },\n    { a: 1.0, b: 0.0, t: 0.1, result: 0.9 },\n    { a: 1.0, b: 0.0, t: 0.01, result: 0.99 },\n    { a: 1.0, b: 0.0, t: 0.001, result: 0.999 },\n    { a: 1.0, b: 0.0, t: 0.25, result: 0.75 },\n    { a: 1.0, b: 0.0, t: 0.5, result: 0.5 },\n    { a: 1.0, b: 0.0, t: 0.9, result: 0.1 },\n    { a: 1.0, b: 0.0, t: 0.99, result: 0.01 },\n    { a: 1.0, b: 0.0, t: 0.999, result: 0.001 },\n    { a: 1.0, b: 0.0, t: 1.0, result: 0.0 },\n    { a: 1.0, b: 0.0, t: 2.0, result: -1.0 },\n\n    // [0.0, 10.0] cases\n    { a: 0.0, b: 10.0, t: -1.0, result: -10.0 },\n    { a: 0.0, b: 10.0, t: 0.0, result: 0.0 },\n    { a: 0.0, b: 10.0, t: 0.1, result: 1.0 },\n    { a: 0.0, b: 10.0, t: 0.01, result: 0.1 },\n    { a: 0.0, b: 10.0, t: 0.001, result: 0.01 },\n    { a: 0.0, b: 10.0, t: 0.25, result: 2.5 },\n    { a: 0.0, b: 10.0, t: 0.5, result: 5.0 },\n    { a: 0.0, b: 10.0, t: 0.9, result: 9.0 },\n    { a: 0.0, b: 10.0, t: 0.99, result: 9.9 },\n    { a: 0.0, b: 10.0, t: 0.999, result: 9.99 },\n    { a: 0.0, b: 10.0, t: 1.0, result: 10.0 },\n    { a: 0.0, b: 10.0, t: 2.0, result: 20.0 },\n\n    // [10.0, 0.0] cases\n    { a: 10.0, b: 0.0, t: -1.0, result: 20.0 },\n    { a: 10.0, b: 0.0, t: 0.0, result: 10.0 },\n    { a: 10.0, b: 0.0, t: 0.1, result: 9 },\n    { a: 10.0, b: 0.0, t: 0.01, result: 9.9 },\n    { a: 10.0, b: 0.0, t: 0.001, result: 9.99 },\n    { a: 10.0, b: 0.0, t: 0.25, result: 7.5 },\n    { a: 10.0, b: 0.0, t: 0.5, result: 5.0 },\n    { a: 10.0, b: 0.0, t: 0.9, result: 1.0 },\n    { a: 10.0, b: 0.0, t: 0.99, result: 0.1 },\n    { a: 10.0, b: 0.0, t: 0.999, result: 0.01 },\n    { a: 10.0, b: 0.0, t: 1.0, result: 0.0 },\n    { a: 10.0, b: 0.0, t: 2.0, result: -10.0 },\n\n    // [2.0, 10.0] cases\n    { a: 2.0, b: 10.0, t: -1.0, result: -6.0 },\n    { a: 2.0, b: 10.0, t: 0.0, result: 2.0 },\n    { a: 2.0, b: 10.0, t: 0.1, result: 2.8 },\n    { a: 2.0, b: 10.0, t: 0.01, result: 2.08 },\n    { a: 2.0, b: 10.0, t: 0.001, result: 2.008 },\n    { a: 2.0, b: 10.0, t: 0.25, result: 4.0 },\n    { a: 2.0, b: 10.0, t: 0.5, result: 6.0 },\n    { a: 2.0, b: 10.0, t: 0.9, result: 9.2 },\n    { a: 2.0, b: 10.0, t: 0.99, result: 9.92 },\n    { a: 2.0, b: 10.0, t: 0.999, result: 9.992 },\n    { a: 2.0, b: 10.0, t: 1.0, result: 10.0 },\n    { a: 2.0, b: 10.0, t: 2.0, result: 18.0 },\n\n    // [10.0, 2.0] cases\n    { a: 10.0, b: 2.0, t: -1.0, result: 18.0 },\n    { a: 10.0, b: 2.0, t: 0.0, result: 10.0 },\n    { a: 10.0, b: 2.0, t: 0.1, result: 9.2 },\n    { a: 10.0, b: 2.0, t: 0.01, result: 9.92 },\n    { a: 10.0, b: 2.0, t: 0.001, result: 9.992 },\n    { a: 10.0, b: 2.0, t: 0.25, result: 8.0 },\n    { a: 10.0, b: 2.0, t: 0.5, result: 6.0 },\n    { a: 10.0, b: 2.0, t: 0.9, result: 2.8 },\n    { a: 10.0, b: 2.0, t: 0.99, result: 2.08 },\n    { a: 10.0, b: 2.0, t: 0.999, result: 2.008 },\n    { a: 10.0, b: 2.0, t: 1.0, result: 2.0 },\n    { a: 10.0, b: 2.0, t: 2.0, result: -6.0 },\n\n    // [-1.0, 1.0] cases\n    { a: -1.0, b: 1.0, t: -2.0, result: -5.0 },\n    { a: -1.0, b: 1.0, t: 0.0, result: -1.0 },\n    { a: -1.0, b: 1.0, t: 0.1, result: -0.8 },\n    { a: -1.0, b: 1.0, t: 0.01, result: -0.98 },\n    { a: -1.0, b: 1.0, t: 0.001, result: -0.998 },\n    { a: -1.0, b: 1.0, t: 0.25, result: -0.5 },\n    { a: -1.0, b: 1.0, t: 0.5, result: 0.0 },\n    { a: -1.0, b: 1.0, t: 0.9, result: 0.8 },\n    { a: -1.0, b: 1.0, t: 0.99, result: 0.98 },\n    { a: -1.0, b: 1.0, t: 0.999, result: 0.998 },\n    { a: -1.0, b: 1.0, t: 1.0, result: 1.0 },\n    { a: -1.0, b: 1.0, t: 2.0, result: 3.0 },\n\n    // [1.0, -1.0] cases\n    { a: 1.0, b: -1.0, t: -2.0, result: 5.0 },\n    { a: 1.0, b: -1.0, t: 0.0, result: 1.0 },\n    { a: 1.0, b: -1.0, t: 0.1, result: 0.8 },\n    { a: 1.0, b: -1.0, t: 0.01, result: 0.98 },\n    { a: 1.0, b: -1.0, t: 0.001, result: 0.998 },\n    { a: 1.0, b: -1.0, t: 0.25, result: 0.5 },\n    { a: 1.0, b: -1.0, t: 0.5, result: 0.0 },\n    { a: 1.0, b: -1.0, t: 0.9, result: -0.8 },\n    { a: 1.0, b: -1.0, t: 0.99, result: -0.98 },\n    { a: 1.0, b: -1.0, t: 0.999, result: -0.998 },\n    { a: 1.0, b: -1.0, t: 1.0, result: -1.0 },\n    { a: 1.0, b: -1.0, t: 2.0, result: -3.0 },\n\n    // [-1.0, 0.0] cases\n    { a: -1.0, b: 0.0, t: -1.0, result: -2.0 },\n    { a: -1.0, b: 0.0, t: 0.0, result: -1.0 },\n    { a: -1.0, b: 0.0, t: 0.1, result: -0.9 },\n    { a: -1.0, b: 0.0, t: 0.01, result: -0.99 },\n    { a: -1.0, b: 0.0, t: 0.001, result: -0.999 },\n    { a: -1.0, b: 0.0, t: 0.25, result: -0.75 },\n    { a: -1.0, b: 0.0, t: 0.5, result: -0.5 },\n    { a: -1.0, b: 0.0, t: 0.9, result: -0.1 },\n    { a: -1.0, b: 0.0, t: 0.99, result: -0.01 },\n    { a: -1.0, b: 0.0, t: 0.999, result: -0.001 },\n    { a: -1.0, b: 0.0, t: 1.0, result: 0.0 },\n    { a: -1.0, b: 0.0, t: 2.0, result: 1.0 },\n\n    // [0.0, -1.0] cases\n    { a: 0.0, b: -1.0, t: -1.0, result: 1.0 },\n    { a: 0.0, b: -1.0, t: 0.0, result: 0.0 },\n    { a: 0.0, b: -1.0, t: 0.1, result: -0.1 },\n    { a: 0.0, b: -1.0, t: 0.01, result: -0.01 },\n    { a: 0.0, b: -1.0, t: 0.001, result: -0.001 },\n    { a: 0.0, b: -1.0, t: 0.25, result: -0.25 },\n    { a: 0.0, b: -1.0, t: 0.5, result: -0.5 },\n    { a: 0.0, b: -1.0, t: 0.9, result: -0.9 },\n    { a: 0.0, b: -1.0, t: 0.99, result: -0.99 },\n    { a: 0.0, b: -1.0, t: 0.999, result: -0.999 },\n    { a: 0.0, b: -1.0, t: 1.0, result: -1.0 },\n    { a: 0.0, b: -1.0, t: 2.0, result: -2.0 },\n  ])\n  .fn(test => {\n    const a = test.params.a;\n    const b = test.params.b;\n    const t = test.params.t;\n    const got = lerp(a, b, t);\n    const expect = test.params.result;\n\n    test.expect(\n      1 >= diffULP(got, expect) || (Number.isNaN(got) && Number.isNaN(expect)),\n      `lerp(${a}, ${b}, ${t}) returned ${got}. Expected ${expect}`\n    );\n  });\n\ninterface rangeCase {\n  a: number;\n  b: number;\n  num_steps: number;\n  result: Array<number>;\n}\n\ng.test('test,math,linearRange')\n  .paramsSimple<rangeCase>(\n    // prettier-ignore\n    [\n    { a: 0.0, b: Number.POSITIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.POSITIVE_INFINITY, b: 0.0, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.NEGATIVE_INFINITY, b: 1.0, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: 1.0, b: Number.NEGATIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.NEGATIVE_INFINITY, b: Number.POSITIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.POSITIVE_INFINITY, b: Number.NEGATIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: 0.0, b: 0.0, num_steps: 10, result: new Array<number>(10).fill(0.0) },\n    { a: 10.0, b: 10.0, num_steps: 10, result: new Array<number>(10).fill(10.0) },\n    { a: 0.0, b: 10.0, num_steps: 1, result: [0.0] },\n    { a: 10.0, b: 0.0, num_steps: 1, result: [10] },\n    { a: 0.0, b: 10.0, num_steps: 11, result: [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0] },\n    { a: 10.0, b: 0.0, num_steps: 11, result: [10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0] },\n    { a: 0.0, b: 1000.0, num_steps: 11, result: [0.0, 100.0, 200.0, 300.0, 400.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0] },\n    { a: 1000.0, b: 0.0, num_steps: 11, result: [1000.0, 900.0, 800.0, 700.0, 600.0, 500.0, 400.0, 300.0, 200.0, 100.0, 0.0] },\n    { a: 1.0, b: 5.0, num_steps: 5, result: [1.0, 2.0, 3.0, 4.0, 5.0] },\n    { a: 5.0, b: 1.0, num_steps: 5, result: [5.0, 4.0, 3.0, 2.0, 1.0] },\n    { a: 0.0, b: 1.0, num_steps: 11, result: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0] },\n    { a: 1.0, b: 0.0, num_steps: 11, result: [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0] },\n    { a: 0.0, b: 1.0, num_steps: 5, result: [0.0, 0.25, 0.5, 0.75, 1.0] },\n    { a: 1.0, b: 0.0, num_steps: 5, result: [1.0, 0.75, 0.5, 0.25, 0.0] },\n    { a: -1.0, b: 1.0, num_steps: 11, result: [-1.0, -0.8, -0.6, -0.4, -0.2, 0.0, 0.2, 0.4, 0.6, 0.8, 1.0] },\n    { a: 1.0, b: -1.0, num_steps: 11, result: [1.0, 0.8, 0.6, 0.4, 0.2, 0.0, -0.2, -0.4, -0.6, -0.8, -1.0] },\n    { a: -1.0, b: 0, num_steps: 11, result: [-1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0.0] },\n    { a: 0.0, b: -1.0, num_steps: 11, result: [0.0, -0.1, -0.2, -0.3, -0.4, -0.5, -0.6, -0.7, -0.8, -0.9, -1.0] },\n  ]\n  )\n  .fn(test => {\n    const a = test.params.a;\n    const b = test.params.b;\n    const num_steps = test.params.num_steps;\n    const got = linearRange(a, b, num_steps);\n    const expect = test.params.result;\n\n    test.expect(\n      compareArrayOfNumbers(got, expect),\n      `linearRange(${a}, ${b}, ${num_steps}) returned ${got}. Expected ${expect}`\n    );\n  });\n\ng.test('test,math,biasedRange')\n  .paramsSimple<rangeCase>(\n    // prettier-ignore\n    [\n    { a: 0.0, b: Number.POSITIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.POSITIVE_INFINITY, b: 0.0, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.NEGATIVE_INFINITY, b: 1.0, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: 1.0, b: Number.NEGATIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.NEGATIVE_INFINITY, b: Number.POSITIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: Number.POSITIVE_INFINITY, b: Number.NEGATIVE_INFINITY, num_steps: 10, result: new Array<number>(10).fill(Number.NaN) },\n    { a: 0.0, b: 0.0, num_steps: 10, result: new Array<number>(10).fill(0.0) },\n    { a: 10.0, b: 10.0, num_steps: 10, result: new Array<number>(10).fill(10.0) },\n    { a: 0.0, b: 10.0, num_steps: 1, result: [0.0] },\n    { a: 10.0, b: 0.0, num_steps: 1, result: [10.0] },\n    { a: 0.0, b: 10.0, num_steps: 11, result: [0.0, 0.1, 0.4, 0.9, 1.6, 2.5, 3.6, 4.9, 6.4, 8.1, 10.0] },\n    { a: 10.0, b: 0.0, num_steps: 11, result: [10.0, 9.9, 9.6, 9.1, 8.4, 7.5, 6.4, 5.1, 3.6, 1.9, 0.0] },\n    { a: 0.0, b: 1000.0, num_steps: 11, result: [0.0, 10.0, 40.0, 90.0, 160.0, 250.0, 360.0, 490.0, 640.0, 810.0, 1000.0] },\n    { a: 1000.0, b: 0.0, num_steps: 11, result: [1000.0, 990.0, 960.0, 910.0, 840.0, 750.0, 640.0, 510.0, 360.0, 190.0, 0.0] },\n    { a: 1.0, b: 5.0, num_steps: 5, result: [1.0, 1.25, 2.0, 3.25, 5.0] },\n    { a: 5.0, b: 1.0, num_steps: 5, result: [5.0, 4.75, 4.0, 2.75, 1.0] },\n    { a: 0.0, b: 1.0, num_steps: 11, result: [0.0, 0.01, 0.04, 0.09, 0.16, 0.25, 0.36, 0.49, 0.64, 0.81, 1.0] },\n    { a: 1.0, b: 0.0, num_steps: 11, result: [1.0, 0.99, 0.96, 0.91, 0.84, 0.75, 0.64, 0.51, 0.36, 0.19, 0.0] },\n    { a: 0.0, b: 1.0, num_steps: 5, result: [0.0, 0.0625, 0.25, 0.5625, 1.0] },\n    { a: 1.0, b: 0.0, num_steps: 5, result: [1.0, 0.9375, 0.75, 0.4375, 0.0] },\n    { a: -1.0, b: 1.0, num_steps: 11, result: [-1.0, -0.98, -0.92, -0.82, -0.68, -0.5, -0.28 ,-0.02, 0.28, 0.62, 1.0] },\n    { a: 1.0, b: -1.0, num_steps: 11, result: [1.0, 0.98, 0.92, 0.82, 0.68, 0.5, 0.28 ,0.02, -0.28, -0.62, -1.0] },\n    { a: -1.0, b: 0, num_steps: 11, result: [-1.0 , -0.99, -0.96, -0.91, -0.84, -0.75, -0.64, -0.51, -0.36, -0.19, 0.0] },\n    { a: 0.0, b: -1.0, num_steps: 11, result: [0.0, -0.01, -0.04, -0.09, -0.16, -0.25, -0.36, -0.49, -0.64, -0.81, -1.0] },\n  ]\n  )\n  .fn(test => {\n    const a = test.params.a;\n    const b = test.params.b;\n    const num_steps = test.params.num_steps;\n    const got = biasedRange(a, b, num_steps);\n    const expect = test.params.result;\n\n    test.expect(\n      compareArrayOfNumbers(got, expect),\n      `biasedRange(${a}, ${b}, ${num_steps}) returned ${got}. Expected ${expect}`\n    );\n  });\n\ninterface limitsCase {\n  bits: number;\n  value: number;\n}\n\n// Test to confirm kBit and kValue constants are equivalent for f32\ng.test('test,math,f32LimitsEquivalency')\n  .paramsSimple<limitsCase>([\n    { bits: kBit.f32.positive.max, value: kValue.f32.positive.max },\n    { bits: kBit.f32.positive.min, value: kValue.f32.positive.min },\n    { bits: kBit.f32.negative.max, value: kValue.f32.negative.max },\n    { bits: kBit.f32.negative.min, value: kValue.f32.negative.min },\n    { bits: kBit.f32.subnormal.positive.max, value: kValue.f32.subnormal.positive.max },\n    { bits: kBit.f32.subnormal.positive.min, value: kValue.f32.subnormal.positive.min },\n    { bits: kBit.f32.subnormal.negative.max, value: kValue.f32.subnormal.negative.max },\n    { bits: kBit.f32.subnormal.negative.min, value: kValue.f32.subnormal.negative.min },\n  ])\n  .fn(test => {\n    const bits = test.params.bits;\n    const value = test.params.value;\n\n    const val_to_bits = bits === float32ToUint32(value);\n    const bits_to_val = value === (f32Bits(bits).value as number);\n    test.expect(\n      val_to_bits && bits_to_val,\n      `bits = ${bits}, value = ${value}, returned val_to_bits as ${val_to_bits}, and bits_to_val as ${bits_to_val}, they are expected to be equivalent`\n    );\n  });\n"],"file":"maths.spec.js"}