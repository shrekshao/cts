{"version":3,"sources":["../../src/unittests/maths.spec.ts"],"names":["description","makeTestGroup","kBit","f32","f32Bits","correctlyRounded","diffULP","nextAfter","UnitTest","g","hexToF32","hex","Float32Array","Uint32Array","buffer","hexToFloat64","h32","l32","u32Arr","f64Arr","Float64Array","test","paramsSimple","a","b","ulp","fn","t","params","got","expect","val","Number","NaN","dir","result","POSITIVE_INFINITY","infinity","positive","NEGATIVE_INFINITY","negative","subnormal","min","max","expect_type","got_type","value","isNaN","test_val","nan","s","target","is_correct","q","zero"],"mappings":"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","sourcesContent":["export const description = `\nUtil math unit tests.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { kBit } from '../webgpu/shader/execution/builtin/builtin.js';\nimport { f32, f32Bits, Scalar } from '../webgpu/util/conversion.js';\nimport { correctlyRounded, diffULP, nextAfter } from '../webgpu/util/math.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\ninterface DiffULPCase {\n  a: number;\n  b: number;\n  ulp: number;\n}\n\n/** Converts a 32-bit hex values to a 32-bit float value */\nfunction hexToF32(hex: number): number {\n  return new Float32Array(new Uint32Array([hex]).buffer)[0];\n}\n\n/** Converts two 32-bit hex values to a 64-bit float value */\nfunction hexToFloat64(h32: number, l32: number): number {\n  const u32Arr = new Uint32Array(2);\n  u32Arr[0] = l32;\n  u32Arr[1] = h32;\n  const f64Arr = new Float64Array(u32Arr.buffer);\n  return f64Arr[0];\n}\n\ng.test('test,math,diffULP')\n  .paramsSimple<DiffULPCase>([\n    { a: 0, b: 0, ulp: 0 },\n    { a: 1, b: 2, ulp: 2 ** 23 }, // Single exponent step\n    { a: 2, b: 1, ulp: 2 ** 23 }, // Single exponent step\n    { a: 2, b: 4, ulp: 2 ** 23 }, // Single exponent step\n    { a: 4, b: 2, ulp: 2 ** 23 }, // Single exponent step\n    { a: -1, b: -2, ulp: 2 ** 23 }, // Single exponent step\n    { a: -2, b: -1, ulp: 2 ** 23 }, // Single exponent step\n    { a: -2, b: -4, ulp: 2 ** 23 }, // Single exponent step\n    { a: -4, b: -2, ulp: 2 ** 23 }, // Single exponent step\n    { a: 1, b: 4, ulp: 2 ** 24 }, // Double exponent step\n    { a: 4, b: 1, ulp: 2 ** 24 }, // Double exponent step\n    { a: -1, b: -4, ulp: 2 ** 24 }, // Double exponent step\n    { a: -4, b: -1, ulp: 2 ** 24 }, // Double exponent step\n    { a: hexToF32(0x00800000), b: hexToF32(0x00800001), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x00800001), b: hexToF32(0x00800000), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x03800000), b: hexToF32(0x03800001), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x03800001), b: hexToF32(0x03800000), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x00800000), b: -hexToF32(0x00800001), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x00800001), b: -hexToF32(0x00800000), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x03800000), b: -hexToF32(0x03800001), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x03800001), b: -hexToF32(0x03800000), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x00800000), b: hexToF32(0x00800002), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x00800002), b: hexToF32(0x00800000), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x03800000), b: hexToF32(0x03800002), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x03800002), b: hexToF32(0x03800000), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x00800000), b: -hexToF32(0x00800002), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x00800002), b: -hexToF32(0x00800000), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x03800000), b: -hexToF32(0x03800002), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x03800002), b: -hexToF32(0x03800000), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x00800000), b: 0, ulp: 1 }, // Normals near 0\n    { a: 0, b: hexToF32(0x00800000), ulp: 1 }, // Normals near 0\n    { a: -hexToF32(0x00800000), b: 0, ulp: 1 }, // Normals near 0\n    { a: 0, b: -hexToF32(0x00800000), ulp: 1 }, // Normals near 0\n    { a: hexToF32(0x00800000), b: -hexToF32(0x00800000), ulp: 2 }, // Normals around 0\n    { a: -hexToF32(0x00800000), b: hexToF32(0x00800000), ulp: 2 }, // Normals around 0\n    { a: hexToF32(0x00000001), b: 0, ulp: 0 }, // Subnormals near 0\n    { a: 0, b: hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: -hexToF32(0x00000001), b: 0, ulp: 0 }, // Subnormals near 0\n    { a: 0, b: -hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: hexToF32(0x00000001), b: -hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: -hexToF32(0x00000001), b: hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: hexToF32(0x00000001), b: hexToF32(0x00800000), ulp: 1 }, // Normal/Subnormal boundary\n    { a: hexToF32(0x00800000), b: hexToF32(0x00000001), ulp: 1 }, // Normal/Subnormal boundary\n    { a: -hexToF32(0x00000001), b: -hexToF32(0x00800000), ulp: 1 }, // Normal/Subnormal boundary\n    { a: -hexToF32(0x00800000), b: -hexToF32(0x00000001), ulp: 1 }, // Normal/Subnormal boundary\n    { a: hexToF32(0x00800001), b: hexToF32(0x00000000), ulp: 2 }, // Just-above-Normal/Subnormal boundary\n    { a: hexToF32(0x00800001), b: hexToF32(0x00000001), ulp: 2 }, // Just-above-Normal/Subnormal boundary\n    { a: hexToF32(0x00800005), b: hexToF32(0x00000001), ulp: 6 }, // Just-above-Normal/Subnormal boundary\n    { a: hexToF32(0x00800005), b: hexToF32(0x00000111), ulp: 6 }, // Just-above-Normal/Subnormal boundary\n  ])\n  .fn(t => {\n    const a = t.params.a;\n    const b = t.params.b;\n    const got = diffULP(a, b);\n    const expect = t.params.ulp;\n    t.expect(got === expect, `diffULP(${a}, ${b}) returned ${got}. Expected ${expect}`);\n  });\n\ninterface nextAfterCase {\n  val: number;\n  dir: boolean;\n  result: Scalar;\n}\n\ng.test('test,math,nextAfter')\n  .paramsSimple<nextAfterCase>([\n    // Edge Cases\n    { val: Number.NaN, dir: true, result: f32Bits(0x7fffffff) },\n    { val: Number.NaN, dir: false, result: f32Bits(0x7fffffff) },\n    { val: Number.POSITIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.POSITIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.NEGATIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: Number.NEGATIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n\n    // Zeroes\n    { val: +0, dir: true, result: f32Bits(kBit.f32.subnormal.positive.min) },\n    { val: +0, dir: false, result: f32Bits(kBit.f32.subnormal.negative.max) },\n    { val: -0, dir: true, result: f32Bits(kBit.f32.subnormal.positive.min) },\n    { val: -0, dir: false, result: f32Bits(kBit.f32.subnormal.negative.max) },\n\n    // Subnormals\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: true, result: f32Bits(0x00000002) },\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: false, result: f32(0) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: false, result: f32Bits(0x007ffffe) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: true, result: f32Bits(0x807ffffe) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: true, result: f32(0) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: false, result: f32Bits(0x80000002) },\n\n    // Normals\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.positive.max), dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: hexToF32(kBit.f32.positive.max), dir: false, result: f32Bits(0x7f7ffffe) },\n    { val: hexToF32(kBit.f32.positive.min), dir: true, result: f32Bits(0x00800001) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.positive.min), dir: false, result: f32Bits(kBit.f32.subnormal.positive.max) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.negative.max), dir: true, result: f32Bits(kBit.f32.subnormal.negative.min) },\n    { val: hexToF32(kBit.f32.negative.max), dir: false, result: f32Bits(0x80800001) },\n    { val: hexToF32(kBit.f32.negative.min), dir: true, result: f32Bits(0xff7ffffe) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.negative.min), dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: hexToF32(0x03800000), dir: true, result: f32Bits(0x03800001) },\n    { val: hexToF32(0x03800000), dir: false, result: f32Bits(0x037fffff) },\n    { val: hexToF32(0x83800000), dir: true, result: f32Bits(0x837fffff) },\n    { val: hexToF32(0x83800000), dir: false, result: f32Bits(0x83800001) },\n  ])\n  .fn(t => {\n    const val = t.params.val;\n    const dir = t.params.dir;\n    const expect = t.params.result;\n    const expect_type = typeof expect;\n    const got = nextAfter(val, dir);\n    const got_type = typeof got;\n    t.expect(\n      got.value === expect.value || (Number.isNaN(got.value) && Number.isNaN(expect.value)),\n      `nextAfter(${val}, ${dir}) returned ${got} (${got_type}). Expected ${expect} (${expect_type})`\n    );\n  });\n\ninterface correctlyRoundedCase {\n  test_val: Scalar;\n  target: number;\n  is_correct: boolean;\n}\n\ng.test('test,math,correctlyRounded')\n  .paramsSimple<correctlyRoundedCase>([\n    // NaN Cases\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(0x7fffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(0xffffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: NaN, is_correct: false },\n\n    // Infinities\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.POSITIVE_INFINITY, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.POSITIVE_INFINITY, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.NEGATIVE_INFINITY, is_correct: true },\n\n    // Zeros\n    { test_val: f32Bits(kBit.f32.positive.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: 0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: 0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: 0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: 0, is_correct: false },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: -0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: -0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: -0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: -0, is_correct: false },\n\n    // 32-bit subnormals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n\n    // 64-bit subnormals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n\n    // 32-bit normals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.max), target: hexToF32(kBit.f32.positive.max), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.min), target: hexToF32(kBit.f32.positive.min), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.max), target: hexToF32(kBit.f32.negative.max), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.min), target: hexToF32(kBit.f32.negative.min), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800000), is_correct: true },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800001), is_correct: true },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800000), is_correct: true },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800001), is_correct: true },\n\n    // 64-bit normals\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n  ])\n  .fn(t => {\n    const test_val = t.params.test_val;\n    const target = t.params.target;\n    const is_correct = t.params.is_correct;\n\n    const got = correctlyRounded(test_val, target);\n    t.expect(\n      got === is_correct,\n      `correctlyRounded(${test_val}, ${target}) returned ${got}. Expected ${is_correct}`\n    );\n  });\n"],"file":"maths.spec.js"}