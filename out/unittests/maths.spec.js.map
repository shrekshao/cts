{"version":3,"sources":["../../src/unittests/maths.spec.ts"],"names":["description","makeTestGroup","kBit","f32","f32Bits","u32","biasedRange","correctlyRounded","diffULP","lerp","linearRange","nextAfter","UnitTest","g","hexToF32","hex","Float32Array","Uint32Array","buffer","hexToFloat64","h32","l32","u32Arr","f64Arr","Float64Array","compareArrayOfNumbers","got","expect","length","every","value","index","expected","Number","isNaN","test","paramsSimple","a","b","ulp","fn","t","params","paramsSubcasesOnly","val","NaN","dir","result","POSITIVE_INFINITY","infinity","positive","NEGATIVE_INFINITY","negative","min","max","subnormal","expect_type","got_type","test_val","nan","s","target","is_correct","q","zero","num_steps","Array","fill"],"mappings":"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","sourcesContent":["export const description = `\nUtil math unit tests.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { kBit } from '../webgpu/shader/execution/builtin/builtin.js';\nimport { f32, f32Bits, Scalar, u32 } from '../webgpu/util/conversion.js';\nimport {\n  biasedRange,\n  correctlyRounded,\n  diffULP,\n  lerp,\n  linearRange,\n  nextAfter,\n} from '../webgpu/util/math.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\n/** Converts a 32-bit hex values to a 32-bit float value */\nfunction hexToF32(hex: number): number {\n  return new Float32Array(new Uint32Array([hex]).buffer)[0];\n}\n\n/** Converts two 32-bit hex values to a 64-bit float value */\nfunction hexToFloat64(h32: number, l32: number): number {\n  const u32Arr = new Uint32Array(2);\n  u32Arr[0] = l32;\n  u32Arr[1] = h32;\n  const f64Arr = new Float64Array(u32Arr.buffer);\n  return f64Arr[0];\n}\n\n/**\n * @returns true if arrays are equal, doing element-wise comparison as needed, and considering NaNs to be equal.\n *\n * Depends on the correctness of diffULP, which is tested in this file.\n **/\nfunction compareArrayOfNumbers(got: Array<number>, expect: Array<number>): boolean {\n  return (\n    got.length === expect.length &&\n    got.every((value, index) => {\n      const expected = expect[index];\n      return 1 >= diffULP(value, expected) || Number.isNaN(value && Number.isNaN(expected));\n    })\n  );\n}\n\ninterface DiffULPCase {\n  a: number;\n  b: number;\n  ulp: number;\n}\n\ng.test('test,math,diffULP')\n  .paramsSimple<DiffULPCase>([\n    { a: 0, b: 0, ulp: 0 },\n    { a: 1, b: 2, ulp: 2 ** 23 }, // Single exponent step\n    { a: 2, b: 1, ulp: 2 ** 23 }, // Single exponent step\n    { a: 2, b: 4, ulp: 2 ** 23 }, // Single exponent step\n    { a: 4, b: 2, ulp: 2 ** 23 }, // Single exponent step\n    { a: -1, b: -2, ulp: 2 ** 23 }, // Single exponent step\n    { a: -2, b: -1, ulp: 2 ** 23 }, // Single exponent step\n    { a: -2, b: -4, ulp: 2 ** 23 }, // Single exponent step\n    { a: -4, b: -2, ulp: 2 ** 23 }, // Single exponent step\n    { a: 1, b: 4, ulp: 2 ** 24 }, // Double exponent step\n    { a: 4, b: 1, ulp: 2 ** 24 }, // Double exponent step\n    { a: -1, b: -4, ulp: 2 ** 24 }, // Double exponent step\n    { a: -4, b: -1, ulp: 2 ** 24 }, // Double exponent step\n    { a: hexToF32(0x00800000), b: hexToF32(0x00800001), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x00800001), b: hexToF32(0x00800000), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x03800000), b: hexToF32(0x03800001), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x03800001), b: hexToF32(0x03800000), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x00800000), b: -hexToF32(0x00800001), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x00800001), b: -hexToF32(0x00800000), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x03800000), b: -hexToF32(0x03800001), ulp: 1 }, // Single mantissa step\n    { a: -hexToF32(0x03800001), b: -hexToF32(0x03800000), ulp: 1 }, // Single mantissa step\n    { a: hexToF32(0x00800000), b: hexToF32(0x00800002), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x00800002), b: hexToF32(0x00800000), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x03800000), b: hexToF32(0x03800002), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x03800002), b: hexToF32(0x03800000), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x00800000), b: -hexToF32(0x00800002), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x00800002), b: -hexToF32(0x00800000), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x03800000), b: -hexToF32(0x03800002), ulp: 2 }, // Double mantissa step\n    { a: -hexToF32(0x03800002), b: -hexToF32(0x03800000), ulp: 2 }, // Double mantissa step\n    { a: hexToF32(0x00800000), b: 0, ulp: 1 }, // Normals near 0\n    { a: 0, b: hexToF32(0x00800000), ulp: 1 }, // Normals near 0\n    { a: -hexToF32(0x00800000), b: 0, ulp: 1 }, // Normals near 0\n    { a: 0, b: -hexToF32(0x00800000), ulp: 1 }, // Normals near 0\n    { a: hexToF32(0x00800000), b: -hexToF32(0x00800000), ulp: 2 }, // Normals around 0\n    { a: -hexToF32(0x00800000), b: hexToF32(0x00800000), ulp: 2 }, // Normals around 0\n    { a: hexToF32(0x00000001), b: 0, ulp: 0 }, // Subnormals near 0\n    { a: 0, b: hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: -hexToF32(0x00000001), b: 0, ulp: 0 }, // Subnormals near 0\n    { a: 0, b: -hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: hexToF32(0x00000001), b: -hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: -hexToF32(0x00000001), b: hexToF32(0x00000001), ulp: 0 }, // Subnormals near 0\n    { a: hexToF32(0x00000001), b: hexToF32(0x00800000), ulp: 1 }, // Normal/Subnormal boundary\n    { a: hexToF32(0x00800000), b: hexToF32(0x00000001), ulp: 1 }, // Normal/Subnormal boundary\n    { a: -hexToF32(0x00000001), b: -hexToF32(0x00800000), ulp: 1 }, // Normal/Subnormal boundary\n    { a: -hexToF32(0x00800000), b: -hexToF32(0x00000001), ulp: 1 }, // Normal/Subnormal boundary\n    { a: hexToF32(0x00800001), b: hexToF32(0x00000000), ulp: 2 }, // Just-above-Normal/Subnormal boundary\n    { a: hexToF32(0x00800001), b: hexToF32(0x00000001), ulp: 2 }, // Just-above-Normal/Subnormal boundary\n    { a: hexToF32(0x00800005), b: hexToF32(0x00000001), ulp: 6 }, // Just-above-Normal/Subnormal boundary\n    { a: hexToF32(0x00800005), b: hexToF32(0x00000111), ulp: 6 }, // Just-above-Normal/Subnormal boundary\n  ])\n  .fn(t => {\n    const a = t.params.a;\n    const b = t.params.b;\n    const got = diffULP(a, b);\n    const expect = t.params.ulp;\n    t.expect(got === expect, `diffULP(${a}, ${b}) returned ${got}. Expected ${expect}`);\n  });\n\ninterface nextAfterCase {\n  val: number;\n  dir: boolean;\n  result: Scalar;\n}\n\ng.test('test,math,nextAfterFlushToZero')\n  .paramsSubcasesOnly<nextAfterCase>([\n    // Edge Cases\n    { val: Number.NaN, dir: true, result: f32Bits(0x7fffffff) },\n    { val: Number.NaN, dir: false, result: f32Bits(0x7fffffff) },\n    { val: Number.POSITIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.POSITIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.NEGATIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: Number.NEGATIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n\n    // Zeroes\n    { val: +0, dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: +0, dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: -0, dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: -0, dir: false, result: f32Bits(kBit.f32.negative.max) },\n\n    // Subnormals\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: false, result: f32Bits(kBit.f32.negative.max) },\n\n    // Normals\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.positive.max), dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: hexToF32(kBit.f32.positive.max), dir: false, result: f32Bits(0x7f7ffffe) },\n    { val: hexToF32(kBit.f32.positive.min), dir: true, result: f32Bits(0x00800001) },\n    { val: hexToF32(kBit.f32.positive.min), dir: false, result: f32(0) },\n    { val: hexToF32(kBit.f32.negative.max), dir: true, result: f32(0) },\n    { val: hexToF32(kBit.f32.negative.max), dir: false, result: f32Bits(0x80800001) },\n    { val: hexToF32(kBit.f32.negative.min), dir: true, result: f32Bits(0xff7ffffe) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.negative.min), dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: hexToF32(0x03800000), dir: true, result: f32Bits(0x03800001) },\n    { val: hexToF32(0x03800000), dir: false, result: f32Bits(0x037fffff) },\n    { val: hexToF32(0x83800000), dir: true, result: f32Bits(0x837fffff) },\n    { val: hexToF32(0x83800000), dir: false, result: f32Bits(0x83800001) },\n  ])\n  .fn(t => {\n    const val = t.params.val;\n    const dir = t.params.dir;\n    const expect = t.params.result;\n    const expect_type = typeof expect;\n    const got = nextAfter(val, dir, true);\n    const got_type = typeof got;\n    t.expect(\n      got.value === expect.value || (Number.isNaN(got.value) && Number.isNaN(expect.value)),\n      `nextAfter(${val}, ${dir}, true) returned ${got} (${got_type}). Expected ${expect} (${expect_type})`\n    );\n  });\n\ng.test('test,math,nextAfterNoFlush')\n  .paramsSubcasesOnly<nextAfterCase>([\n    // Edge Cases\n    { val: Number.NaN, dir: true, result: f32Bits(0x7fffffff) },\n    { val: Number.NaN, dir: false, result: f32Bits(0x7fffffff) },\n    { val: Number.POSITIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.POSITIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: Number.NEGATIVE_INFINITY, dir: true, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: Number.NEGATIVE_INFINITY, dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n\n    // Zeroes\n    { val: +0, dir: true, result: f32Bits(kBit.f32.subnormal.positive.min) },\n    { val: +0, dir: false, result: f32Bits(kBit.f32.subnormal.negative.max) },\n    { val: -0, dir: true, result: f32Bits(kBit.f32.subnormal.positive.min) },\n    { val: -0, dir: false, result: f32Bits(kBit.f32.subnormal.negative.max) },\n\n    // Subnormals\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: true, result: f32Bits(0x00000002) },\n    { val: hexToF32(kBit.f32.subnormal.positive.min), dir: false, result: f32(0) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: true, result: f32Bits(kBit.f32.positive.min) },\n    { val: hexToF32(kBit.f32.subnormal.positive.max), dir: false, result: f32Bits(0x007ffffe) },\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: true, result: f32Bits(0x807ffffe) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.subnormal.negative.min), dir: false, result: f32Bits(kBit.f32.negative.max) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: true, result: f32(0) },\n    { val: hexToF32(kBit.f32.subnormal.negative.max), dir: false, result: f32Bits(0x80000002) },\n\n    // Normals\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.positive.max), dir: true, result: f32Bits(kBit.f32.infinity.positive) },\n    { val: hexToF32(kBit.f32.positive.max), dir: false, result: f32Bits(0x7f7ffffe) },\n    { val: hexToF32(kBit.f32.positive.min), dir: true, result: f32Bits(0x00800001) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.positive.min), dir: false, result: f32Bits(kBit.f32.subnormal.positive.max) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.negative.max), dir: true, result: f32Bits(kBit.f32.subnormal.negative.min) },\n    { val: hexToF32(kBit.f32.negative.max), dir: false, result: f32Bits(0x80800001) },\n    { val: hexToF32(kBit.f32.negative.min), dir: true, result: f32Bits(0xff7ffffe) },\n    // prettier-ignore\n    { val: hexToF32(kBit.f32.negative.min), dir: false, result: f32Bits(kBit.f32.infinity.negative) },\n    { val: hexToF32(0x03800000), dir: true, result: f32Bits(0x03800001) },\n    { val: hexToF32(0x03800000), dir: false, result: f32Bits(0x037fffff) },\n    { val: hexToF32(0x83800000), dir: true, result: f32Bits(0x837fffff) },\n    { val: hexToF32(0x83800000), dir: false, result: f32Bits(0x83800001) },\n  ])\n  .fn(t => {\n    const val = t.params.val;\n    const dir = t.params.dir;\n    const expect = t.params.result;\n    const expect_type = typeof expect;\n    const got = nextAfter(val, dir, false);\n    const got_type = typeof got;\n    t.expect(\n      got.value === expect.value || (Number.isNaN(got.value) && Number.isNaN(expect.value)),\n      `nextAfter(${val}, ${dir}, false) returned ${got} (${got_type}). Expected ${expect} (${expect_type})`\n    );\n  });\n\ninterface correctlyRoundedCase {\n  test_val: Scalar;\n  target: number;\n  is_correct: boolean;\n}\n\ng.test('test,math,correctlyRounded')\n  .paramsSubcasesOnly<correctlyRoundedCase>([\n    // NaN Cases\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(0x7fffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(0xffffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: NaN, is_correct: false },\n\n    // Infinities\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.POSITIVE_INFINITY, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.POSITIVE_INFINITY, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.NEGATIVE_INFINITY, is_correct: true },\n\n    // Zeros\n    { test_val: f32Bits(kBit.f32.positive.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: 0, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: -0, is_correct: true },\n\n    // 32-bit subnormals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n\n    // 64-bit subnormals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n\n    // 32-bit normals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.max), target: hexToF32(kBit.f32.positive.max), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.min), target: hexToF32(kBit.f32.positive.min), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.max), target: hexToF32(kBit.f32.negative.max), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.min), target: hexToF32(kBit.f32.negative.min), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800000), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800002), is_correct: false },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800001), is_correct: true },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800010), is_correct: false },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800000), is_correct: true },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800002), is_correct: false },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800001), is_correct: true },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800010), is_correct: false },\n\n    // 64-bit normals\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00010, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00020, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00030, 0x00000002), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00040, 0x00000002), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00050, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00060, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00070, 0x00000002), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00080, 0x00000002), is_correct: false },\n  ])\n  .fn(t => {\n    const test_val = t.params.test_val;\n    const target = t.params.target;\n    const is_correct = t.params.is_correct;\n\n    const got = correctlyRounded(test_val, target);\n    t.expect(\n      got === is_correct,\n      `correctlyRounded(${test_val}, ${target}) returned ${got}. Expected ${is_correct}`\n    );\n  });\n\ng.test('test,math,correctlyRoundedNoFlushOnly')\n  .paramsSubcasesOnly<correctlyRoundedCase>([\n    // NaN Cases\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(0x7fffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(0xffffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: NaN, is_correct: false },\n\n    // Infinities\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.POSITIVE_INFINITY, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.POSITIVE_INFINITY, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.NEGATIVE_INFINITY, is_correct: true },\n\n    // Zeros\n    { test_val: f32Bits(kBit.f32.positive.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: 0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: 0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: 0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: 0, is_correct: false },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: -0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: -0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: -0, is_correct: false },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: -0, is_correct: false },\n\n    // 32-bit subnormals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n\n    // 64-bit subnormals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n\n    // 32-bit normals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.max), target: hexToF32(kBit.f32.positive.max), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.min), target: hexToF32(kBit.f32.positive.min), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.max), target: hexToF32(kBit.f32.negative.max), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.min), target: hexToF32(kBit.f32.negative.min), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800000), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800002), is_correct: false },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800001), is_correct: true },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800010), is_correct: false },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800000), is_correct: true },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800002), is_correct: false },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800001), is_correct: true },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800010), is_correct: false },\n\n    // 64-bit normals\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00010, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00020, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00030, 0x00000002), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00040, 0x00000002), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00050, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00060, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00070, 0x00000002), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00080, 0x00000002), is_correct: false },\n  ])\n  .fn(t => {\n    const test_val = t.params.test_val;\n    const target = t.params.target;\n    const is_correct = t.params.is_correct;\n\n    const got = correctlyRounded(test_val, target, false, true);\n    t.expect(\n      got === is_correct,\n      `correctlyRounded(${test_val}, ${target}) returned ${got}. Expected ${is_correct}`\n    );\n  });\n\ng.test('test,math,correctlyRoundedFlushToZeroOnly')\n  .paramsSubcasesOnly<correctlyRoundedCase>([\n    // NaN Cases\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: NaN, is_correct: true },\n    { test_val: f32Bits(0x7fffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(0xffffffff), target: NaN, is_correct: true },\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.positive.zero), target: NaN, is_correct: false },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: NaN, is_correct: false },\n\n    // Infinities\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.POSITIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.POSITIVE_INFINITY, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.POSITIVE_INFINITY, is_correct: false },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.positive.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.s), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.nan.negative.q), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0x7fffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    { test_val: f32Bits(0xffffffff), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.positive), target: Number.NEGATIVE_INFINITY, is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.infinity.negative), target: Number.NEGATIVE_INFINITY, is_correct: true },\n\n    // Zeros\n    { test_val: f32Bits(kBit.f32.positive.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: 0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: 0, is_correct: true },\n\n    { test_val: f32Bits(kBit.f32.positive.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.negative.zero), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: -0, is_correct: true },\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: -0, is_correct: true },\n\n    // 32-bit subnormals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.min).value as number, is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.positive.max).value as number, is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.max).value as number, is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.min), target: f32Bits(kBit.f32.subnormal.negative.min).value as number, is_correct: true },\n\n    // 64-bit subnormals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000001), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.positive.min), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x00000000, 0x00000002), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xffffffff), is_correct: true },\n\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.subnormal.negative.max), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.zero), target: hexToFloat64(0x800fffff, 0xfffffffe), is_correct: true },\n\n    // 32-bit normals\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.max), target: hexToF32(kBit.f32.positive.max), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.positive.min), target: hexToF32(kBit.f32.positive.min), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.max), target: hexToF32(kBit.f32.negative.max), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(kBit.f32.negative.min), target: hexToF32(kBit.f32.negative.min), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800000), is_correct: true },\n    { test_val: f32Bits(0x03800000), target: hexToF32(0x03800002), is_correct: false },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800001), is_correct: true },\n    { test_val: f32Bits(0x03800001), target: hexToF32(0x03800010), is_correct: false },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800000), is_correct: true },\n    { test_val: f32Bits(0x83800000), target: hexToF32(0x83800002), is_correct: false },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800001), is_correct: true },\n    { test_val: f32Bits(0x83800001), target: hexToF32(0x83800010), is_correct: false },\n\n    // 64-bit normals\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00010, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00020, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800000), target: hexToFloat64(0x3ff00030, 0x00000002), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0x3f800001), target: hexToFloat64(0x3ff00040, 0x00000002), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00050, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000001), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00060, 0x00000001), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800000), target: hexToFloat64(0xbff00070, 0x00000002), is_correct: false },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00000, 0x00000002), is_correct: true },\n    // prettier-ignore\n    { test_val: f32Bits(0xbf800001), target: hexToFloat64(0xbff00080, 0x00000002), is_correct: false },\n  ])\n  .fn(t => {\n    const test_val = t.params.test_val;\n    const target = t.params.target;\n    const is_correct = t.params.is_correct;\n\n    const got = correctlyRounded(test_val, target, true, false);\n    t.expect(\n      got === is_correct,\n      `correctlyRounded(${test_val}, ${target}) returned ${got}. Expected ${is_correct}`\n    );\n  });\n\ninterface lerpCase {\n  min: number;\n  max: number;\n  t: number;\n  result: number;\n}\n\ng.test('test,math,lerp')\n  .paramsSimple<lerpCase>([\n    // Infinite cases\n    { min: 0.0, max: Number.POSITIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { min: Number.NEGATIVE_INFINITY, max: 1.0, t: 0.5, result: Number.NaN },\n    { min: Number.NEGATIVE_INFINITY, max: Number.POSITIVE_INFINITY, t: 0.5, result: Number.NaN },\n    { min: 0.0, max: 1.0, t: Number.NEGATIVE_INFINITY, result: Number.NaN },\n    { min: 0.0, max: 1.0, t: Number.POSITIVE_INFINITY, result: Number.NaN },\n\n    // [0.0, 1.0] cases\n    { min: 0.0, max: 1.0, t: -1.0, result: -1.0 },\n    { min: 0.0, max: 1.0, t: 0.0, result: 0.0 },\n    { min: 0.0, max: 1.0, t: 0.1, result: 0.1 },\n    { min: 0.0, max: 1.0, t: 0.01, result: 0.01 },\n    { min: 0.0, max: 1.0, t: 0.001, result: 0.001 },\n    { min: 0.0, max: 1.0, t: 0.25, result: 0.25 },\n    { min: 0.0, max: 1.0, t: 0.5, result: 0.5 },\n    { min: 0.0, max: 1.0, t: 0.9, result: 0.9 },\n    { min: 0.0, max: 1.0, t: 0.99, result: 0.99 },\n    { min: 0.0, max: 1.0, t: 0.999, result: 0.999 },\n    { min: 0.0, max: 1.0, t: 1.0, result: 1.0 },\n    { min: 0.0, max: 1.0, t: 2.0, result: 2.0 },\n\n    // [0.0, 10.0] cases\n    { min: 0.0, max: 10.0, t: -1.0, result: -10.0 },\n    { min: 0.0, max: 10.0, t: 0.0, result: 0.0 },\n    { min: 0.0, max: 10.0, t: 0.1, result: 1.0 },\n    { min: 0.0, max: 10.0, t: 0.01, result: 0.1 },\n    { min: 0.0, max: 10.0, t: 0.001, result: 0.01 },\n    { min: 0.0, max: 10.0, t: 0.25, result: 2.5 },\n    { min: 0.0, max: 10.0, t: 0.5, result: 5.0 },\n    { min: 0.0, max: 10.0, t: 0.9, result: 9.0 },\n    { min: 0.0, max: 10.0, t: 0.99, result: 9.9 },\n    { min: 0.0, max: 10.0, t: 0.999, result: 9.99 },\n    { min: 0.0, max: 10.0, t: 1.0, result: 10.0 },\n    { min: 0.0, max: 10.0, t: 2.0, result: 20.0 },\n\n    // [2.0, 10.0] cases\n    { min: 2.0, max: 10.0, t: -1.0, result: -6.0 },\n    { min: 2.0, max: 10.0, t: 0.0, result: 2.0 },\n    { min: 2.0, max: 10.0, t: 0.1, result: 2.8 },\n    { min: 2.0, max: 10.0, t: 0.01, result: 2.08 },\n    { min: 2.0, max: 10.0, t: 0.001, result: 2.008 },\n    { min: 2.0, max: 10.0, t: 0.25, result: 4.0 },\n    { min: 2.0, max: 10.0, t: 0.5, result: 6.0 },\n    { min: 2.0, max: 10.0, t: 0.9, result: 9.2 },\n    { min: 2.0, max: 10.0, t: 0.99, result: 9.92 },\n    { min: 2.0, max: 10.0, t: 0.999, result: 9.992 },\n    { min: 2.0, max: 10.0, t: 1.0, result: 10.0 },\n    { min: 2.0, max: 10.0, t: 2.0, result: 18.0 },\n\n    // [-1.0, 1.0] cases\n    { min: -1.0, max: 1.0, t: -2.0, result: -5.0 },\n    { min: -1.0, max: 1.0, t: 0.0, result: -1.0 },\n    { min: -1.0, max: 1.0, t: 0.1, result: -0.8 },\n    { min: -1.0, max: 1.0, t: 0.01, result: -0.98 },\n    { min: -1.0, max: 1.0, t: 0.001, result: -0.998 },\n    { min: -1.0, max: 1.0, t: 0.25, result: -0.5 },\n    { min: -1.0, max: 1.0, t: 0.5, result: 0.0 },\n    { min: -1.0, max: 1.0, t: 0.9, result: 0.8 },\n    { min: -1.0, max: 1.0, t: 0.99, result: 0.98 },\n    { min: -1.0, max: 1.0, t: 0.999, result: 0.998 },\n    { min: -1.0, max: 1.0, t: 1.0, result: 1.0 },\n    { min: -1.0, max: 1.0, t: 2.0, result: 3.0 },\n\n    // [-1.0, 0.0] cases\n    { min: -1.0, max: 0.0, t: -1.0, result: -2.0 },\n    { min: -1.0, max: 0.0, t: 0.0, result: -1.0 },\n    { min: -1.0, max: 0.0, t: 0.1, result: -0.9 },\n    { min: -1.0, max: 0.0, t: 0.01, result: -0.99 },\n    { min: -1.0, max: 0.0, t: 0.001, result: -0.999 },\n    { min: -1.0, max: 0.0, t: 0.25, result: -0.75 },\n    { min: -1.0, max: 0.0, t: 0.5, result: -0.5 },\n    { min: -1.0, max: 0.0, t: 0.9, result: -0.1 },\n    { min: -1.0, max: 0.0, t: 0.99, result: -0.01 },\n    { min: -1.0, max: 0.0, t: 0.999, result: -0.001 },\n    { min: -1.0, max: 0.0, t: 1.0, result: 0.0 },\n    { min: -1.0, max: 0.0, t: 2.0, result: 1.0 },\n\n    // [0.0, -1.0] cases\n    { min: 0.0, max: -1.0, t: -1.0, result: 1.0 },\n    { min: 0.0, max: -1.0, t: 0.0, result: 0.0 },\n    { min: 0.0, max: -1.0, t: 0.1, result: -0.1 },\n    { min: 0.0, max: -1.0, t: 0.01, result: -0.01 },\n    { min: 0.0, max: -1.0, t: 0.001, result: -0.001 },\n    { min: 0.0, max: -1.0, t: 0.25, result: -0.25 },\n    { min: 0.0, max: -1.0, t: 0.5, result: -0.5 },\n    { min: 0.0, max: -1.0, t: 0.9, result: -0.9 },\n    { min: 0.0, max: -1.0, t: 0.99, result: -0.99 },\n    { min: 0.0, max: -1.0, t: 0.999, result: -0.999 },\n    { min: 0.0, max: -1.0, t: 1.0, result: -1.0 },\n    { min: 0.0, max: -1.0, t: 2.0, result: -2.0 },\n  ])\n  .fn(test => {\n    const min = test.params.min;\n    const max = test.params.max;\n    const t = test.params.t;\n    const got = lerp(min, max, t);\n    const expect = test.params.result;\n\n    test.expect(\n      1 >= diffULP(got, expect) || (Number.isNaN(got) && Number.isNaN(expect)),\n      `lerp(${min}, ${max}, ${t}) returned ${got}. Expected ${expect}`\n    );\n  });\n\ninterface rangeCase {\n  min: Scalar;\n  max: Scalar;\n  num_steps: Scalar;\n  result: Array<number>;\n}\n\ng.test('test,math,linearRange')\n  .paramsSimple<rangeCase>([\n    // prettier-ignore\n    { min: f32(0.0), max: f32(Number.POSITIVE_INFINITY), num_steps: u32(10), result: new Array<number>(10).fill(Number.NaN) },\n    // prettier-ignore\n    { min: f32(Number.NEGATIVE_INFINITY), max: f32(1.0), num_steps: u32(10), result: new Array<number>(10).fill(Number.NaN) },\n    // prettier-ignore\n    { min: f32(Number.NEGATIVE_INFINITY), max: f32(Number.POSITIVE_INFINITY), num_steps: u32(10), result: new Array<number>(10).fill(Number.NaN) },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(0.0), num_steps: u32(10), result: new Array<number>(10).fill(0.0) },\n    // prettier-ignore\n    { min: f32(10.0), max: f32(10.0), num_steps: u32(10), result: new Array<number>(10).fill(10.0) },\n    { min: f32(0.0), max: f32(10.0), num_steps: u32(1), result: [0.0] },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(10.0), num_steps: u32(11), result: [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0] },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(1000.0), num_steps: u32(11), result: [0.0, 100.0, 200.0, 300.0, 400.0, 500.0, 600.0, 700.0, 800.0, 900.0, 1000.0] },\n    // prettier-ignore\n    { min: f32(1.0), max: f32(5.0), num_steps: u32(5), result: [1.0, 2.0, 3.0, 4.0, 5.0] },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(1.0), num_steps: u32(11), result: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0] },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(1.0), num_steps: u32(5), result: [0.0, 0.25, 0.5, 0.75, 1.0] },\n    // prettier-ignore\n    { min: f32(-1.0), max: f32(1.0), num_steps: u32(11), result: [-1.0, -0.8, -0.6, -0.4, -0.2, 0.0, 0.2, 0.4, 0.6, 0.8, 1.0] },\n    // prettier-ignore\n    { min: f32(-1.0), max: f32(0), num_steps: u32(11), result: [-1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0.0] },\n  ])\n  .fn(test => {\n    const min = test.params.min;\n    const max = test.params.max;\n    const num_steps = test.params.num_steps;\n    const got = linearRange(min, max, num_steps);\n    const expect = test.params.result;\n\n    test.expect(\n      compareArrayOfNumbers(got, expect),\n      `linearRange(${min}, ${max}, ${num_steps}) returned ${got}. Expected ${expect}`\n    );\n  });\n\ng.test('test,math,biasedRange')\n  .paramsSimple<rangeCase>([\n    // prettier-ignore\n    { min: f32(0.0), max: f32(Number.POSITIVE_INFINITY), num_steps: u32(10), result: new Array<number>(10).fill(Number.NaN) },\n    // prettier-ignore\n    { min: f32(Number.NEGATIVE_INFINITY), max: f32(1.0), num_steps: u32(10), result: new Array<number>(10).fill(Number.NaN) },\n    // prettier-ignore\n    { min: f32(Number.NEGATIVE_INFINITY), max: f32(Number.POSITIVE_INFINITY), num_steps: u32(10), result: new Array<number>(10).fill(Number.NaN) },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(0.0), num_steps: u32(10), result: new Array<number>(10).fill(0.0) },\n    // prettier-ignore\n    { min: f32(10.0), max: f32(10.0), num_steps: u32(10), result: new Array<number>(10).fill(10.0) },\n    { min: f32(0.0), max: f32(10.0), num_steps: u32(1), result: [0.0] },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(10.0), num_steps: u32(11), result: [0, 0.1, 0.4, 0.9, 1.6,2.5,3.6,4.9,6.4,8.1,10] },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(1000.0), num_steps: u32(11), result: [0.0, 10.0, 40.0, 90.0, 160.0, 250.0, 360.0, 490.0, 640.0, 810.0, 1000.0] },\n    // prettier-ignore\n    { min: f32(1.0), max: f32(5.0), num_steps: u32(5), result: [1.0, 1.25, 2.0, 3.25, 5.0] },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(1.0), num_steps: u32(11), result: [0, 0.01, 0.04, 0.09, 0.16, 0.25 , 0.36, 0.49, 0.64, 0.81, 1.0] },\n    // prettier-ignore\n    { min: f32(0.0), max: f32(1.0), num_steps: u32(5), result: [0.0, 0.0625, 0.25, 0.5625, 1.0] },\n    // prettier-ignore\n    { min: f32(-1.0), max: f32(1.0), num_steps: u32(11), result: [-1.0, -0.98, -0.92, -0.82, -0.68, -0.5, -0.28 ,-0.02, 0.28, 0.62, 1.0] },\n    // prettier-ignore\n    { min: f32(-1.0), max: f32(0), num_steps: u32(11), result: [-1.0 , -0.99, -0.96, -0.91, -0.84, -0.75, -0.64, -0.51, -0.36, -0.19, 0.0] },\n  ])\n  .fn(test => {\n    const min = test.params.min;\n    const max = test.params.max;\n    const num_steps = test.params.num_steps;\n    const got = biasedRange(min, max, num_steps);\n    const expect = test.params.result;\n\n    test.expect(\n      compareArrayOfNumbers(got, expect),\n      `biasedRange(${min}, ${max}, ${num_steps}) returned ${got}. Expected ${expect}`\n    );\n  });\n"],"file":"maths.spec.js"}