{"version":3,"file":"serialization.spec.js","names":["description","getIsBuildingDataCache","setIsBuildingDataCache","makeTestGroup","objectEquals","deserializeExpectation","serializeExpectation","anyOf","deserializeComparator","skipUndefined","kValue","bool","deserializeValue","f16","f32","i16","i32","i8","serializeValue","u16","u32","u8","vec2","vec3","vec4","deserializeF32Interval","serializeF32Interval","toF32Interval","UnitTest","g","test","fn","t","value","min","max","negative","positive","subnormal","infinity","serialized","deserialized","expect","interval","expectation","enableBuildingDataCache","f","wasBuildingDataCache","c","comparator","testCases","val","got","matched","undefined"],"sources":["../../src/unittests/serialization.spec.ts"],"sourcesContent":["export const description = `Unit tests for data cache serialization`;\n\nimport { getIsBuildingDataCache, setIsBuildingDataCache } from '../common/framework/data_cache.js';\nimport { makeTestGroup } from '../common/internal/test_group.js';\nimport { objectEquals } from '../common/util/util.js';\nimport {\n  deserializeExpectation,\n  serializeExpectation,\n} from '../webgpu/shader/execution/expression/case_cache.js';\nimport {\n  anyOf,\n  deserializeComparator,\n  SerializedComparator,\n  skipUndefined,\n} from '../webgpu/util/compare.js';\nimport { kValue } from '../webgpu/util/constants.js';\nimport {\n  bool,\n  deserializeValue,\n  f16,\n  f32,\n  i16,\n  i32,\n  i8,\n  serializeValue,\n  u16,\n  u32,\n  u8,\n  vec2,\n  vec3,\n  vec4,\n} from '../webgpu/util/conversion.js';\nimport {\n  deserializeF32Interval,\n  serializeF32Interval,\n  toF32Interval,\n} from '../webgpu/util/f32_interval.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\ng.test('value').fn(t => {\n  for (const value of [\n    u32(kValue.u32.min + 0),\n    u32(kValue.u32.min + 1),\n    u32(kValue.u32.min + 2),\n    u32(kValue.u32.max - 2),\n    u32(kValue.u32.max - 1),\n    u32(kValue.u32.max - 0),\n\n    u16(kValue.u16.min + 0),\n    u16(kValue.u16.min + 1),\n    u16(kValue.u16.min + 2),\n    u16(kValue.u16.max - 2),\n    u16(kValue.u16.max - 1),\n    u16(kValue.u16.max - 0),\n\n    u8(kValue.u8.min + 0),\n    u8(kValue.u8.min + 1),\n    u8(kValue.u8.min + 2),\n    u8(kValue.u8.max - 2),\n    u8(kValue.u8.max - 1),\n    u8(kValue.u8.max - 0),\n\n    i32(kValue.i32.negative.min + 0),\n    i32(kValue.i32.negative.min + 1),\n    i32(kValue.i32.negative.min + 2),\n    i32(kValue.i32.negative.max - 2),\n    i32(kValue.i32.negative.max - 1),\n    i32(kValue.i32.positive.min - 0),\n    i32(kValue.i32.positive.min + 1),\n    i32(kValue.i32.positive.min + 2),\n    i32(kValue.i32.positive.max - 2),\n    i32(kValue.i32.positive.max - 1),\n    i32(kValue.i32.positive.max - 0),\n\n    i16(kValue.i16.negative.min + 0),\n    i16(kValue.i16.negative.min + 1),\n    i16(kValue.i16.negative.min + 2),\n    i16(kValue.i16.negative.max - 2),\n    i16(kValue.i16.negative.max - 1),\n    i16(kValue.i16.positive.min + 0),\n    i16(kValue.i16.positive.min + 1),\n    i16(kValue.i16.positive.min + 2),\n    i16(kValue.i16.positive.max - 2),\n    i16(kValue.i16.positive.max - 1),\n    i16(kValue.i16.positive.max - 0),\n\n    i8(kValue.i8.negative.min + 0),\n    i8(kValue.i8.negative.min + 1),\n    i8(kValue.i8.negative.min + 2),\n    i8(kValue.i8.negative.max - 2),\n    i8(kValue.i8.negative.max - 1),\n    i8(kValue.i8.positive.min + 0),\n    i8(kValue.i8.positive.min + 1),\n    i8(kValue.i8.positive.min + 2),\n    i8(kValue.i8.positive.max - 2),\n    i8(kValue.i8.positive.max - 1),\n    i8(kValue.i8.positive.max - 0),\n\n    f32(0),\n    f32(-0),\n    f32(1),\n    f32(-1),\n    f32(0.5),\n    f32(-0.5),\n    f32(kValue.f32.positive.max),\n    f32(kValue.f32.positive.min),\n    f32(kValue.f32.subnormal.positive.max),\n    f32(kValue.f32.subnormal.positive.min),\n    f32(kValue.f32.subnormal.negative.max),\n    f32(kValue.f32.subnormal.negative.min),\n    f32(kValue.f32.infinity.positive),\n    f32(kValue.f32.infinity.negative),\n\n    f16(0),\n    f16(-0),\n    f16(1),\n    f16(-1),\n    f16(0.5),\n    f16(-0.5),\n    f16(kValue.f32.positive.max),\n    f16(kValue.f32.positive.min),\n    f16(kValue.f32.subnormal.positive.max),\n    f16(kValue.f32.subnormal.positive.min),\n    f16(kValue.f32.subnormal.negative.max),\n    f16(kValue.f32.subnormal.negative.min),\n    f16(kValue.f32.infinity.positive),\n    f16(kValue.f32.infinity.negative),\n\n    bool(true),\n    bool(false),\n\n    vec2(f32(1), f32(2)),\n    vec3(u32(1), u32(2), u32(3)),\n    vec4(bool(false), bool(true), bool(false), bool(true)),\n  ]) {\n    const serialized = serializeValue(value);\n    const deserialized = deserializeValue(serialized);\n    t.expect(\n      objectEquals(value, deserialized),\n      `value ${value} -> serialize -> deserialize -> ${deserialized}`\n    );\n  }\n});\n\ng.test('f32_interval').fn(t => {\n  for (const interval of [\n    toF32Interval(0),\n    toF32Interval(-0),\n    toF32Interval(1),\n    toF32Interval(-1),\n    toF32Interval(0.5),\n    toF32Interval(-0.5),\n    toF32Interval(kValue.f32.positive.max),\n    toF32Interval(kValue.f32.positive.min),\n    toF32Interval(kValue.f32.subnormal.positive.max),\n    toF32Interval(kValue.f32.subnormal.positive.min),\n    toF32Interval(kValue.f32.subnormal.negative.max),\n    toF32Interval(kValue.f32.subnormal.negative.min),\n    toF32Interval(kValue.f32.infinity.positive),\n    toF32Interval(kValue.f32.infinity.negative),\n\n    toF32Interval([-0, 0]),\n    toF32Interval([-1, 1]),\n    toF32Interval([-0.5, 0.5]),\n    toF32Interval([kValue.f32.positive.min, kValue.f32.positive.max]),\n    toF32Interval([kValue.f32.subnormal.positive.min, kValue.f32.subnormal.positive.max]),\n    toF32Interval([kValue.f32.subnormal.negative.min, kValue.f32.subnormal.negative.max]),\n    toF32Interval([kValue.f32.infinity.negative, kValue.f32.infinity.positive]),\n  ]) {\n    const serialized = serializeF32Interval(interval);\n    const deserialized = deserializeF32Interval(serialized);\n    t.expect(\n      objectEquals(interval, deserialized),\n      `interval ${interval} -> serialize -> deserialize -> ${deserialized}`\n    );\n  }\n});\n\ng.test('expression_expectation').fn(t => {\n  for (const expectation of [\n    // Value\n    f32(123),\n    vec2(f32(1), f32(2)),\n    // Interval\n    toF32Interval([-0.5, 0.5]),\n    toF32Interval([kValue.f32.positive.min, kValue.f32.positive.max]),\n    // Intervals\n    [toF32Interval([-8.0, 0.5]), toF32Interval([2.0, 4.0])],\n  ]) {\n    const serialized = serializeExpectation(expectation);\n    const deserialized = deserializeExpectation(serialized);\n    t.expect(\n      objectEquals(expectation, deserialized),\n      `expectation ${expectation} -> serialize -> deserialize -> ${deserialized}`\n    );\n  }\n});\n\n/**\n * Temporarily enabled building of the data cache.\n * Required for Comparators to serialize.\n */\nfunction enableBuildingDataCache(f: () => void) {\n  const wasBuildingDataCache = getIsBuildingDataCache();\n  setIsBuildingDataCache(true);\n  f();\n  setIsBuildingDataCache(wasBuildingDataCache);\n}\n\ng.test('anyOf').fn(t => {\n  enableBuildingDataCache(() => {\n    for (const c of [\n      {\n        comparator: anyOf(i32(123)),\n        testCases: [f32(0), f32(10), f32(122), f32(123), f32(124), f32(200)],\n      },\n    ]) {\n      const serialized = c.comparator as SerializedComparator;\n      const deserialized = deserializeComparator(serialized);\n      for (const val of c.testCases) {\n        const got = deserialized(val);\n        const expect = c.comparator(val);\n        t.expect(\n          got.matched === expect.matched,\n          `comparator(${val}): got: ${expect.matched}, expect: ${got.matched}`\n        );\n      }\n    }\n  });\n});\n\ng.test('skipUndefined').fn(t => {\n  enableBuildingDataCache(() => {\n    for (const c of [\n      {\n        comparator: skipUndefined(i32(123)),\n        testCases: [f32(0), f32(10), f32(122), f32(123), f32(124), f32(200)],\n      },\n      {\n        comparator: skipUndefined(undefined),\n        testCases: [f32(0), f32(10), f32(122), f32(123), f32(124), f32(200)],\n      },\n    ]) {\n      const serialized = c.comparator as SerializedComparator;\n      const deserialized = deserializeComparator(serialized);\n      for (const val of c.testCases) {\n        const got = deserialized(val);\n        const expect = c.comparator(val);\n        t.expect(\n          got.matched === expect.matched,\n          `comparator(${val}): got: ${expect.matched}, expect: ${got.matched}`\n        );\n      }\n    }\n  });\n});\n"],"mappings":"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"}