{"version":3,"sources":["../../src/unittests/test_group.spec.ts"],"names":["description","makeTestGroup","makeTestGroupForUnitTesting","assert","TestGroupTest","UnitTest","g","test","fn","t0","seen","count","t","paramsSimple","a","run","expect","Counter","doNestedThrow1","Error","doNestedThrow2","fail","res","search","size","logs","values","undefined","some","l","toJSON","length","shouldThrow","validate","builder","params","u","expandWithParams","b","_b","badChars","Array","from","char","name","x","JSON","stringify","badChar","paramsSubcasesOnly","combineWithParams","gen","ret","beginSubcases","result","every","v","status","TypeError","shouldReject"],"mappings":"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","sourcesContent":["export const description = `\nUnit tests for TestGroup.\n`;\n\nimport { Fixture } from '../common/framework/fixture.js';\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport { makeTestGroupForUnitTesting } from '../common/internal/test_group.js';\nimport { assert } from '../common/util/util.js';\n\nimport { TestGroupTest } from './test_group_test.js';\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(TestGroupTest);\n\ng.test('UnitTest_fixture').fn(async t0 => {\n  let seen = 0;\n  function count(t: Fixture): void {\n    seen++;\n  }\n\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('test').fn(count);\n  g.test('testp')\n    .paramsSimple([{ a: 1 }])\n    .fn(count);\n\n  await t0.run(g);\n  t0.expect(seen === 2);\n});\n\ng.test('custom_fixture').fn(async t0 => {\n  let seen = 0;\n  class Counter extends UnitTest {\n    count(): void {\n      seen++;\n    }\n  }\n\n  const g = makeTestGroupForUnitTesting(Counter);\n\n  g.test('test').fn(t => {\n    t.count();\n  });\n  g.test('testp')\n    .paramsSimple([{ a: 1 }])\n    .fn(t => {\n      t.count();\n    });\n\n  await t0.run(g);\n  t0.expect(seen === 2);\n});\n\ng.test('stack').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  const doNestedThrow1 = () => {\n    throw new Error('goodbye');\n  };\n\n  const doNestedThrow2 = () => doNestedThrow1();\n\n  g.test('fail').fn(t => {\n    t.fail();\n  });\n  g.test('throw').fn(t => {\n    throw new Error('hello');\n  });\n  g.test('throw_nested').fn(t => {\n    doNestedThrow2();\n  });\n\n  const res = await t0.run(g);\n\n  const search = /unittests[/\\\\]test_group\\.spec\\.[tj]s/;\n  t0.expect(res.size > 0);\n  for (const { logs } of res.values()) {\n    assert(logs !== undefined, 'expected logs');\n    t0.expect(logs.some(l => search.test(l.toJSON())));\n    t0.expect(search.test(logs[logs.length - 1].toJSON()));\n  }\n});\n\ng.test('no_fn').fn(t => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('missing');\n\n  t.shouldThrow('Error', () => {\n    g.validate();\n  });\n});\n\ng.test('duplicate_test_name').fn(t => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n  g.test('abc').fn(() => {});\n\n  t.shouldThrow('Error', () => {\n    g.test('abc').fn(() => {});\n  });\n});\n\ng.test('duplicate_test_params,none').fn(() => {\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .paramsSimple([])\n      .fn(() => {});\n    g.validate();\n  }\n\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc').fn(() => {});\n    g.validate();\n  }\n\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .paramsSimple([\n        { a: 1 }, //\n      ])\n      .fn(() => {});\n    g.validate();\n  }\n});\n\ng.test('duplicate_test_params,basic').fn(t => {\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    const builder = g.test('abc');\n    t.shouldThrow('Error', () => {\n      builder.paramsSimple([\n        { a: 1 }, //\n        { a: 1 },\n      ]);\n      g.validate();\n    });\n  }\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .params(u =>\n        u.expandWithParams(() => [\n          { a: 1 }, //\n          { a: 1 },\n        ])\n      )\n      .fn(() => {});\n    t.shouldThrow('Error', () => {\n      g.validate();\n    });\n  }\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .paramsSimple([\n        { a: 1, b: 3 }, //\n        { b: 3, a: 1 },\n      ])\n      .fn(() => {});\n    t.shouldThrow('Error', () => {\n      g.validate();\n    });\n  }\n});\n\ng.test('duplicate_test_params,with_different_private_params').fn(t => {\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    const builder = g.test('abc');\n    t.shouldThrow('Error', () => {\n      builder.paramsSimple([\n        { a: 1, _b: 1 }, //\n        { a: 1, _b: 2 },\n      ]);\n    });\n  }\n  {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    g.test('abc')\n      .params(u =>\n        u.expandWithParams(() => [\n          { a: 1, _b: 1 }, //\n          { a: 1, _b: 2 },\n        ])\n      )\n      .fn(() => {});\n    t.shouldThrow('Error', () => {\n      g.validate();\n    });\n  }\n});\n\ng.test('invalid_test_name').fn(t => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  const badChars = Array.from('\"`~@#$+=\\\\|!^&*[]<>{}-\\'. ');\n  for (const char of badChars) {\n    const name = 'a' + char + 'b';\n    t.shouldThrow(\n      'Error',\n      () => {\n        g.test(name).fn(() => {});\n      },\n      name\n    );\n  }\n});\n\ng.test('param_value,valid').fn(() => {\n  const g = makeTestGroup(UnitTest);\n  g.test('a').paramsSimple([{ x: JSON.stringify({ a: 1, b: 2 }) }]);\n});\n\ng.test('param_value,invalid').fn(t => {\n  for (const badChar of ';=*') {\n    const g = makeTestGroupForUnitTesting(UnitTest);\n    const builder = g.test('a');\n    t.shouldThrow('Error', () => {\n      builder.paramsSimple([{ badChar }]);\n    });\n  }\n});\n\ng.test('subcases').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n  g.test('a')\n    .paramsSubcasesOnly(u =>\n      u //\n        .combineWithParams([{ a: 1 }])\n    )\n    .fn(t => {\n      t.expect(t.params.a === 1, 'a must be 1');\n    });\n\n  function* gen({ a, b }: { a?: number; b?: number }) {\n    if (b === 2) {\n      yield { ret: 2 };\n    } else if (a === 1) {\n      yield { ret: 1 };\n    } else {\n      yield { ret: -1 };\n    }\n  }\n  g.test('b')\n    .params(u =>\n      u\n        .combineWithParams([{ a: 1 }, { b: 2 }])\n        .beginSubcases()\n        .expandWithParams(gen)\n    )\n    .fn(t => {\n      const { a, b, ret } = t.params;\n      t.expect((a === 1 && ret === 1) || (b === 2 && ret === 2));\n    });\n\n  const result = await t0.run(g);\n  t0.expect(Array.from(result.values()).every(v => v.status === 'pass'));\n});\n\ng.test('throws').fn(async t0 => {\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('a').fn(t => {\n    throw new Error();\n  });\n\n  const result = await t0.run(g);\n  const values = Array.from(result.values());\n  t0.expect(values.length === 1);\n  t0.expect(values[0].status === 'fail');\n});\n\ng.test('shouldThrow').fn(async t0 => {\n  t0.shouldThrow('TypeError', () => {\n    throw new TypeError();\n  });\n\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('a').fn(t => {\n    t.shouldThrow('Error', () => {\n      throw new TypeError();\n    });\n  });\n\n  const result = await t0.run(g);\n  const values = Array.from(result.values());\n  t0.expect(values.length === 1);\n  t0.expect(values[0].status === 'fail');\n});\n\ng.test('shouldReject').fn(async t0 => {\n  t0.shouldReject(\n    'TypeError',\n    (async () => {\n      throw new TypeError();\n    })()\n  );\n\n  const g = makeTestGroupForUnitTesting(UnitTest);\n\n  g.test('a').fn(async t => {\n    t.shouldReject(\n      'Error',\n      (async () => {\n        throw new TypeError();\n      })()\n    );\n  });\n\n  const result = await t0.run(g);\n  // Fails even though shouldReject doesn't fail until after the test function ends\n  const values = Array.from(result.values());\n  t0.expect(values.length === 1);\n  t0.expect(values[0].status === 'fail');\n});\n"],"file":"test_group.spec.js"}