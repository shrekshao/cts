{"version":3,"sources":["../../src/unittests/test_query.spec.ts"],"names":["description","makeTestGroup","TestQueryMultiFile","TestQueryMultiTest","TestQueryMultiCase","TestQuerySingleCase","UnitTest","F","expectToString","q","exp","expect","toString","g","test","fn","t","shouldThrow","x","y"],"mappings":"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","sourcesContent":["export const description = `\nTests for TestQuery\n`;\nimport { makeTestGroup } from '../common/framework/test_group.js';\nimport {\n  TestQueryMultiFile,\n  TestQueryMultiTest,\n  TestQueryMultiCase,\n  TestQuerySingleCase,\n  TestQuery,\n} from '../common/internal/query/query.js';\n\nimport { UnitTest } from './unit_test.js';\n\nclass F extends UnitTest {\n  expectToString(q: TestQuery, exp: string) {\n    this.expect(q.toString() === exp);\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('constructor').fn(t => {\n  t.shouldThrow('Error', () => new TestQueryMultiTest('suite', [], []));\n\n  t.shouldThrow('Error', () => new TestQueryMultiCase('suite', ['a'], [], {}));\n  t.shouldThrow('Error', () => new TestQueryMultiCase('suite', [], ['c'], {}));\n  t.shouldThrow('Error', () => new TestQueryMultiCase('suite', [], [], {}));\n\n  t.shouldThrow('Error', () => new TestQuerySingleCase('suite', ['a'], [], {}));\n  t.shouldThrow('Error', () => new TestQuerySingleCase('suite', [], ['c'], {}));\n  t.shouldThrow('Error', () => new TestQuerySingleCase('suite', [], [], {}));\n});\n\ng.test('toString').fn(t => {\n  t.expectToString(new TestQueryMultiFile('s', []), 's:*');\n  t.expectToString(new TestQueryMultiFile('s', ['a']), 's:a,*');\n  t.expectToString(new TestQueryMultiFile('s', ['a', 'b']), 's:a,b,*');\n  t.expectToString(new TestQueryMultiTest('s', ['a', 'b'], []), 's:a,b:*');\n  t.expectToString(new TestQueryMultiTest('s', ['a', 'b'], ['c']), 's:a,b:c,*');\n  t.expectToString(new TestQueryMultiTest('s', ['a', 'b'], ['c', 'd']), 's:a,b:c,d,*');\n  t.expectToString(new TestQueryMultiCase('s', ['a', 'b'], ['c', 'd'], {}), 's:a,b:c,d:*');\n  t.expectToString(\n    new TestQueryMultiCase('s', ['a', 'b'], ['c', 'd'], { x: 1 }),\n    's:a,b:c,d:x=1;*'\n  );\n  t.expectToString(\n    new TestQueryMultiCase('s', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 }),\n    's:a,b:c,d:x=1;y=2;*'\n  );\n  t.expectToString(\n    new TestQuerySingleCase('s', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 }),\n    's:a,b:c,d:x=1;y=2'\n  );\n  t.expectToString(new TestQuerySingleCase('s', ['a', 'b'], ['c', 'd'], {}), 's:a,b:c,d:');\n});\n"],"file":"test_query.spec.js"}